// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/k8s_cluster/types.proto

package k8s_cluster

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Argo CD configuration
//
// x-displayName: "Argo CD configuration"
// description
// Parameters for Argo Continuous Deployment(CD) application
type ApplicationArgoCDType struct {
	// Generated YAML
	//
	// x-displayName: "Generated YAML"
	// x-example: "value"
	// Generated YAML
	GeneratedYaml string `protobuf:"bytes,1001,opt,name=generated_yaml,json=generatedYaml,proto3" json:"generated_yaml,omitempty"`
	// ArgoCD Local Domain
	//
	// x-displayName: "ArgoCD Local Domain"
	// Local domain to access argocd for example argocd.localdomain
	LocalDomain *LocalAccessArgoCDType `protobuf:"bytes,1,opt,name=local_domain,json=localDomain,proto3" json:"local_domain,omitempty"`
}

func (m *ApplicationArgoCDType) Reset()      { *m = ApplicationArgoCDType{} }
func (*ApplicationArgoCDType) ProtoMessage() {}
func (*ApplicationArgoCDType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{0}
}
func (m *ApplicationArgoCDType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplicationArgoCDType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ApplicationArgoCDType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationArgoCDType.Merge(m, src)
}
func (m *ApplicationArgoCDType) XXX_Size() int {
	return m.Size()
}
func (m *ApplicationArgoCDType) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationArgoCDType.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationArgoCDType proto.InternalMessageInfo

func (m *ApplicationArgoCDType) GetGeneratedYaml() string {
	if m != nil {
		return m.GeneratedYaml
	}
	return ""
}

func (m *ApplicationArgoCDType) GetLocalDomain() *LocalAccessArgoCDType {
	if m != nil {
		return m.LocalDomain
	}
	return nil
}

// K8s Dashboard configuration
//
// x-displayName: "K8s Dashboard configuration"
// description
// Parameters for K8s dashboard
type ApplicationDashboardType struct {
	// Generated YAML
	//
	// x-displayName: "Generated YAML"
	// x-example: "value"
	// Generated YAML
	GeneratedYaml string `protobuf:"bytes,1001,opt,name=generated_yaml,json=generatedYaml,proto3" json:"generated_yaml,omitempty"`
}

func (m *ApplicationDashboardType) Reset()      { *m = ApplicationDashboardType{} }
func (*ApplicationDashboardType) ProtoMessage() {}
func (*ApplicationDashboardType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{1}
}
func (m *ApplicationDashboardType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplicationDashboardType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ApplicationDashboardType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationDashboardType.Merge(m, src)
}
func (m *ApplicationDashboardType) XXX_Size() int {
	return m.Size()
}
func (m *ApplicationDashboardType) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationDashboardType.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationDashboardType proto.InternalMessageInfo

func (m *ApplicationDashboardType) GetGeneratedYaml() string {
	if m != nil {
		return m.GeneratedYaml
	}
	return ""
}

// K8s Metrics Server configuration
//
// x-displayName: "K8s Metrics Server configuration"
// description
// Parameters for Kubernetes Metrics Server application
type ApplicationMetricsServerType struct {
	// Generated YAML
	//
	// x-displayName: "Generated YAML"
	// x-example: "value"
	// Generated YAML
	GeneratedYaml string `protobuf:"bytes,1001,opt,name=generated_yaml,json=generatedYaml,proto3" json:"generated_yaml,omitempty"`
}

func (m *ApplicationMetricsServerType) Reset()      { *m = ApplicationMetricsServerType{} }
func (*ApplicationMetricsServerType) ProtoMessage() {}
func (*ApplicationMetricsServerType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{2}
}
func (m *ApplicationMetricsServerType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplicationMetricsServerType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ApplicationMetricsServerType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationMetricsServerType.Merge(m, src)
}
func (m *ApplicationMetricsServerType) XXX_Size() int {
	return m.Size()
}
func (m *ApplicationMetricsServerType) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationMetricsServerType.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationMetricsServerType proto.InternalMessageInfo

func (m *ApplicationMetricsServerType) GetGeneratedYaml() string {
	if m != nil {
		return m.GeneratedYaml
	}
	return ""
}

// Prometheus configuration
//
// x-displayName: "Prometheus access configuration"
// description
// Parameters for Prometheus server access
type ApplicationPrometheusType struct {
	// Generated YAML
	//
	// x-displayName: "Generated YAML"
	// x-example: "value"
	// Generated YAML
	GeneratedYaml string `protobuf:"bytes,1001,opt,name=generated_yaml,json=generatedYaml,proto3" json:"generated_yaml,omitempty"`
}

func (m *ApplicationPrometheusType) Reset()      { *m = ApplicationPrometheusType{} }
func (*ApplicationPrometheusType) ProtoMessage() {}
func (*ApplicationPrometheusType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{3}
}
func (m *ApplicationPrometheusType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplicationPrometheusType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ApplicationPrometheusType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationPrometheusType.Merge(m, src)
}
func (m *ApplicationPrometheusType) XXX_Size() int {
	return m.Size()
}
func (m *ApplicationPrometheusType) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationPrometheusType.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationPrometheusType proto.InternalMessageInfo

func (m *ApplicationPrometheusType) GetGeneratedYaml() string {
	if m != nil {
		return m.GeneratedYaml
	}
	return ""
}

// Cluster Wide Application
//
// x-displayName: "Cluster Wide Application"
// Cluster wide application configuration
type ClusterWideAppType struct {
	// Select Cluster Wide Application
	//
	// x-displayName: "Select Cluster Wide Application"
	// x-required
	// Select cluster wide application to be configured
	//
	// Types that are valid to be assigned to AppChoice:
	//	*ClusterWideAppType_ArgoCd
	//	*ClusterWideAppType_Dashboard
	//	*ClusterWideAppType_MetricsServer
	//	*ClusterWideAppType_Prometheus
	AppChoice isClusterWideAppType_AppChoice `protobuf_oneof:"app_choice"`
}

func (m *ClusterWideAppType) Reset()      { *m = ClusterWideAppType{} }
func (*ClusterWideAppType) ProtoMessage() {}
func (*ClusterWideAppType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{4}
}
func (m *ClusterWideAppType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWideAppType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterWideAppType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWideAppType.Merge(m, src)
}
func (m *ClusterWideAppType) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWideAppType) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWideAppType.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWideAppType proto.InternalMessageInfo

type isClusterWideAppType_AppChoice interface {
	isClusterWideAppType_AppChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ClusterWideAppType_ArgoCd struct {
	ArgoCd *ApplicationArgoCDType `protobuf:"bytes,2,opt,name=argo_cd,json=argoCd,proto3,oneof" json:"argo_cd,omitempty"`
}
type ClusterWideAppType_Dashboard struct {
	Dashboard *ApplicationDashboardType `protobuf:"bytes,3,opt,name=dashboard,proto3,oneof" json:"dashboard,omitempty"`
}
type ClusterWideAppType_MetricsServer struct {
	MetricsServer *ApplicationMetricsServerType `protobuf:"bytes,4,opt,name=metrics_server,json=metricsServer,proto3,oneof" json:"metrics_server,omitempty"`
}
type ClusterWideAppType_Prometheus struct {
	Prometheus *ApplicationPrometheusType `protobuf:"bytes,5,opt,name=prometheus,proto3,oneof" json:"prometheus,omitempty"`
}

func (*ClusterWideAppType_ArgoCd) isClusterWideAppType_AppChoice()        {}
func (*ClusterWideAppType_Dashboard) isClusterWideAppType_AppChoice()     {}
func (*ClusterWideAppType_MetricsServer) isClusterWideAppType_AppChoice() {}
func (*ClusterWideAppType_Prometheus) isClusterWideAppType_AppChoice()    {}

func (m *ClusterWideAppType) GetAppChoice() isClusterWideAppType_AppChoice {
	if m != nil {
		return m.AppChoice
	}
	return nil
}

func (m *ClusterWideAppType) GetArgoCd() *ApplicationArgoCDType {
	if x, ok := m.GetAppChoice().(*ClusterWideAppType_ArgoCd); ok {
		return x.ArgoCd
	}
	return nil
}

func (m *ClusterWideAppType) GetDashboard() *ApplicationDashboardType {
	if x, ok := m.GetAppChoice().(*ClusterWideAppType_Dashboard); ok {
		return x.Dashboard
	}
	return nil
}

func (m *ClusterWideAppType) GetMetricsServer() *ApplicationMetricsServerType {
	if x, ok := m.GetAppChoice().(*ClusterWideAppType_MetricsServer); ok {
		return x.MetricsServer
	}
	return nil
}

func (m *ClusterWideAppType) GetPrometheus() *ApplicationPrometheusType {
	if x, ok := m.GetAppChoice().(*ClusterWideAppType_Prometheus); ok {
		return x.Prometheus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClusterWideAppType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClusterWideAppType_ArgoCd)(nil),
		(*ClusterWideAppType_Dashboard)(nil),
		(*ClusterWideAppType_MetricsServer)(nil),
		(*ClusterWideAppType_Prometheus)(nil),
	}
}

// Cluster Wide Application List
//
// x-displayName: "Cluster Wide Application List"
// List of cluster wide applications
type ClusterWideAppListType struct {
	// Cluster Wide Application List
	//
	// x-displayName: "Cluster Wide Application List"
	// x-required
	// List of cluster wide applications
	ClusterWideApps []*ClusterWideAppType `protobuf:"bytes,1,rep,name=cluster_wide_apps,json=clusterWideApps,proto3" json:"cluster_wide_apps,omitempty"`
}

func (m *ClusterWideAppListType) Reset()      { *m = ClusterWideAppListType{} }
func (*ClusterWideAppListType) ProtoMessage() {}
func (*ClusterWideAppListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{5}
}
func (m *ClusterWideAppListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWideAppListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterWideAppListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWideAppListType.Merge(m, src)
}
func (m *ClusterWideAppListType) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWideAppListType) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWideAppListType.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWideAppListType proto.InternalMessageInfo

func (m *ClusterWideAppListType) GetClusterWideApps() []*ClusterWideAppType {
	if m != nil {
		return m.ClusterWideApps
	}
	return nil
}

// Local Access Configuration
//
// x-displayName: "Local Access Configuration"
// Parameters required to enable local access
type LocalAccessConfigType struct {
	// Local Domain
	//
	// x-displayName: "Local Domain"
	// x-required
	// x-example: "example.com"
	// Local K8s API server will be accessible at <site name>.<local domain>.
	LocalDomain string `protobuf:"bytes,1,opt,name=local_domain,json=localDomain,proto3" json:"local_domain,omitempty"`
	// Select port for API server
	//
	// x-displayName: "Port for K8s API Server"
	// x-required
	// Select default or custom port for API server.
	//
	// Types that are valid to be assigned to PortChoice:
	//	*LocalAccessConfigType_DefaultPort
	//	*LocalAccessConfigType_Port
	PortChoice isLocalAccessConfigType_PortChoice `protobuf_oneof:"port_choice"`
}

func (m *LocalAccessConfigType) Reset()      { *m = LocalAccessConfigType{} }
func (*LocalAccessConfigType) ProtoMessage() {}
func (*LocalAccessConfigType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{6}
}
func (m *LocalAccessConfigType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocalAccessConfigType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *LocalAccessConfigType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalAccessConfigType.Merge(m, src)
}
func (m *LocalAccessConfigType) XXX_Size() int {
	return m.Size()
}
func (m *LocalAccessConfigType) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalAccessConfigType.DiscardUnknown(m)
}

var xxx_messageInfo_LocalAccessConfigType proto.InternalMessageInfo

type isLocalAccessConfigType_PortChoice interface {
	isLocalAccessConfigType_PortChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type LocalAccessConfigType_DefaultPort struct {
	DefaultPort *schema.Empty `protobuf:"bytes,3,opt,name=default_port,json=defaultPort,proto3,oneof" json:"default_port,omitempty"`
}
type LocalAccessConfigType_Port struct {
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3,oneof" json:"port,omitempty"`
}

func (*LocalAccessConfigType_DefaultPort) isLocalAccessConfigType_PortChoice() {}
func (*LocalAccessConfigType_Port) isLocalAccessConfigType_PortChoice()        {}

func (m *LocalAccessConfigType) GetPortChoice() isLocalAccessConfigType_PortChoice {
	if m != nil {
		return m.PortChoice
	}
	return nil
}

func (m *LocalAccessConfigType) GetLocalDomain() string {
	if m != nil {
		return m.LocalDomain
	}
	return ""
}

func (m *LocalAccessConfigType) GetDefaultPort() *schema.Empty {
	if x, ok := m.GetPortChoice().(*LocalAccessConfigType_DefaultPort); ok {
		return x.DefaultPort
	}
	return nil
}

func (m *LocalAccessConfigType) GetPort() uint32 {
	if x, ok := m.GetPortChoice().(*LocalAccessConfigType_Port); ok {
		return x.Port
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LocalAccessConfigType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LocalAccessConfigType_DefaultPort)(nil),
		(*LocalAccessConfigType_Port)(nil),
	}
}

// Local Access ArgoCD Configuration
//
// x-displayName: "Local Access Configuration"
// Parameters required to enable local access
type LocalAccessArgoCDType struct {
	// Local Domain
	//
	// x-displayName: "Local Domain"
	// x-required
	// x-example: "example.com"
	// ArgoCD will be accessible at <site name>.<local domain>.
	LocalDomain string `protobuf:"bytes,1,opt,name=local_domain,json=localDomain,proto3" json:"local_domain,omitempty"`
	// Select port for ArgoCD
	//
	// x-displayName: "Port for ArgoCD"
	// x-required
	// Select default or custom port for ArgoCD.
	//
	// Types that are valid to be assigned to PortChoice:
	//	*LocalAccessArgoCDType_DefaultPort
	//	*LocalAccessArgoCDType_Port
	PortChoice isLocalAccessArgoCDType_PortChoice `protobuf_oneof:"port_choice"`
	// Admin Password for ArgoCD
	//
	// x-displayName: "Admin Password for ArgoCD"
	// x-required
	// Select blindfold or clear text password for ArgoCD admin.
	Password *schema.SecretType `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (m *LocalAccessArgoCDType) Reset()      { *m = LocalAccessArgoCDType{} }
func (*LocalAccessArgoCDType) ProtoMessage() {}
func (*LocalAccessArgoCDType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{7}
}
func (m *LocalAccessArgoCDType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocalAccessArgoCDType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *LocalAccessArgoCDType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalAccessArgoCDType.Merge(m, src)
}
func (m *LocalAccessArgoCDType) XXX_Size() int {
	return m.Size()
}
func (m *LocalAccessArgoCDType) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalAccessArgoCDType.DiscardUnknown(m)
}

var xxx_messageInfo_LocalAccessArgoCDType proto.InternalMessageInfo

type isLocalAccessArgoCDType_PortChoice interface {
	isLocalAccessArgoCDType_PortChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type LocalAccessArgoCDType_DefaultPort struct {
	DefaultPort *schema.Empty `protobuf:"bytes,3,opt,name=default_port,json=defaultPort,proto3,oneof" json:"default_port,omitempty"`
}
type LocalAccessArgoCDType_Port struct {
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3,oneof" json:"port,omitempty"`
}

func (*LocalAccessArgoCDType_DefaultPort) isLocalAccessArgoCDType_PortChoice() {}
func (*LocalAccessArgoCDType_Port) isLocalAccessArgoCDType_PortChoice()        {}

func (m *LocalAccessArgoCDType) GetPortChoice() isLocalAccessArgoCDType_PortChoice {
	if m != nil {
		return m.PortChoice
	}
	return nil
}

func (m *LocalAccessArgoCDType) GetLocalDomain() string {
	if m != nil {
		return m.LocalDomain
	}
	return ""
}

func (m *LocalAccessArgoCDType) GetDefaultPort() *schema.Empty {
	if x, ok := m.GetPortChoice().(*LocalAccessArgoCDType_DefaultPort); ok {
		return x.DefaultPort
	}
	return nil
}

func (m *LocalAccessArgoCDType) GetPort() uint32 {
	if x, ok := m.GetPortChoice().(*LocalAccessArgoCDType_Port); ok {
		return x.Port
	}
	return 0
}

func (m *LocalAccessArgoCDType) GetPassword() *schema.SecretType {
	if m != nil {
		return m.Password
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LocalAccessArgoCDType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LocalAccessArgoCDType_DefaultPort)(nil),
		(*LocalAccessArgoCDType_Port)(nil),
	}
}

// Pod Security Policy List
//
// x-displayName: "Pod Security Policy List"
// List of active Pod security policies for a K8s cluster
type PodSecurityPolicyListType struct {
	// Pod Security Policy List
	//
	// x-displayName: "Pod Security Policy List"
	// x-required
	// List of active Pod security policies for a K8s cluster
	PodSecurityPolicies []*views.ObjectRefType `protobuf:"bytes,1,rep,name=pod_security_policies,json=podSecurityPolicies,proto3" json:"pod_security_policies,omitempty"`
}

func (m *PodSecurityPolicyListType) Reset()      { *m = PodSecurityPolicyListType{} }
func (*PodSecurityPolicyListType) ProtoMessage() {}
func (*PodSecurityPolicyListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{8}
}
func (m *PodSecurityPolicyListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PodSecurityPolicyListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PodSecurityPolicyListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSecurityPolicyListType.Merge(m, src)
}
func (m *PodSecurityPolicyListType) XXX_Size() int {
	return m.Size()
}
func (m *PodSecurityPolicyListType) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSecurityPolicyListType.DiscardUnknown(m)
}

var xxx_messageInfo_PodSecurityPolicyListType proto.InternalMessageInfo

func (m *PodSecurityPolicyListType) GetPodSecurityPolicies() []*views.ObjectRefType {
	if m != nil {
		return m.PodSecurityPolicies
	}
	return nil
}

// Cluster Role List
//
// x-displayName: "Cluster Role List"
// List of active cluster role list for a K8s cluster
type ClusterRoleListType struct {
	// Cluster Role List
	//
	// x-displayName: "Cluster Role List"
	// x-required
	// List of active cluster role list for a K8s cluster
	ClusterRoles []*views.ObjectRefType `protobuf:"bytes,1,rep,name=cluster_roles,json=clusterRoles,proto3" json:"cluster_roles,omitempty"`
}

func (m *ClusterRoleListType) Reset()      { *m = ClusterRoleListType{} }
func (*ClusterRoleListType) ProtoMessage() {}
func (*ClusterRoleListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{9}
}
func (m *ClusterRoleListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterRoleListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterRoleListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterRoleListType.Merge(m, src)
}
func (m *ClusterRoleListType) XXX_Size() int {
	return m.Size()
}
func (m *ClusterRoleListType) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterRoleListType.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterRoleListType proto.InternalMessageInfo

func (m *ClusterRoleListType) GetClusterRoles() []*views.ObjectRefType {
	if m != nil {
		return m.ClusterRoles
	}
	return nil
}

// Cluster Role Binding List
//
// x-displayName: "Cluster Role Binding List"
// List of active cluster role binding list for a K8s cluster
type ClusterRoleBindingListType struct {
	// Cluster Role Binding List
	//
	// x-displayName: "Cluster Role Binding List"
	// x-required
	// List of active cluster role binding list for a K8s cluster
	ClusterRoleBindings []*views.ObjectRefType `protobuf:"bytes,1,rep,name=cluster_role_bindings,json=clusterRoleBindings,proto3" json:"cluster_role_bindings,omitempty"`
}

func (m *ClusterRoleBindingListType) Reset()      { *m = ClusterRoleBindingListType{} }
func (*ClusterRoleBindingListType) ProtoMessage() {}
func (*ClusterRoleBindingListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{10}
}
func (m *ClusterRoleBindingListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterRoleBindingListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterRoleBindingListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterRoleBindingListType.Merge(m, src)
}
func (m *ClusterRoleBindingListType) XXX_Size() int {
	return m.Size()
}
func (m *ClusterRoleBindingListType) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterRoleBindingListType.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterRoleBindingListType proto.InternalMessageInfo

func (m *ClusterRoleBindingListType) GetClusterRoleBindings() []*views.ObjectRefType {
	if m != nil {
		return m.ClusterRoleBindings
	}
	return nil
}

// Docker Insecure Registry List
//
// x-displayName: "Docker Insecure Registry List"
// List of docker insecure registries
type InsecureRegistryListType struct {
	// Docker Insecure Registry List
	//
	// x-displayName: "Docker Insecure Registry List"
	// x-required
	// x-example: "example.com:5000"
	// List of docker insecure registries in format "example.com:5000"
	InsecureRegistries []string `protobuf:"bytes,1,rep,name=insecure_registries,json=insecureRegistries,proto3" json:"insecure_registries,omitempty"`
}

func (m *InsecureRegistryListType) Reset()      { *m = InsecureRegistryListType{} }
func (*InsecureRegistryListType) ProtoMessage() {}
func (*InsecureRegistryListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{11}
}
func (m *InsecureRegistryListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InsecureRegistryListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *InsecureRegistryListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsecureRegistryListType.Merge(m, src)
}
func (m *InsecureRegistryListType) XXX_Size() int {
	return m.Size()
}
func (m *InsecureRegistryListType) XXX_DiscardUnknown() {
	xxx_messageInfo_InsecureRegistryListType.DiscardUnknown(m)
}

var xxx_messageInfo_InsecureRegistryListType proto.InternalMessageInfo

func (m *InsecureRegistryListType) GetInsecureRegistries() []string {
	if m != nil {
		return m.InsecureRegistries
	}
	return nil
}

// GlobalSpecType
//
// x-displayName: "Global Configuration Specification"
// Configuration specification for K8s Cluster
type GlobalSpecType struct {
	// Site Local Access
	//
	// x-displayName: "Site Local Access"
	// x-required
	// Enable/Disable choice for local access to the site K8s API server
	//
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*GlobalSpecType_NoLocalAccess
	//	*GlobalSpecType_LocalAccessConfig
	LocalAccessChoice isGlobalSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// VoltConsole Access
	//
	// x-displayName: "VoltConsole Access"
	// x-required
	// Enable/Disable choice for VoltConsole access to site K8s API server
	//
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*GlobalSpecType_NoGlobalAccess
	//	*GlobalSpecType_GlobalAccessEnable
	GlobalAccessChoice isGlobalSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// POD Security Policies
	//
	// x-displayName: "POD Security Policies"
	// x-required
	// Select pod security policies for this K8s cluster
	//
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*GlobalSpecType_UseDefaultPsp
	//	*GlobalSpecType_UseCustomPspList
	PodSecurityPolicyChoice isGlobalSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// K8s Cluster Role
	//
	// x-displayName: "K8s Cluster Roles"
	// x-required
	// Select K8s Cluster Role for this K8s cluster
	//
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*GlobalSpecType_UseDefaultClusterRoles
	//	*GlobalSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isGlobalSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// K8s Cluster Role Binding
	//
	// x-displayName: "K8s Cluster Role Bindings"
	// x-required
	// Select K8s Cluster Role bindings for this K8s cluster
	//
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*GlobalSpecType_UseDefaultClusterRoleBindings
	//	*GlobalSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isGlobalSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
	// K8s Cluster Wide Application
	//
	// x-displayName: "K8s Cluster Wide Applications"
	// x-required
	// Select K8s Cluster wide applications to be deployed
	//
	// Types that are valid to be assigned to AppsChoice:
	//	*GlobalSpecType_NoClusterWideApps
	//	*GlobalSpecType_ClusterWideAppList
	AppsChoice isGlobalSpecType_AppsChoice `protobuf_oneof:"apps_choice"`
	// Docker insecure registries
	//
	// x-displayName: "Docker insecure registries"
	// x-required
	// Select Docker insecure registries for this cluster
	//
	// Types that are valid to be assigned to InsecureRegistriesChoice:
	//	*GlobalSpecType_NoInsecureRegistries
	//	*GlobalSpecType_InsecureRegistryList
	InsecureRegistriesChoice isGlobalSpecType_InsecureRegistriesChoice `protobuf_oneof:"insecure_registries_choice"`
	// Cluster Scoped Roles, RoleBindings, MutatingWebhookConfiguration and ValidatingWebhookConfiguration Access
	//
	// x-displayName: "Cluster Scoped RBAC and Webhook Resources Access"
	// x-required
	// Select method of Access to ClusterRoles, ClusterRoleBindings, MutatingWebhookConfiguration and ValidatingWebhookConfiguration
	//
	// Types that are valid to be assigned to ClusterScopedResourceAccessChoice:
	//	*GlobalSpecType_ClusterScopedAccessDeny
	//	*GlobalSpecType_ClusterScopedAccessPermit
	ClusterScopedResourceAccessChoice isGlobalSpecType_ClusterScopedResourceAccessChoice `protobuf_oneof:"cluster_scoped_resource_access_choice"`
	// VK8s Namespace Access
	//
	// x-displayName: "VK8s Namespace Access"
	// x-required
	// Select whether to allow access to vk8s namespaces by service accounts or authenticated users.
	//
	// Types that are valid to be assigned to Vk8SNamespaceAccessChoice:
	//	*GlobalSpecType_Vk8SNamespaceAccessDeny
	//	*GlobalSpecType_Vk8SNamespaceAccessPermit
	Vk8SNamespaceAccessChoice isGlobalSpecType_Vk8SNamespaceAccessChoice `protobuf_oneof:"vk8s_namespace_access_choice"`
	// view_internal
	//
	// x-displayName: "View Internal"
	// Reference to view internal object
	ViewInternal *views.ObjectRefType `protobuf:"bytes,1000,opt,name=view_internal,json=viewInternal,proto3" json:"view_internal,omitempty"`
	// Internal Cluster Role Binding List
	//
	// x-displayName: "Internal Cluster Role Binding LIst"
	// Internal Cluster Role binding List default + custom
	FinalClusterRoleBindings []*views.ObjectRefType `protobuf:"bytes,1001,rep,name=final_cluster_role_bindings,json=finalClusterRoleBindings,proto3" json:"final_cluster_role_bindings,omitempty"`
	// Internal Cluster Role List
	//
	// x-displayName: "Internal Cluster Role LIst"
	// Internal Cluster Role List default + custom
	FinalClusterRoles []*views.ObjectRefType `protobuf:"bytes,1002,rep,name=final_cluster_roles,json=finalClusterRoles,proto3" json:"final_cluster_roles,omitempty"`
	// Internal Pod Security Policy List
	//
	// x-displayName: "Internal Pod Security Policy  LIst"
	// Internal Pod Security Policy List is default or custom
	FinalPodSecurityPolicies []*views.ObjectRefType `protobuf:"bytes,1003,rep,name=final_pod_security_policies,json=finalPodSecurityPolicies,proto3" json:"final_pod_security_policies,omitempty"`
}

func (m *GlobalSpecType) Reset()      { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage() {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{12}
}
func (m *GlobalSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GlobalSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSpecType.Merge(m, src)
}
func (m *GlobalSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GlobalSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSpecType proto.InternalMessageInfo

type isGlobalSpecType_LocalAccessChoice interface {
	isGlobalSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_GlobalAccessChoice interface {
	isGlobalSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_PodSecurityPolicyChoice interface {
	isGlobalSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_ClusterRoleChoice interface {
	isGlobalSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_ClusterRoleBindingsChoice interface {
	isGlobalSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_AppsChoice interface {
	isGlobalSpecType_AppsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_InsecureRegistriesChoice interface {
	isGlobalSpecType_InsecureRegistriesChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_ClusterScopedResourceAccessChoice interface {
	isGlobalSpecType_ClusterScopedResourceAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_Vk8SNamespaceAccessChoice interface {
	isGlobalSpecType_Vk8SNamespaceAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GlobalSpecType_NoLocalAccess struct {
	NoLocalAccess *schema.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,proto3,oneof" json:"no_local_access,omitempty"`
}
type GlobalSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,proto3,oneof" json:"local_access_config,omitempty"`
}
type GlobalSpecType_NoGlobalAccess struct {
	NoGlobalAccess *schema.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,proto3,oneof" json:"no_global_access,omitempty"`
}
type GlobalSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *schema.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,proto3,oneof" json:"global_access_enable,omitempty"`
}
type GlobalSpecType_UseDefaultPsp struct {
	UseDefaultPsp *schema.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,proto3,oneof" json:"use_default_psp,omitempty"`
}
type GlobalSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,proto3,oneof" json:"use_custom_psp_list,omitempty"`
}
type GlobalSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *schema.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,proto3,oneof" json:"use_default_cluster_roles,omitempty"`
}
type GlobalSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,proto3,oneof" json:"use_custom_cluster_role_list,omitempty"`
}
type GlobalSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *schema.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,proto3,oneof" json:"use_default_cluster_role_bindings,omitempty"`
}
type GlobalSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,proto3,oneof" json:"use_custom_cluster_role_bindings,omitempty"`
}
type GlobalSpecType_NoClusterWideApps struct {
	NoClusterWideApps *schema.Empty `protobuf:"bytes,17,opt,name=no_cluster_wide_apps,json=noClusterWideApps,proto3,oneof" json:"no_cluster_wide_apps,omitempty"`
}
type GlobalSpecType_ClusterWideAppList struct {
	ClusterWideAppList *ClusterWideAppListType `protobuf:"bytes,18,opt,name=cluster_wide_app_list,json=clusterWideAppList,proto3,oneof" json:"cluster_wide_app_list,omitempty"`
}
type GlobalSpecType_NoInsecureRegistries struct {
	NoInsecureRegistries *schema.Empty `protobuf:"bytes,20,opt,name=no_insecure_registries,json=noInsecureRegistries,proto3,oneof" json:"no_insecure_registries,omitempty"`
}
type GlobalSpecType_InsecureRegistryList struct {
	InsecureRegistryList *InsecureRegistryListType `protobuf:"bytes,21,opt,name=insecure_registry_list,json=insecureRegistryList,proto3,oneof" json:"insecure_registry_list,omitempty"`
}
type GlobalSpecType_ClusterScopedAccessDeny struct {
	ClusterScopedAccessDeny *schema.Empty `protobuf:"bytes,23,opt,name=cluster_scoped_access_deny,json=clusterScopedAccessDeny,proto3,oneof" json:"cluster_scoped_access_deny,omitempty"`
}
type GlobalSpecType_ClusterScopedAccessPermit struct {
	ClusterScopedAccessPermit *schema.Empty `protobuf:"bytes,24,opt,name=cluster_scoped_access_permit,json=clusterScopedAccessPermit,proto3,oneof" json:"cluster_scoped_access_permit,omitempty"`
}
type GlobalSpecType_Vk8SNamespaceAccessDeny struct {
	Vk8SNamespaceAccessDeny *schema.Empty `protobuf:"bytes,26,opt,name=vk8s_namespace_access_deny,json=vk8sNamespaceAccessDeny,proto3,oneof" json:"vk8s_namespace_access_deny,omitempty"`
}
type GlobalSpecType_Vk8SNamespaceAccessPermit struct {
	Vk8SNamespaceAccessPermit *schema.Empty `protobuf:"bytes,27,opt,name=vk8s_namespace_access_permit,json=vk8sNamespaceAccessPermit,proto3,oneof" json:"vk8s_namespace_access_permit,omitempty"`
}

func (*GlobalSpecType_NoLocalAccess) isGlobalSpecType_LocalAccessChoice()                           {}
func (*GlobalSpecType_LocalAccessConfig) isGlobalSpecType_LocalAccessChoice()                       {}
func (*GlobalSpecType_NoGlobalAccess) isGlobalSpecType_GlobalAccessChoice()                         {}
func (*GlobalSpecType_GlobalAccessEnable) isGlobalSpecType_GlobalAccessChoice()                     {}
func (*GlobalSpecType_UseDefaultPsp) isGlobalSpecType_PodSecurityPolicyChoice()                     {}
func (*GlobalSpecType_UseCustomPspList) isGlobalSpecType_PodSecurityPolicyChoice()                  {}
func (*GlobalSpecType_UseDefaultClusterRoles) isGlobalSpecType_ClusterRoleChoice()                  {}
func (*GlobalSpecType_UseCustomClusterRoleList) isGlobalSpecType_ClusterRoleChoice()                {}
func (*GlobalSpecType_UseDefaultClusterRoleBindings) isGlobalSpecType_ClusterRoleBindingsChoice()   {}
func (*GlobalSpecType_UseCustomClusterRoleBindings) isGlobalSpecType_ClusterRoleBindingsChoice()    {}
func (*GlobalSpecType_NoClusterWideApps) isGlobalSpecType_AppsChoice()                              {}
func (*GlobalSpecType_ClusterWideAppList) isGlobalSpecType_AppsChoice()                             {}
func (*GlobalSpecType_NoInsecureRegistries) isGlobalSpecType_InsecureRegistriesChoice()             {}
func (*GlobalSpecType_InsecureRegistryList) isGlobalSpecType_InsecureRegistriesChoice()             {}
func (*GlobalSpecType_ClusterScopedAccessDeny) isGlobalSpecType_ClusterScopedResourceAccessChoice() {}
func (*GlobalSpecType_ClusterScopedAccessPermit) isGlobalSpecType_ClusterScopedResourceAccessChoice() {
}
func (*GlobalSpecType_Vk8SNamespaceAccessDeny) isGlobalSpecType_Vk8SNamespaceAccessChoice()   {}
func (*GlobalSpecType_Vk8SNamespaceAccessPermit) isGlobalSpecType_Vk8SNamespaceAccessChoice() {}

func (m *GlobalSpecType) GetLocalAccessChoice() isGlobalSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *GlobalSpecType) GetGlobalAccessChoice() isGlobalSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *GlobalSpecType) GetPodSecurityPolicyChoice() isGlobalSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *GlobalSpecType) GetClusterRoleChoice() isGlobalSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *GlobalSpecType) GetClusterRoleBindingsChoice() isGlobalSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}
func (m *GlobalSpecType) GetAppsChoice() isGlobalSpecType_AppsChoice {
	if m != nil {
		return m.AppsChoice
	}
	return nil
}
func (m *GlobalSpecType) GetInsecureRegistriesChoice() isGlobalSpecType_InsecureRegistriesChoice {
	if m != nil {
		return m.InsecureRegistriesChoice
	}
	return nil
}
func (m *GlobalSpecType) GetClusterScopedResourceAccessChoice() isGlobalSpecType_ClusterScopedResourceAccessChoice {
	if m != nil {
		return m.ClusterScopedResourceAccessChoice
	}
	return nil
}
func (m *GlobalSpecType) GetVk8SNamespaceAccessChoice() isGlobalSpecType_Vk8SNamespaceAccessChoice {
	if m != nil {
		return m.Vk8SNamespaceAccessChoice
	}
	return nil
}

func (m *GlobalSpecType) GetNoLocalAccess() *schema.Empty {
	if x, ok := m.GetLocalAccessChoice().(*GlobalSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *GlobalSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*GlobalSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *GlobalSpecType) GetNoGlobalAccess() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GlobalSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *GlobalSpecType) GetGlobalAccessEnable() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GlobalSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *GlobalSpecType) GetUseDefaultPsp() *schema.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GlobalSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *GlobalSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GlobalSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *GlobalSpecType) GetUseDefaultClusterRoles() *schema.Empty {
	if x, ok := m.GetClusterRoleChoice().(*GlobalSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *GlobalSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*GlobalSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *GlobalSpecType) GetUseDefaultClusterRoleBindings() *schema.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GlobalSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *GlobalSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GlobalSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

func (m *GlobalSpecType) GetNoClusterWideApps() *schema.Empty {
	if x, ok := m.GetAppsChoice().(*GlobalSpecType_NoClusterWideApps); ok {
		return x.NoClusterWideApps
	}
	return nil
}

func (m *GlobalSpecType) GetClusterWideAppList() *ClusterWideAppListType {
	if x, ok := m.GetAppsChoice().(*GlobalSpecType_ClusterWideAppList); ok {
		return x.ClusterWideAppList
	}
	return nil
}

func (m *GlobalSpecType) GetNoInsecureRegistries() *schema.Empty {
	if x, ok := m.GetInsecureRegistriesChoice().(*GlobalSpecType_NoInsecureRegistries); ok {
		return x.NoInsecureRegistries
	}
	return nil
}

func (m *GlobalSpecType) GetInsecureRegistryList() *InsecureRegistryListType {
	if x, ok := m.GetInsecureRegistriesChoice().(*GlobalSpecType_InsecureRegistryList); ok {
		return x.InsecureRegistryList
	}
	return nil
}

func (m *GlobalSpecType) GetClusterScopedAccessDeny() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*GlobalSpecType_ClusterScopedAccessDeny); ok {
		return x.ClusterScopedAccessDeny
	}
	return nil
}

func (m *GlobalSpecType) GetClusterScopedAccessPermit() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*GlobalSpecType_ClusterScopedAccessPermit); ok {
		return x.ClusterScopedAccessPermit
	}
	return nil
}

func (m *GlobalSpecType) GetVk8SNamespaceAccessDeny() *schema.Empty {
	if x, ok := m.GetVk8SNamespaceAccessChoice().(*GlobalSpecType_Vk8SNamespaceAccessDeny); ok {
		return x.Vk8SNamespaceAccessDeny
	}
	return nil
}

func (m *GlobalSpecType) GetVk8SNamespaceAccessPermit() *schema.Empty {
	if x, ok := m.GetVk8SNamespaceAccessChoice().(*GlobalSpecType_Vk8SNamespaceAccessPermit); ok {
		return x.Vk8SNamespaceAccessPermit
	}
	return nil
}

func (m *GlobalSpecType) GetViewInternal() *views.ObjectRefType {
	if m != nil {
		return m.ViewInternal
	}
	return nil
}

func (m *GlobalSpecType) GetFinalClusterRoleBindings() []*views.ObjectRefType {
	if m != nil {
		return m.FinalClusterRoleBindings
	}
	return nil
}

func (m *GlobalSpecType) GetFinalClusterRoles() []*views.ObjectRefType {
	if m != nil {
		return m.FinalClusterRoles
	}
	return nil
}

func (m *GlobalSpecType) GetFinalPodSecurityPolicies() []*views.ObjectRefType {
	if m != nil {
		return m.FinalPodSecurityPolicies
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GlobalSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GlobalSpecType_NoLocalAccess)(nil),
		(*GlobalSpecType_LocalAccessConfig)(nil),
		(*GlobalSpecType_NoGlobalAccess)(nil),
		(*GlobalSpecType_GlobalAccessEnable)(nil),
		(*GlobalSpecType_UseDefaultPsp)(nil),
		(*GlobalSpecType_UseCustomPspList)(nil),
		(*GlobalSpecType_UseDefaultClusterRoles)(nil),
		(*GlobalSpecType_UseCustomClusterRoleList)(nil),
		(*GlobalSpecType_UseDefaultClusterRoleBindings)(nil),
		(*GlobalSpecType_UseCustomClusterRoleBindings)(nil),
		(*GlobalSpecType_NoClusterWideApps)(nil),
		(*GlobalSpecType_ClusterWideAppList)(nil),
		(*GlobalSpecType_NoInsecureRegistries)(nil),
		(*GlobalSpecType_InsecureRegistryList)(nil),
		(*GlobalSpecType_ClusterScopedAccessDeny)(nil),
		(*GlobalSpecType_ClusterScopedAccessPermit)(nil),
		(*GlobalSpecType_Vk8SNamespaceAccessDeny)(nil),
		(*GlobalSpecType_Vk8SNamespaceAccessPermit)(nil),
	}
}

// Create k8s_cluster
//
// x-displayName: "Create Configuration Specification"
// Create k8s_cluster will create the object in the storage backend for namespace metadata.namespace
type CreateSpecType struct {
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*CreateSpecType_NoLocalAccess
	//	*CreateSpecType_LocalAccessConfig
	LocalAccessChoice isCreateSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*CreateSpecType_NoGlobalAccess
	//	*CreateSpecType_GlobalAccessEnable
	GlobalAccessChoice isCreateSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*CreateSpecType_UseDefaultPsp
	//	*CreateSpecType_UseCustomPspList
	PodSecurityPolicyChoice isCreateSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*CreateSpecType_UseDefaultClusterRoles
	//	*CreateSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isCreateSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*CreateSpecType_UseDefaultClusterRoleBindings
	//	*CreateSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isCreateSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
	// Types that are valid to be assigned to AppsChoice:
	//	*CreateSpecType_NoClusterWideApps
	//	*CreateSpecType_ClusterWideAppList
	AppsChoice isCreateSpecType_AppsChoice `protobuf_oneof:"apps_choice"`
	// Types that are valid to be assigned to InsecureRegistriesChoice:
	//	*CreateSpecType_NoInsecureRegistries
	//	*CreateSpecType_InsecureRegistryList
	InsecureRegistriesChoice isCreateSpecType_InsecureRegistriesChoice `protobuf_oneof:"insecure_registries_choice"`
	// Types that are valid to be assigned to ClusterScopedResourceAccessChoice:
	//	*CreateSpecType_ClusterScopedAccessDeny
	//	*CreateSpecType_ClusterScopedAccessPermit
	ClusterScopedResourceAccessChoice isCreateSpecType_ClusterScopedResourceAccessChoice `protobuf_oneof:"cluster_scoped_resource_access_choice"`
}

func (m *CreateSpecType) Reset()      { *m = CreateSpecType{} }
func (*CreateSpecType) ProtoMessage() {}
func (*CreateSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{13}
}
func (m *CreateSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CreateSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSpecType.Merge(m, src)
}
func (m *CreateSpecType) XXX_Size() int {
	return m.Size()
}
func (m *CreateSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSpecType proto.InternalMessageInfo

type isCreateSpecType_LocalAccessChoice interface {
	isCreateSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_GlobalAccessChoice interface {
	isCreateSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_PodSecurityPolicyChoice interface {
	isCreateSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_ClusterRoleChoice interface {
	isCreateSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_ClusterRoleBindingsChoice interface {
	isCreateSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_AppsChoice interface {
	isCreateSpecType_AppsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_InsecureRegistriesChoice interface {
	isCreateSpecType_InsecureRegistriesChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_ClusterScopedResourceAccessChoice interface {
	isCreateSpecType_ClusterScopedResourceAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateSpecType_NoLocalAccess struct {
	NoLocalAccess *schema.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,proto3,oneof" json:"no_local_access,omitempty"`
}
type CreateSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,proto3,oneof" json:"local_access_config,omitempty"`
}
type CreateSpecType_NoGlobalAccess struct {
	NoGlobalAccess *schema.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,proto3,oneof" json:"no_global_access,omitempty"`
}
type CreateSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *schema.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,proto3,oneof" json:"global_access_enable,omitempty"`
}
type CreateSpecType_UseDefaultPsp struct {
	UseDefaultPsp *schema.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,proto3,oneof" json:"use_default_psp,omitempty"`
}
type CreateSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,proto3,oneof" json:"use_custom_psp_list,omitempty"`
}
type CreateSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *schema.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,proto3,oneof" json:"use_default_cluster_roles,omitempty"`
}
type CreateSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,proto3,oneof" json:"use_custom_cluster_role_list,omitempty"`
}
type CreateSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *schema.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,proto3,oneof" json:"use_default_cluster_role_bindings,omitempty"`
}
type CreateSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,proto3,oneof" json:"use_custom_cluster_role_bindings,omitempty"`
}
type CreateSpecType_NoClusterWideApps struct {
	NoClusterWideApps *schema.Empty `protobuf:"bytes,17,opt,name=no_cluster_wide_apps,json=noClusterWideApps,proto3,oneof" json:"no_cluster_wide_apps,omitempty"`
}
type CreateSpecType_ClusterWideAppList struct {
	ClusterWideAppList *ClusterWideAppListType `protobuf:"bytes,18,opt,name=cluster_wide_app_list,json=clusterWideAppList,proto3,oneof" json:"cluster_wide_app_list,omitempty"`
}
type CreateSpecType_NoInsecureRegistries struct {
	NoInsecureRegistries *schema.Empty `protobuf:"bytes,20,opt,name=no_insecure_registries,json=noInsecureRegistries,proto3,oneof" json:"no_insecure_registries,omitempty"`
}
type CreateSpecType_InsecureRegistryList struct {
	InsecureRegistryList *InsecureRegistryListType `protobuf:"bytes,21,opt,name=insecure_registry_list,json=insecureRegistryList,proto3,oneof" json:"insecure_registry_list,omitempty"`
}
type CreateSpecType_ClusterScopedAccessDeny struct {
	ClusterScopedAccessDeny *schema.Empty `protobuf:"bytes,23,opt,name=cluster_scoped_access_deny,json=clusterScopedAccessDeny,proto3,oneof" json:"cluster_scoped_access_deny,omitempty"`
}
type CreateSpecType_ClusterScopedAccessPermit struct {
	ClusterScopedAccessPermit *schema.Empty `protobuf:"bytes,24,opt,name=cluster_scoped_access_permit,json=clusterScopedAccessPermit,proto3,oneof" json:"cluster_scoped_access_permit,omitempty"`
}

func (*CreateSpecType_NoLocalAccess) isCreateSpecType_LocalAccessChoice()                           {}
func (*CreateSpecType_LocalAccessConfig) isCreateSpecType_LocalAccessChoice()                       {}
func (*CreateSpecType_NoGlobalAccess) isCreateSpecType_GlobalAccessChoice()                         {}
func (*CreateSpecType_GlobalAccessEnable) isCreateSpecType_GlobalAccessChoice()                     {}
func (*CreateSpecType_UseDefaultPsp) isCreateSpecType_PodSecurityPolicyChoice()                     {}
func (*CreateSpecType_UseCustomPspList) isCreateSpecType_PodSecurityPolicyChoice()                  {}
func (*CreateSpecType_UseDefaultClusterRoles) isCreateSpecType_ClusterRoleChoice()                  {}
func (*CreateSpecType_UseCustomClusterRoleList) isCreateSpecType_ClusterRoleChoice()                {}
func (*CreateSpecType_UseDefaultClusterRoleBindings) isCreateSpecType_ClusterRoleBindingsChoice()   {}
func (*CreateSpecType_UseCustomClusterRoleBindings) isCreateSpecType_ClusterRoleBindingsChoice()    {}
func (*CreateSpecType_NoClusterWideApps) isCreateSpecType_AppsChoice()                              {}
func (*CreateSpecType_ClusterWideAppList) isCreateSpecType_AppsChoice()                             {}
func (*CreateSpecType_NoInsecureRegistries) isCreateSpecType_InsecureRegistriesChoice()             {}
func (*CreateSpecType_InsecureRegistryList) isCreateSpecType_InsecureRegistriesChoice()             {}
func (*CreateSpecType_ClusterScopedAccessDeny) isCreateSpecType_ClusterScopedResourceAccessChoice() {}
func (*CreateSpecType_ClusterScopedAccessPermit) isCreateSpecType_ClusterScopedResourceAccessChoice() {
}

func (m *CreateSpecType) GetLocalAccessChoice() isCreateSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *CreateSpecType) GetGlobalAccessChoice() isCreateSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *CreateSpecType) GetPodSecurityPolicyChoice() isCreateSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *CreateSpecType) GetClusterRoleChoice() isCreateSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *CreateSpecType) GetClusterRoleBindingsChoice() isCreateSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}
func (m *CreateSpecType) GetAppsChoice() isCreateSpecType_AppsChoice {
	if m != nil {
		return m.AppsChoice
	}
	return nil
}
func (m *CreateSpecType) GetInsecureRegistriesChoice() isCreateSpecType_InsecureRegistriesChoice {
	if m != nil {
		return m.InsecureRegistriesChoice
	}
	return nil
}
func (m *CreateSpecType) GetClusterScopedResourceAccessChoice() isCreateSpecType_ClusterScopedResourceAccessChoice {
	if m != nil {
		return m.ClusterScopedResourceAccessChoice
	}
	return nil
}

func (m *CreateSpecType) GetNoLocalAccess() *schema.Empty {
	if x, ok := m.GetLocalAccessChoice().(*CreateSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *CreateSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*CreateSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *CreateSpecType) GetNoGlobalAccess() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*CreateSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *CreateSpecType) GetGlobalAccessEnable() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*CreateSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *CreateSpecType) GetUseDefaultPsp() *schema.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*CreateSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *CreateSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*CreateSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *CreateSpecType) GetUseDefaultClusterRoles() *schema.Empty {
	if x, ok := m.GetClusterRoleChoice().(*CreateSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *CreateSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*CreateSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *CreateSpecType) GetUseDefaultClusterRoleBindings() *schema.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*CreateSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *CreateSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*CreateSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

func (m *CreateSpecType) GetNoClusterWideApps() *schema.Empty {
	if x, ok := m.GetAppsChoice().(*CreateSpecType_NoClusterWideApps); ok {
		return x.NoClusterWideApps
	}
	return nil
}

func (m *CreateSpecType) GetClusterWideAppList() *ClusterWideAppListType {
	if x, ok := m.GetAppsChoice().(*CreateSpecType_ClusterWideAppList); ok {
		return x.ClusterWideAppList
	}
	return nil
}

func (m *CreateSpecType) GetNoInsecureRegistries() *schema.Empty {
	if x, ok := m.GetInsecureRegistriesChoice().(*CreateSpecType_NoInsecureRegistries); ok {
		return x.NoInsecureRegistries
	}
	return nil
}

func (m *CreateSpecType) GetInsecureRegistryList() *InsecureRegistryListType {
	if x, ok := m.GetInsecureRegistriesChoice().(*CreateSpecType_InsecureRegistryList); ok {
		return x.InsecureRegistryList
	}
	return nil
}

func (m *CreateSpecType) GetClusterScopedAccessDeny() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*CreateSpecType_ClusterScopedAccessDeny); ok {
		return x.ClusterScopedAccessDeny
	}
	return nil
}

func (m *CreateSpecType) GetClusterScopedAccessPermit() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*CreateSpecType_ClusterScopedAccessPermit); ok {
		return x.ClusterScopedAccessPermit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateSpecType_NoLocalAccess)(nil),
		(*CreateSpecType_LocalAccessConfig)(nil),
		(*CreateSpecType_NoGlobalAccess)(nil),
		(*CreateSpecType_GlobalAccessEnable)(nil),
		(*CreateSpecType_UseDefaultPsp)(nil),
		(*CreateSpecType_UseCustomPspList)(nil),
		(*CreateSpecType_UseDefaultClusterRoles)(nil),
		(*CreateSpecType_UseCustomClusterRoleList)(nil),
		(*CreateSpecType_UseDefaultClusterRoleBindings)(nil),
		(*CreateSpecType_UseCustomClusterRoleBindings)(nil),
		(*CreateSpecType_NoClusterWideApps)(nil),
		(*CreateSpecType_ClusterWideAppList)(nil),
		(*CreateSpecType_NoInsecureRegistries)(nil),
		(*CreateSpecType_InsecureRegistryList)(nil),
		(*CreateSpecType_ClusterScopedAccessDeny)(nil),
		(*CreateSpecType_ClusterScopedAccessPermit)(nil),
	}
}

// Replace k8s_cluster
//
// x-displayName: "Replace Configuration Specification"
// Replacing an k8s_cluster object will update the object by replacing the existing spec with the provided one.
// For read-then-write operations a resourceVersion mismatch will occur if the object was modified between the read and write
type ReplaceSpecType struct {
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*ReplaceSpecType_NoLocalAccess
	//	*ReplaceSpecType_LocalAccessConfig
	LocalAccessChoice isReplaceSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*ReplaceSpecType_NoGlobalAccess
	//	*ReplaceSpecType_GlobalAccessEnable
	GlobalAccessChoice isReplaceSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*ReplaceSpecType_UseDefaultPsp
	//	*ReplaceSpecType_UseCustomPspList
	PodSecurityPolicyChoice isReplaceSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*ReplaceSpecType_UseDefaultClusterRoles
	//	*ReplaceSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isReplaceSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*ReplaceSpecType_UseDefaultClusterRoleBindings
	//	*ReplaceSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isReplaceSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
	// Types that are valid to be assigned to AppsChoice:
	//	*ReplaceSpecType_NoClusterWideApps
	//	*ReplaceSpecType_ClusterWideAppList
	AppsChoice isReplaceSpecType_AppsChoice `protobuf_oneof:"apps_choice"`
	// Types that are valid to be assigned to InsecureRegistriesChoice:
	//	*ReplaceSpecType_NoInsecureRegistries
	//	*ReplaceSpecType_InsecureRegistryList
	InsecureRegistriesChoice isReplaceSpecType_InsecureRegistriesChoice `protobuf_oneof:"insecure_registries_choice"`
	// Types that are valid to be assigned to ClusterScopedResourceAccessChoice:
	//	*ReplaceSpecType_ClusterScopedAccessDeny
	//	*ReplaceSpecType_ClusterScopedAccessPermit
	ClusterScopedResourceAccessChoice isReplaceSpecType_ClusterScopedResourceAccessChoice `protobuf_oneof:"cluster_scoped_resource_access_choice"`
}

func (m *ReplaceSpecType) Reset()      { *m = ReplaceSpecType{} }
func (*ReplaceSpecType) ProtoMessage() {}
func (*ReplaceSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{14}
}
func (m *ReplaceSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReplaceSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ReplaceSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceSpecType.Merge(m, src)
}
func (m *ReplaceSpecType) XXX_Size() int {
	return m.Size()
}
func (m *ReplaceSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceSpecType proto.InternalMessageInfo

type isReplaceSpecType_LocalAccessChoice interface {
	isReplaceSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_GlobalAccessChoice interface {
	isReplaceSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_PodSecurityPolicyChoice interface {
	isReplaceSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_ClusterRoleChoice interface {
	isReplaceSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_ClusterRoleBindingsChoice interface {
	isReplaceSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_AppsChoice interface {
	isReplaceSpecType_AppsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_InsecureRegistriesChoice interface {
	isReplaceSpecType_InsecureRegistriesChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_ClusterScopedResourceAccessChoice interface {
	isReplaceSpecType_ClusterScopedResourceAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ReplaceSpecType_NoLocalAccess struct {
	NoLocalAccess *schema.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,proto3,oneof" json:"no_local_access,omitempty"`
}
type ReplaceSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,proto3,oneof" json:"local_access_config,omitempty"`
}
type ReplaceSpecType_NoGlobalAccess struct {
	NoGlobalAccess *schema.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,proto3,oneof" json:"no_global_access,omitempty"`
}
type ReplaceSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *schema.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,proto3,oneof" json:"global_access_enable,omitempty"`
}
type ReplaceSpecType_UseDefaultPsp struct {
	UseDefaultPsp *schema.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,proto3,oneof" json:"use_default_psp,omitempty"`
}
type ReplaceSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,proto3,oneof" json:"use_custom_psp_list,omitempty"`
}
type ReplaceSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *schema.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,proto3,oneof" json:"use_default_cluster_roles,omitempty"`
}
type ReplaceSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,proto3,oneof" json:"use_custom_cluster_role_list,omitempty"`
}
type ReplaceSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *schema.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,proto3,oneof" json:"use_default_cluster_role_bindings,omitempty"`
}
type ReplaceSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,proto3,oneof" json:"use_custom_cluster_role_bindings,omitempty"`
}
type ReplaceSpecType_NoClusterWideApps struct {
	NoClusterWideApps *schema.Empty `protobuf:"bytes,17,opt,name=no_cluster_wide_apps,json=noClusterWideApps,proto3,oneof" json:"no_cluster_wide_apps,omitempty"`
}
type ReplaceSpecType_ClusterWideAppList struct {
	ClusterWideAppList *ClusterWideAppListType `protobuf:"bytes,18,opt,name=cluster_wide_app_list,json=clusterWideAppList,proto3,oneof" json:"cluster_wide_app_list,omitempty"`
}
type ReplaceSpecType_NoInsecureRegistries struct {
	NoInsecureRegistries *schema.Empty `protobuf:"bytes,20,opt,name=no_insecure_registries,json=noInsecureRegistries,proto3,oneof" json:"no_insecure_registries,omitempty"`
}
type ReplaceSpecType_InsecureRegistryList struct {
	InsecureRegistryList *InsecureRegistryListType `protobuf:"bytes,21,opt,name=insecure_registry_list,json=insecureRegistryList,proto3,oneof" json:"insecure_registry_list,omitempty"`
}
type ReplaceSpecType_ClusterScopedAccessDeny struct {
	ClusterScopedAccessDeny *schema.Empty `protobuf:"bytes,23,opt,name=cluster_scoped_access_deny,json=clusterScopedAccessDeny,proto3,oneof" json:"cluster_scoped_access_deny,omitempty"`
}
type ReplaceSpecType_ClusterScopedAccessPermit struct {
	ClusterScopedAccessPermit *schema.Empty `protobuf:"bytes,24,opt,name=cluster_scoped_access_permit,json=clusterScopedAccessPermit,proto3,oneof" json:"cluster_scoped_access_permit,omitempty"`
}

func (*ReplaceSpecType_NoLocalAccess) isReplaceSpecType_LocalAccessChoice()                         {}
func (*ReplaceSpecType_LocalAccessConfig) isReplaceSpecType_LocalAccessChoice()                     {}
func (*ReplaceSpecType_NoGlobalAccess) isReplaceSpecType_GlobalAccessChoice()                       {}
func (*ReplaceSpecType_GlobalAccessEnable) isReplaceSpecType_GlobalAccessChoice()                   {}
func (*ReplaceSpecType_UseDefaultPsp) isReplaceSpecType_PodSecurityPolicyChoice()                   {}
func (*ReplaceSpecType_UseCustomPspList) isReplaceSpecType_PodSecurityPolicyChoice()                {}
func (*ReplaceSpecType_UseDefaultClusterRoles) isReplaceSpecType_ClusterRoleChoice()                {}
func (*ReplaceSpecType_UseCustomClusterRoleList) isReplaceSpecType_ClusterRoleChoice()              {}
func (*ReplaceSpecType_UseDefaultClusterRoleBindings) isReplaceSpecType_ClusterRoleBindingsChoice() {}
func (*ReplaceSpecType_UseCustomClusterRoleBindings) isReplaceSpecType_ClusterRoleBindingsChoice()  {}
func (*ReplaceSpecType_NoClusterWideApps) isReplaceSpecType_AppsChoice()                            {}
func (*ReplaceSpecType_ClusterWideAppList) isReplaceSpecType_AppsChoice()                           {}
func (*ReplaceSpecType_NoInsecureRegistries) isReplaceSpecType_InsecureRegistriesChoice()           {}
func (*ReplaceSpecType_InsecureRegistryList) isReplaceSpecType_InsecureRegistriesChoice()           {}
func (*ReplaceSpecType_ClusterScopedAccessDeny) isReplaceSpecType_ClusterScopedResourceAccessChoice() {
}
func (*ReplaceSpecType_ClusterScopedAccessPermit) isReplaceSpecType_ClusterScopedResourceAccessChoice() {
}

func (m *ReplaceSpecType) GetLocalAccessChoice() isReplaceSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetGlobalAccessChoice() isReplaceSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetPodSecurityPolicyChoice() isReplaceSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetClusterRoleChoice() isReplaceSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetClusterRoleBindingsChoice() isReplaceSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetAppsChoice() isReplaceSpecType_AppsChoice {
	if m != nil {
		return m.AppsChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetInsecureRegistriesChoice() isReplaceSpecType_InsecureRegistriesChoice {
	if m != nil {
		return m.InsecureRegistriesChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetClusterScopedResourceAccessChoice() isReplaceSpecType_ClusterScopedResourceAccessChoice {
	if m != nil {
		return m.ClusterScopedResourceAccessChoice
	}
	return nil
}

func (m *ReplaceSpecType) GetNoLocalAccess() *schema.Empty {
	if x, ok := m.GetLocalAccessChoice().(*ReplaceSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *ReplaceSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*ReplaceSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *ReplaceSpecType) GetNoGlobalAccess() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*ReplaceSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *ReplaceSpecType) GetGlobalAccessEnable() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*ReplaceSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *ReplaceSpecType) GetUseDefaultPsp() *schema.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*ReplaceSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *ReplaceSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*ReplaceSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *ReplaceSpecType) GetUseDefaultClusterRoles() *schema.Empty {
	if x, ok := m.GetClusterRoleChoice().(*ReplaceSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *ReplaceSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*ReplaceSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *ReplaceSpecType) GetUseDefaultClusterRoleBindings() *schema.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*ReplaceSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *ReplaceSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*ReplaceSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

func (m *ReplaceSpecType) GetNoClusterWideApps() *schema.Empty {
	if x, ok := m.GetAppsChoice().(*ReplaceSpecType_NoClusterWideApps); ok {
		return x.NoClusterWideApps
	}
	return nil
}

func (m *ReplaceSpecType) GetClusterWideAppList() *ClusterWideAppListType {
	if x, ok := m.GetAppsChoice().(*ReplaceSpecType_ClusterWideAppList); ok {
		return x.ClusterWideAppList
	}
	return nil
}

func (m *ReplaceSpecType) GetNoInsecureRegistries() *schema.Empty {
	if x, ok := m.GetInsecureRegistriesChoice().(*ReplaceSpecType_NoInsecureRegistries); ok {
		return x.NoInsecureRegistries
	}
	return nil
}

func (m *ReplaceSpecType) GetInsecureRegistryList() *InsecureRegistryListType {
	if x, ok := m.GetInsecureRegistriesChoice().(*ReplaceSpecType_InsecureRegistryList); ok {
		return x.InsecureRegistryList
	}
	return nil
}

func (m *ReplaceSpecType) GetClusterScopedAccessDeny() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*ReplaceSpecType_ClusterScopedAccessDeny); ok {
		return x.ClusterScopedAccessDeny
	}
	return nil
}

func (m *ReplaceSpecType) GetClusterScopedAccessPermit() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*ReplaceSpecType_ClusterScopedAccessPermit); ok {
		return x.ClusterScopedAccessPermit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReplaceSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReplaceSpecType_NoLocalAccess)(nil),
		(*ReplaceSpecType_LocalAccessConfig)(nil),
		(*ReplaceSpecType_NoGlobalAccess)(nil),
		(*ReplaceSpecType_GlobalAccessEnable)(nil),
		(*ReplaceSpecType_UseDefaultPsp)(nil),
		(*ReplaceSpecType_UseCustomPspList)(nil),
		(*ReplaceSpecType_UseDefaultClusterRoles)(nil),
		(*ReplaceSpecType_UseCustomClusterRoleList)(nil),
		(*ReplaceSpecType_UseDefaultClusterRoleBindings)(nil),
		(*ReplaceSpecType_UseCustomClusterRoleBindings)(nil),
		(*ReplaceSpecType_NoClusterWideApps)(nil),
		(*ReplaceSpecType_ClusterWideAppList)(nil),
		(*ReplaceSpecType_NoInsecureRegistries)(nil),
		(*ReplaceSpecType_InsecureRegistryList)(nil),
		(*ReplaceSpecType_ClusterScopedAccessDeny)(nil),
		(*ReplaceSpecType_ClusterScopedAccessPermit)(nil),
	}
}

// Get k8s_cluster
//
// x-displayName: "Get Configuration Specification"
// Get k8s_cluster will get the object from the storage backend for namespace metadata.namespace
type GetSpecType struct {
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*GetSpecType_NoLocalAccess
	//	*GetSpecType_LocalAccessConfig
	LocalAccessChoice isGetSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*GetSpecType_NoGlobalAccess
	//	*GetSpecType_GlobalAccessEnable
	GlobalAccessChoice isGetSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*GetSpecType_UseDefaultPsp
	//	*GetSpecType_UseCustomPspList
	PodSecurityPolicyChoice isGetSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*GetSpecType_UseDefaultClusterRoles
	//	*GetSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isGetSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*GetSpecType_UseDefaultClusterRoleBindings
	//	*GetSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isGetSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
	// Types that are valid to be assigned to AppsChoice:
	//	*GetSpecType_NoClusterWideApps
	//	*GetSpecType_ClusterWideAppList
	AppsChoice isGetSpecType_AppsChoice `protobuf_oneof:"apps_choice"`
	// Types that are valid to be assigned to InsecureRegistriesChoice:
	//	*GetSpecType_NoInsecureRegistries
	//	*GetSpecType_InsecureRegistryList
	InsecureRegistriesChoice isGetSpecType_InsecureRegistriesChoice `protobuf_oneof:"insecure_registries_choice"`
	// Types that are valid to be assigned to ClusterScopedResourceAccessChoice:
	//	*GetSpecType_ClusterScopedAccessDeny
	//	*GetSpecType_ClusterScopedAccessPermit
	ClusterScopedResourceAccessChoice isGetSpecType_ClusterScopedResourceAccessChoice `protobuf_oneof:"cluster_scoped_resource_access_choice"`
}

func (m *GetSpecType) Reset()      { *m = GetSpecType{} }
func (*GetSpecType) ProtoMessage() {}
func (*GetSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55b4fdc7e1bea1d, []int{15}
}
func (m *GetSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpecType.Merge(m, src)
}
func (m *GetSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GetSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpecType proto.InternalMessageInfo

type isGetSpecType_LocalAccessChoice interface {
	isGetSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_GlobalAccessChoice interface {
	isGetSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_PodSecurityPolicyChoice interface {
	isGetSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_ClusterRoleChoice interface {
	isGetSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_ClusterRoleBindingsChoice interface {
	isGetSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_AppsChoice interface {
	isGetSpecType_AppsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_InsecureRegistriesChoice interface {
	isGetSpecType_InsecureRegistriesChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_ClusterScopedResourceAccessChoice interface {
	isGetSpecType_ClusterScopedResourceAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GetSpecType_NoLocalAccess struct {
	NoLocalAccess *schema.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,proto3,oneof" json:"no_local_access,omitempty"`
}
type GetSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,proto3,oneof" json:"local_access_config,omitempty"`
}
type GetSpecType_NoGlobalAccess struct {
	NoGlobalAccess *schema.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,proto3,oneof" json:"no_global_access,omitempty"`
}
type GetSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *schema.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,proto3,oneof" json:"global_access_enable,omitempty"`
}
type GetSpecType_UseDefaultPsp struct {
	UseDefaultPsp *schema.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,proto3,oneof" json:"use_default_psp,omitempty"`
}
type GetSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,proto3,oneof" json:"use_custom_psp_list,omitempty"`
}
type GetSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *schema.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,proto3,oneof" json:"use_default_cluster_roles,omitempty"`
}
type GetSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,proto3,oneof" json:"use_custom_cluster_role_list,omitempty"`
}
type GetSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *schema.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,proto3,oneof" json:"use_default_cluster_role_bindings,omitempty"`
}
type GetSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,proto3,oneof" json:"use_custom_cluster_role_bindings,omitempty"`
}
type GetSpecType_NoClusterWideApps struct {
	NoClusterWideApps *schema.Empty `protobuf:"bytes,17,opt,name=no_cluster_wide_apps,json=noClusterWideApps,proto3,oneof" json:"no_cluster_wide_apps,omitempty"`
}
type GetSpecType_ClusterWideAppList struct {
	ClusterWideAppList *ClusterWideAppListType `protobuf:"bytes,18,opt,name=cluster_wide_app_list,json=clusterWideAppList,proto3,oneof" json:"cluster_wide_app_list,omitempty"`
}
type GetSpecType_NoInsecureRegistries struct {
	NoInsecureRegistries *schema.Empty `protobuf:"bytes,20,opt,name=no_insecure_registries,json=noInsecureRegistries,proto3,oneof" json:"no_insecure_registries,omitempty"`
}
type GetSpecType_InsecureRegistryList struct {
	InsecureRegistryList *InsecureRegistryListType `protobuf:"bytes,21,opt,name=insecure_registry_list,json=insecureRegistryList,proto3,oneof" json:"insecure_registry_list,omitempty"`
}
type GetSpecType_ClusterScopedAccessDeny struct {
	ClusterScopedAccessDeny *schema.Empty `protobuf:"bytes,23,opt,name=cluster_scoped_access_deny,json=clusterScopedAccessDeny,proto3,oneof" json:"cluster_scoped_access_deny,omitempty"`
}
type GetSpecType_ClusterScopedAccessPermit struct {
	ClusterScopedAccessPermit *schema.Empty `protobuf:"bytes,24,opt,name=cluster_scoped_access_permit,json=clusterScopedAccessPermit,proto3,oneof" json:"cluster_scoped_access_permit,omitempty"`
}

func (*GetSpecType_NoLocalAccess) isGetSpecType_LocalAccessChoice()                             {}
func (*GetSpecType_LocalAccessConfig) isGetSpecType_LocalAccessChoice()                         {}
func (*GetSpecType_NoGlobalAccess) isGetSpecType_GlobalAccessChoice()                           {}
func (*GetSpecType_GlobalAccessEnable) isGetSpecType_GlobalAccessChoice()                       {}
func (*GetSpecType_UseDefaultPsp) isGetSpecType_PodSecurityPolicyChoice()                       {}
func (*GetSpecType_UseCustomPspList) isGetSpecType_PodSecurityPolicyChoice()                    {}
func (*GetSpecType_UseDefaultClusterRoles) isGetSpecType_ClusterRoleChoice()                    {}
func (*GetSpecType_UseCustomClusterRoleList) isGetSpecType_ClusterRoleChoice()                  {}
func (*GetSpecType_UseDefaultClusterRoleBindings) isGetSpecType_ClusterRoleBindingsChoice()     {}
func (*GetSpecType_UseCustomClusterRoleBindings) isGetSpecType_ClusterRoleBindingsChoice()      {}
func (*GetSpecType_NoClusterWideApps) isGetSpecType_AppsChoice()                                {}
func (*GetSpecType_ClusterWideAppList) isGetSpecType_AppsChoice()                               {}
func (*GetSpecType_NoInsecureRegistries) isGetSpecType_InsecureRegistriesChoice()               {}
func (*GetSpecType_InsecureRegistryList) isGetSpecType_InsecureRegistriesChoice()               {}
func (*GetSpecType_ClusterScopedAccessDeny) isGetSpecType_ClusterScopedResourceAccessChoice()   {}
func (*GetSpecType_ClusterScopedAccessPermit) isGetSpecType_ClusterScopedResourceAccessChoice() {}

func (m *GetSpecType) GetLocalAccessChoice() isGetSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *GetSpecType) GetGlobalAccessChoice() isGetSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *GetSpecType) GetPodSecurityPolicyChoice() isGetSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *GetSpecType) GetClusterRoleChoice() isGetSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *GetSpecType) GetClusterRoleBindingsChoice() isGetSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}
func (m *GetSpecType) GetAppsChoice() isGetSpecType_AppsChoice {
	if m != nil {
		return m.AppsChoice
	}
	return nil
}
func (m *GetSpecType) GetInsecureRegistriesChoice() isGetSpecType_InsecureRegistriesChoice {
	if m != nil {
		return m.InsecureRegistriesChoice
	}
	return nil
}
func (m *GetSpecType) GetClusterScopedResourceAccessChoice() isGetSpecType_ClusterScopedResourceAccessChoice {
	if m != nil {
		return m.ClusterScopedResourceAccessChoice
	}
	return nil
}

func (m *GetSpecType) GetNoLocalAccess() *schema.Empty {
	if x, ok := m.GetLocalAccessChoice().(*GetSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *GetSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*GetSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *GetSpecType) GetNoGlobalAccess() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GetSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *GetSpecType) GetGlobalAccessEnable() *schema.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GetSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *GetSpecType) GetUseDefaultPsp() *schema.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GetSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *GetSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GetSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *GetSpecType) GetUseDefaultClusterRoles() *schema.Empty {
	if x, ok := m.GetClusterRoleChoice().(*GetSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *GetSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*GetSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *GetSpecType) GetUseDefaultClusterRoleBindings() *schema.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GetSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *GetSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GetSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

func (m *GetSpecType) GetNoClusterWideApps() *schema.Empty {
	if x, ok := m.GetAppsChoice().(*GetSpecType_NoClusterWideApps); ok {
		return x.NoClusterWideApps
	}
	return nil
}

func (m *GetSpecType) GetClusterWideAppList() *ClusterWideAppListType {
	if x, ok := m.GetAppsChoice().(*GetSpecType_ClusterWideAppList); ok {
		return x.ClusterWideAppList
	}
	return nil
}

func (m *GetSpecType) GetNoInsecureRegistries() *schema.Empty {
	if x, ok := m.GetInsecureRegistriesChoice().(*GetSpecType_NoInsecureRegistries); ok {
		return x.NoInsecureRegistries
	}
	return nil
}

func (m *GetSpecType) GetInsecureRegistryList() *InsecureRegistryListType {
	if x, ok := m.GetInsecureRegistriesChoice().(*GetSpecType_InsecureRegistryList); ok {
		return x.InsecureRegistryList
	}
	return nil
}

func (m *GetSpecType) GetClusterScopedAccessDeny() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*GetSpecType_ClusterScopedAccessDeny); ok {
		return x.ClusterScopedAccessDeny
	}
	return nil
}

func (m *GetSpecType) GetClusterScopedAccessPermit() *schema.Empty {
	if x, ok := m.GetClusterScopedResourceAccessChoice().(*GetSpecType_ClusterScopedAccessPermit); ok {
		return x.ClusterScopedAccessPermit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetSpecType_NoLocalAccess)(nil),
		(*GetSpecType_LocalAccessConfig)(nil),
		(*GetSpecType_NoGlobalAccess)(nil),
		(*GetSpecType_GlobalAccessEnable)(nil),
		(*GetSpecType_UseDefaultPsp)(nil),
		(*GetSpecType_UseCustomPspList)(nil),
		(*GetSpecType_UseDefaultClusterRoles)(nil),
		(*GetSpecType_UseCustomClusterRoleList)(nil),
		(*GetSpecType_UseDefaultClusterRoleBindings)(nil),
		(*GetSpecType_UseCustomClusterRoleBindings)(nil),
		(*GetSpecType_NoClusterWideApps)(nil),
		(*GetSpecType_ClusterWideAppList)(nil),
		(*GetSpecType_NoInsecureRegistries)(nil),
		(*GetSpecType_InsecureRegistryList)(nil),
		(*GetSpecType_ClusterScopedAccessDeny)(nil),
		(*GetSpecType_ClusterScopedAccessPermit)(nil),
	}
}

func init() {
	proto.RegisterType((*ApplicationArgoCDType)(nil), "ves.io.schema.k8s_cluster.ApplicationArgoCDType")
	golang_proto.RegisterType((*ApplicationArgoCDType)(nil), "ves.io.schema.k8s_cluster.ApplicationArgoCDType")
	proto.RegisterType((*ApplicationDashboardType)(nil), "ves.io.schema.k8s_cluster.ApplicationDashboardType")
	golang_proto.RegisterType((*ApplicationDashboardType)(nil), "ves.io.schema.k8s_cluster.ApplicationDashboardType")
	proto.RegisterType((*ApplicationMetricsServerType)(nil), "ves.io.schema.k8s_cluster.ApplicationMetricsServerType")
	golang_proto.RegisterType((*ApplicationMetricsServerType)(nil), "ves.io.schema.k8s_cluster.ApplicationMetricsServerType")
	proto.RegisterType((*ApplicationPrometheusType)(nil), "ves.io.schema.k8s_cluster.ApplicationPrometheusType")
	golang_proto.RegisterType((*ApplicationPrometheusType)(nil), "ves.io.schema.k8s_cluster.ApplicationPrometheusType")
	proto.RegisterType((*ClusterWideAppType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppType")
	golang_proto.RegisterType((*ClusterWideAppType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppType")
	proto.RegisterType((*ClusterWideAppListType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppListType")
	golang_proto.RegisterType((*ClusterWideAppListType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppListType")
	proto.RegisterType((*LocalAccessConfigType)(nil), "ves.io.schema.k8s_cluster.LocalAccessConfigType")
	golang_proto.RegisterType((*LocalAccessConfigType)(nil), "ves.io.schema.k8s_cluster.LocalAccessConfigType")
	proto.RegisterType((*LocalAccessArgoCDType)(nil), "ves.io.schema.k8s_cluster.LocalAccessArgoCDType")
	golang_proto.RegisterType((*LocalAccessArgoCDType)(nil), "ves.io.schema.k8s_cluster.LocalAccessArgoCDType")
	proto.RegisterType((*PodSecurityPolicyListType)(nil), "ves.io.schema.k8s_cluster.PodSecurityPolicyListType")
	golang_proto.RegisterType((*PodSecurityPolicyListType)(nil), "ves.io.schema.k8s_cluster.PodSecurityPolicyListType")
	proto.RegisterType((*ClusterRoleListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleListType")
	golang_proto.RegisterType((*ClusterRoleListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleListType")
	proto.RegisterType((*ClusterRoleBindingListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleBindingListType")
	golang_proto.RegisterType((*ClusterRoleBindingListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleBindingListType")
	proto.RegisterType((*InsecureRegistryListType)(nil), "ves.io.schema.k8s_cluster.InsecureRegistryListType")
	golang_proto.RegisterType((*InsecureRegistryListType)(nil), "ves.io.schema.k8s_cluster.InsecureRegistryListType")
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.k8s_cluster.GlobalSpecType")
	golang_proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.k8s_cluster.GlobalSpecType")
	proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.k8s_cluster.CreateSpecType")
	golang_proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.k8s_cluster.CreateSpecType")
	proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.k8s_cluster.ReplaceSpecType")
	golang_proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.k8s_cluster.ReplaceSpecType")
	proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.k8s_cluster.GetSpecType")
	golang_proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.k8s_cluster.GetSpecType")
}

func init() {
	proto.RegisterFile("ves.io/schema/k8s_cluster/types.proto", fileDescriptor_c55b4fdc7e1bea1d)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/k8s_cluster/types.proto", fileDescriptor_c55b4fdc7e1bea1d)
}

var fileDescriptor_c55b4fdc7e1bea1d = []byte{
	// 2376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x4d, 0x6c, 0xdb, 0xc8,
	0x15, 0xd6, 0xe8, 0x27, 0x52, 0xc6, 0x7f, 0x32, 0xfd, 0x47, 0x29, 0xae, 0x56, 0x11, 0x76, 0xbb,
	0xa9, 0x4b, 0xcb, 0x22, 0x25, 0xd9, 0x92, 0xbb, 0xd8, 0x6e, 0x68, 0x2f, 0xa2, 0xb8, 0xe9, 0xae,
	0x97, 0x2e, 0xba, 0xd8, 0x02, 0x2d, 0x43, 0x53, 0x63, 0x99, 0x8d, 0xc4, 0x61, 0x49, 0xca, 0xa9,
	0x17, 0x0d, 0x1a, 0xf8, 0x58, 0xa0, 0x45, 0x92, 0xf6, 0xd4, 0x43, 0x7b, 0xe8, 0xa5, 0xc8, 0xa1,
	0xed, 0xa2, 0x40, 0x0b, 0x54, 0x3d, 0x18, 0x01, 0x0a, 0x2c, 0xf6, 0xe4, 0x63, 0x8e, 0x1b, 0xe7,
	0x92, 0xb4, 0x28, 0xb0, 0xe8, 0xd1, 0xa7, 0x82, 0x23, 0x4a, 0x22, 0x25, 0x4a, 0x56, 0x82, 0x14,
	0x58, 0x14, 0xba, 0xd8, 0x24, 0xdf, 0x7b, 0xdf, 0x7c, 0x6f, 0x86, 0xef, 0xbd, 0x4f, 0x82, 0xe0,
	0x1b, 0x07, 0xc8, 0x48, 0x2b, 0x78, 0xc5, 0x90, 0xf7, 0x51, 0x4d, 0x5a, 0xb9, 0x55, 0x30, 0x44,
	0xb9, 0x5a, 0x37, 0x4c, 0xa4, 0xaf, 0x98, 0x87, 0x1a, 0x32, 0xd2, 0x9a, 0x8e, 0x4d, 0x4c, 0xc5,
	0x9a, 0x6e, 0xe9, 0xa6, 0x5b, 0xda, 0xe1, 0x16, 0x5f, 0xae, 0x28, 0xe6, 0x7e, 0x7d, 0x37, 0x2d,
	0xe3, 0xda, 0x4a, 0x05, 0x57, 0xf0, 0x0a, 0x89, 0xd8, 0xad, 0xef, 0x91, 0x3b, 0x72, 0x43, 0xae,
	0x9a, 0x48, 0xf1, 0x4b, 0xee, 0x05, 0xb1, 0x66, 0x2a, 0x58, 0xb5, 0x97, 0x89, 0xc7, 0xdc, 0x46,
	0x07, 0x83, 0xf8, 0xa2, 0xdb, 0x74, 0x20, 0x55, 0x95, 0xb2, 0x64, 0x22, 0xdb, 0x9a, 0xec, 0xb2,
	0x2a, 0xe8, 0xb6, 0xe8, 0x86, 0x7e, 0xad, 0xd7, 0xc3, 0x70, 0x2e, 0x90, 0xfa, 0x04, 0xc0, 0xb9,
	0xab, 0x9a, 0x56, 0x55, 0x64, 0xc9, 0x8a, 0xbb, 0xaa, 0x57, 0xf0, 0xc6, 0xe6, 0x77, 0x0e, 0x35,
	0x44, 0x6d, 0xc0, 0xc9, 0x0a, 0x52, 0x91, 0x2e, 0x99, 0xa8, 0x2c, 0x1e, 0x4a, 0xb5, 0x2a, 0xfd,
	0x3c, 0x9c, 0x04, 0x57, 0x2e, 0xf2, 0x97, 0x1e, 0xdf, 0x01, 0xcf, 0x1a, 0x00, 0xfc, 0xed, 0xf9,
	0x71, 0x20, 0xa4, 0x07, 0xe8, 0xbb, 0x49, 0xfb, 0xea, 0x1e, 0x00, 0xc2, 0x44, 0x3b, 0xe6, 0x23,
	0xa9, 0x56, 0xa5, 0x76, 0xe0, 0x78, 0x15, 0xcb, 0x52, 0x55, 0x2c, 0xe3, 0x9a, 0xa4, 0xa8, 0x34,
	0x48, 0x82, 0x2b, 0x63, 0x5c, 0x26, 0xdd, 0x77, 0x63, 0xd3, 0x37, 0x2c, 0xf7, 0xab, 0xb2, 0x8c,
	0x0c, 0xa3, 0x43, 0x46, 0x18, 0x23, 0x28, 0x9b, 0x04, 0x24, 0x25, 0x42, 0xda, 0x41, 0x79, 0x53,
	0x32, 0xf6, 0x77, 0xb1, 0xa4, 0x97, 0x5f, 0x19, 0xeb, 0x94, 0x0c, 0x17, 0x1d, 0x0b, 0x7c, 0x1b,
	0x99, 0xba, 0x22, 0x1b, 0x3b, 0x48, 0x3f, 0x40, 0xfa, 0xab, 0x5b, 0xe4, 0x26, 0x8c, 0x39, 0x16,
	0xd9, 0xd6, 0x71, 0x0d, 0x99, 0xfb, 0xa8, 0x6e, 0xbc, 0xba, 0x15, 0xfe, 0x11, 0x82, 0xd4, 0x46,
	0x73, 0x5b, 0x3f, 0x54, 0xca, 0xe8, 0xaa, 0xa6, 0x11, 0xec, 0x0f, 0x60, 0x58, 0xd2, 0x2b, 0x58,
	0x94, 0xcb, 0xb4, 0xff, 0xdc, 0xe3, 0xf0, 0x7c, 0x37, 0xf8, 0xe0, 0x49, 0x03, 0x80, 0x92, 0x4f,
	0xb8, 0x60, 0x01, 0x6d, 0x94, 0xa9, 0x1d, 0x78, 0xb1, 0xdc, 0x3a, 0x06, 0x3a, 0x40, 0x40, 0xb3,
	0xc3, 0x81, 0xba, 0x4e, 0xaf, 0xe4, 0x13, 0x3a, 0x38, 0xd4, 0x4d, 0x38, 0x59, 0x6b, 0x6e, 0xbd,
	0x68, 0x90, 0xbd, 0xa7, 0x83, 0x04, 0x79, 0x6d, 0x38, 0xe4, 0x9e, 0x63, 0x2b, 0xf9, 0x84, 0x89,
	0x9a, 0xf3, 0x21, 0xf5, 0x5d, 0x08, 0xb5, 0xf6, 0xbe, 0xd3, 0x21, 0x82, 0x9e, 0x1b, 0x0e, 0xdd,
	0x7d, 0x5e, 0x25, 0x9f, 0xe0, 0x40, 0x5a, 0xff, 0x9d, 0xff, 0xb3, 0x06, 0xf8, 0x8d, 0x1f, 0x7e,
	0x0c, 0x83, 0x96, 0x75, 0x49, 0x87, 0x1a, 0xa4, 0xda, 0xbb, 0xce, 0x85, 0xad, 0x9d, 0x4c, 0x6e,
	0x6c, 0xc2, 0xb8, 0x63, 0xdb, 0xb8, 0x89, 0x6f, 0x15, 0x8c, 0x64, 0x7b, 0x3b, 0xe0, 0xeb, 0xdd,
	0xd9, 0x73, 0x94, 0xe5, 0x60, 0x67, 0x95, 0x6c, 0x66, 0x00, 0x69, 0x67, 0x06, 0x1c, 0xec, 0xb0,
	0x82, 0xbf, 0x05, 0x10, 0x6e, 0x4b, 0xba, 0x54, 0x43, 0x26, 0xd2, 0x0d, 0xe1, 0x1e, 0x80, 0x2c,
	0x75, 0xd9, 0x66, 0x90, 0x76, 0xd6, 0xa4, 0xeb, 0x26, 0x3e, 0x4e, 0xea, 0x2f, 0xd9, 0xac, 0x34,
	0x58, 0xe8, 0x13, 0x52, 0x46, 0x7b, 0x52, 0xbd, 0x6a, 0x8a, 0x1a, 0xd6, 0xcd, 0xf8, 0xf8, 0x66,
	0xf3, 0x2e, 0xb9, 0x8d, 0x75, 0x73, 0x3d, 0xb4, 0x9a, 0xcf, 0xe5, 0xb2, 0xf0, 0x32, 0x15, 0xf3,
	0x8c, 0x24, 0x11, 0x41, 0xcb, 0x93, 0xbf, 0x0c, 0xa1, 0xa4, 0x69, 0xa2, 0xbc, 0x8f, 0x15, 0x19,
	0x51, 0x33, 0xc7, 0x0d, 0xe0, 0xb7, 0x5e, 0xab, 0xd3, 0x06, 0x08, 0x73, 0x4c, 0x96, 0xc9, 0x31,
	0xf9, 0xad, 0x60, 0x04, 0x44, 0xfd, 0xa9, 0x3f, 0x02, 0x38, 0xef, 0x7e, 0x8f, 0x6f, 0x28, 0x86,
	0x49, 0xde, 0x65, 0x0c, 0xa7, 0xed, 0xc3, 0x11, 0x6f, 0x2b, 0x65, 0x24, 0x4a, 0x9a, 0x66, 0xd0,
	0x20, 0x19, 0xb8, 0x32, 0xc6, 0x2d, 0x0f, 0x38, 0xc8, 0xde, 0xaa, 0xe0, 0x67, 0x49, 0x1d, 0x3d,
	0x00, 0xfe, 0x68, 0xa8, 0x75, 0x15, 0x01, 0xc2, 0x94, 0xec, 0xf2, 0x34, 0xd6, 0x5f, 0x7f, 0xd4,
	0x00, 0x49, 0x98, 0x80, 0x31, 0x1b, 0x22, 0x69, 0x59, 0x92, 0x8e, 0x17, 0xc3, 0xa0, 0x00, 0x9b,
	0xfa, 0xb7, 0x1f, 0xce, 0x39, 0x1a, 0xd9, 0x06, 0x56, 0xf7, 0x94, 0x0a, 0x21, 0xfc, 0x4d, 0x8f,
	0x86, 0x78, 0x91, 0x5f, 0xb4, 0x96, 0x0c, 0xea, 0xfe, 0xfd, 0x76, 0x5d, 0x1f, 0x03, 0xfb, 0x51,
	0x14, 0xb8, 0x9a, 0x1f, 0x55, 0x84, 0xe3, 0xce, 0xdd, 0xb7, 0xab, 0x6d, 0xb6, 0x2b, 0xd9, 0x77,
	0x6b, 0x9a, 0x79, 0x58, 0xf2, 0x09, 0x63, 0xb6, 0xaf, 0xb5, 0xe1, 0xd4, 0x27, 0x00, 0x06, 0x49,
	0x8c, 0x55, 0x47, 0x13, 0xfc, 0xaf, 0xc9, 0x12, 0xbf, 0x02, 0x4b, 0xf7, 0xc1, 0xd6, 0x2f, 0x40,
	0x86, 0x59, 0xcd, 0xe5, 0xb2, 0x4c, 0x21, 0x93, 0xc9, 0x2f, 0x17, 0x32, 0x99, 0x35, 0xa6, 0x90,
	0xcb, 0x65, 0x97, 0x0b, 0xb9, 0x5c, 0x8e, 0x29, 0xe4, 0xad, 0x67, 0xf9, 0xcc, 0x1a, 0x53, 0xb4,
	0xac, 0xc5, 0x0c, 0xb9, 0x2a, 0x66, 0x98, 0xa2, 0x65, 0x28, 0x12, 0x03, 0x9b, 0xc9, 0x30, 0x45,
	0x96, 0xcd, 0x33, 0xc5, 0x62, 0xb1, 0xc8, 0x70, 0x99, 0x22, 0x9b, 0x63, 0xb8, 0x6c, 0x21, 0xc3,
	0x31, 0xd9, 0x4c, 0x21, 0x93, 0xb7, 0xfe, 0xe6, 0xad, 0xbf, 0x45, 0x72, 0x5d, 0xb4, 0xae, 0x39,
	0x8e, 0xe3, 0x18, 0xb6, 0x90, 0x29, 0xb2, 0xcb, 0xd6, 0xdf, 0x3c, 0xb3, 0x9a, 0xcf, 0x64, 0x32,
	0xcb, 0xab, 0xf9, 0x6c, 0x36, 0x57, 0xf2, 0x09, 0x84, 0x2a, 0x9f, 0x80, 0x63, 0xd6, 0xff, 0xd6,
	0x5b, 0x32, 0x75, 0xdc, 0x00, 0x81, 0x93, 0x06, 0xf0, 0x9f, 0x36, 0x40, 0x20, 0xcb, 0xe4, 0xb6,
	0x82, 0x11, 0x7f, 0x34, 0x90, 0x7a, 0x18, 0x70, 0xed, 0xb7, 0x63, 0x8a, 0x8d, 0xf6, 0xfb, 0x85,
	0xf6, 0x9b, 0xfa, 0x06, 0x8c, 0x68, 0x92, 0x61, 0xdc, 0xc6, 0x7a, 0xd9, 0x6e, 0x88, 0xb1, 0xae,
	0x54, 0x77, 0x90, 0xac, 0x23, 0xb3, 0x33, 0x06, 0x84, 0x76, 0xc0, 0x90, 0x87, 0xf5, 0x07, 0x00,
	0x63, 0xdb, 0xb8, 0xbc, 0x83, 0xe4, 0xba, 0xae, 0x98, 0x87, 0xdb, 0xb8, 0xaa, 0xc8, 0x87, 0xed,
	0x8a, 0xbe, 0x07, 0xe0, 0x9c, 0x86, 0xcb, 0xa2, 0x61, 0x9b, 0x45, 0xcd, 0xb2, 0x2b, 0xa8, 0x55,
	0xd6, 0xa9, 0x2e, 0x3a, 0x44, 0xd2, 0xa4, 0xdf, 0xdf, 0xfd, 0x21, 0x92, 0x4d, 0x01, 0xed, 0x11,
	0x5e, 0x85, 0x87, 0x77, 0x16, 0xac, 0x72, 0xef, 0xc5, 0x39, 0x6c, 0x57, 0x79, 0xb4, 0x53, 0xe5,
	0xad, 0x2b, 0x1a, 0x08, 0x33, 0x5a, 0x17, 0x31, 0x05, 0x19, 0xa9, 0xfb, 0x00, 0xce, 0xd8, 0xe5,
	0x2e, 0xe0, 0x2a, 0x6a, 0x53, 0xfd, 0x18, 0x4e, 0xb4, 0x9a, 0x8f, 0x8e, 0xab, 0x2f, 0xc4, 0x90,
	0x7d, 0x78, 0x27, 0xea, 0x68, 0x48, 0x24, 0xbe, 0x4d, 0xad, 0xec, 0x49, 0x6d, 0x5c, 0xee, 0x50,
	0x30, 0x52, 0x7f, 0x02, 0x30, 0xee, 0xe0, 0xc4, 0x2b, 0x6a, 0x59, 0x51, 0x2b, 0x6d, 0x6a, 0xf7,
	0x01, 0x9c, 0x73, 0x62, 0x8b, 0xbb, 0x4d, 0x87, 0x17, 0xe1, 0x58, 0x7c, 0x78, 0x87, 0xee, 0xe6,
	0xd8, 0xc2, 0x39, 0x87, 0xeb, 0x8c, 0xdc, 0x43, 0x8d, 0x50, 0xa6, 0xaf, 0xab, 0xe4, 0x3c, 0x90,
	0x80, 0x2a, 0x8a, 0x61, 0xea, 0x9d, 0x63, 0xaf, 0xc1, 0x19, 0xc5, 0xb6, 0x89, 0x7a, 0xd3, 0xd8,
	0x3a, 0xf3, 0x8b, 0xfc, 0x5b, 0x16, 0x34, 0x7c, 0x00, 0xc2, 0xa9, 0x90, 0x1e, 0xf8, 0xbc, 0x29,
	0x7e, 0x5a, 0xb7, 0x57, 0xee, 0xfa, 0xcf, 0x39, 0x53, 0x4a, 0x71, 0x2f, 0xaa, 0x20, 0x63, 0xfd,
	0x8d, 0x47, 0x0d, 0x70, 0x19, 0xbe, 0x06, 0xe3, 0x9b, 0x58, 0xbe, 0x85, 0xf4, 0x64, 0x8b, 0x57,
	0xb2, 0xe3, 0x63, 0xf5, 0xf1, 0xff, 0xcc, 0xc1, 0xc9, 0x6b, 0x55, 0xbc, 0x2b, 0x55, 0x77, 0x34,
	0x24, 0x13, 0xa2, 0x6f, 0xc3, 0x29, 0x15, 0x8b, 0xcd, 0x9e, 0x22, 0x91, 0x6e, 0x63, 0xab, 0xa8,
	0x7e, 0x2d, 0x61, 0x42, 0xc5, 0x8e, 0xd6, 0x44, 0xed, 0xc2, 0x19, 0x67, 0xb0, 0x28, 0x93, 0xd9,
	0x60, 0xb7, 0x95, 0x21, 0x85, 0x71, 0x67, 0x9e, 0x94, 0x7c, 0xc2, 0x74, 0xb5, 0xdb, 0x40, 0xbd,
	0x03, 0xa3, 0x2a, 0x16, 0x2b, 0x84, 0x78, 0x8b, 0x64, 0x68, 0x00, 0x49, 0x20, 0x4c, 0xaa, 0xb8,
	0x99, 0xa7, 0xcd, 0xb2, 0x04, 0x67, 0x5d, 0xe1, 0x22, 0x52, 0xa5, 0xdd, 0x2a, 0xa2, 0x2f, 0x0c,
	0x44, 0xa1, 0x2a, 0x0e, 0x8c, 0x77, 0x49, 0x84, 0xb5, 0x5f, 0x75, 0x03, 0x89, 0xed, 0x1e, 0x6a,
	0x68, 0x74, 0x64, 0x00, 0x88, 0x5f, 0x98, 0xa8, 0x1b, 0xc8, 0x56, 0x14, 0xdb, 0x86, 0x46, 0x21,
	0x38, 0x63, 0xc5, 0xcb, 0x75, 0xc3, 0xc4, 0x35, 0x2b, 0x5c, 0xac, 0x2a, 0x86, 0x49, 0x5f, 0x3c,
	0x57, 0xac, 0xf5, 0x6d, 0x31, 0x25, 0xbf, 0x10, 0xad, 0x1b, 0x68, 0x83, 0x20, 0x6e, 0x1b, 0x44,
	0x4c, 0x50, 0x1f, 0xc0, 0x98, 0x93, 0xa6, 0xbb, 0xae, 0xc7, 0x06, 0x10, 0x0e, 0x08, 0xf3, 0x1d,
	0xc2, 0x8e, 0x8a, 0x34, 0x28, 0x0d, 0x2e, 0x3a, 0x98, 0xbb, 0xaa, 0x88, 0xa4, 0x30, 0x4e, 0x50,
	0xd3, 0xe7, 0xcb, 0x14, 0x67, 0xd3, 0x29, 0x05, 0x04, 0xba, 0x4d, 0xbe, 0xcb, 0x4e, 0xdd, 0x84,
	0x97, 0xfb, 0x25, 0xd1, 0x69, 0x00, 0x93, 0x03, 0x92, 0x09, 0x0a, 0x5f, 0xf1, 0x4c, 0xa6, 0x55,
	0xc3, 0xd4, 0x4f, 0x61, 0xb2, 0x5f, 0x4e, 0xed, 0x05, 0xa6, 0xc8, 0x02, 0xf9, 0xe1, 0xf2, 0xea,
	0x6a, 0x5c, 0xa5, 0xa0, 0xb0, 0xe8, 0x95, 0x5e, 0x9b, 0xc0, 0x35, 0x38, 0xab, 0x62, 0xb1, 0x57,
	0xf3, 0x4d, 0x0f, 0xc8, 0x2a, 0x24, 0x4c, 0xab, 0xd8, 0x2d, 0xf9, 0xac, 0xd3, 0x99, 0xeb, 0x46,
	0x69, 0x1e, 0x0b, 0x45, 0x90, 0xd8, 0xa1, 0xd5, 0x63, 0x8b, 0x3a, 0x1f, 0x39, 0x6e, 0x00, 0x40,
	0x3e, 0x18, 0x85, 0x04, 0x4a, 0xee, 0xf1, 0xa1, 0x04, 0x38, 0xaf, 0x62, 0xd1, 0xab, 0xcb, 0xcd,
	0xf6, 0x27, 0xcf, 0x07, 0x2d, 0xd4, 0xd2, 0x05, 0x61, 0x56, 0xc5, 0xd7, 0x7b, 0xfa, 0x18, 0xf5,
	0x23, 0x38, 0xdf, 0x0d, 0x78, 0xd8, 0x4c, 0x63, 0xee, 0xdc, 0x4f, 0x61, 0xfd, 0x7a, 0x71, 0x67,
	0x49, 0xc5, 0xc3, 0x83, 0xfa, 0x08, 0xc6, 0x5b, 0x1b, 0x67, 0xc8, 0x58, 0x43, 0xe5, 0x56, 0x8b,
	0x28, 0x23, 0xf5, 0x90, 0x5e, 0x38, 0x37, 0x95, 0xb0, 0xb0, 0x60, 0xc7, 0xef, 0x90, 0xf0, 0x66,
	0xb7, 0xd8, 0x44, 0xea, 0x21, 0xf5, 0x7d, 0xb8, 0xe8, 0x0d, 0xad, 0x21, 0xbd, 0xa6, 0x98, 0x34,
	0x3d, 0x04, 0x78, 0xcc, 0x03, 0x7c, 0x9b, 0x84, 0x5b, 0xcc, 0x0f, 0xac, 0x0d, 0x50, 0xa5, 0x1a,
	0x32, 0x34, 0x49, 0x46, 0x2e, 0xe6, 0xf1, 0x73, 0xc1, 0x23, 0xc2, 0x82, 0x15, 0xff, 0x5e, 0x2b,
	0xdc, 0xcd, 0xdc, 0x1b, 0xda, 0x66, 0x7e, 0x69, 0x08, 0xf0, 0x98, 0x07, 0xb8, 0xcd, 0xfc, 0x07,
	0x70, 0x82, 0x7c, 0xb9, 0xa3, 0xa8, 0x26, 0xd2, 0x55, 0xa9, 0x4a, 0x3f, 0x0b, 0x13, 0xc0, 0x61,
	0xc6, 0xf8, 0xec, 0xc3, 0x3b, 0xee, 0xe0, 0x67, 0x96, 0x68, 0x1b, 0xb7, 0x1e, 0x5d, 0xb7, 0x9f,
	0x50, 0xbf, 0x04, 0xf0, 0xd2, 0x9e, 0xa2, 0x4a, 0xd5, 0x3e, 0x25, 0xfd, 0x3c, 0x3c, 0xb4, 0x6a,
	0x58, 0x19, 0x46, 0x35, 0xa4, 0x1c, 0xe3, 0x99, 0x26, 0x0b, 0x7b, 0xd5, 0xfa, 0x4f, 0xe0, 0x4c,
	0x2f, 0x29, 0x83, 0xfe, 0xe7, 0xf0, 0x64, 0xde, 0x1c, 0x24, 0xb3, 0x9c, 0x24, 0xa6, 0xbb, 0x49,
	0x18, 0xd4, 0x83, 0xf6, 0x9e, 0x78, 0xcb, 0xd1, 0x7f, 0x0d, 0x4f, 0x23, 0x3d, 0x84, 0x1e, 0xed,
	0xdd, 0x92, 0xed, 0x5e, 0x29, 0xba, 0x2e, 0x3c, 0x6a, 0x80, 0xf7, 0xe0, 0x04, 0xbc, 0x60, 0xcf,
	0xe9, 0x00, 0xcb, 0xe4, 0xe0, 0x22, 0x8c, 0xb4, 0x1c, 0xa9, 0xe8, 0x1a, 0xc3, 0x66, 0x18, 0x36,
	0xcb, 0xb0, 0x45, 0x86, 0xe3, 0x18, 0x2e, 0x0f, 0x5f, 0x1b, 0xf4, 0x59, 0xd5, 0xcf, 0xae, 0xf2,
	0x5f, 0xed, 0x56, 0x24, 0x1d, 0xf5, 0xde, 0xfa, 0x40, 0x1e, 0xe0, 0x98, 0x2c, 0xff, 0x66, 0xb7,
	0x26, 0x70, 0x38, 0x86, 0x4e, 0x1a, 0x20, 0x68, 0x39, 0xe6, 0x99, 0x55, 0x7e, 0x19, 0xc6, 0x3d,
	0x32, 0x75, 0xba, 0x47, 0x4e, 0x1a, 0x20, 0x6c, 0xb9, 0x17, 0x98, 0x22, 0x7f, 0x05, 0xce, 0xb8,
	0x5e, 0x16, 0xdb, 0x6f, 0xfa, 0xb8, 0x01, 0xc6, 0x4e, 0x1a, 0x00, 0x9e, 0x36, 0x40, 0x88, 0x65,
	0x19, 0x96, 0xe3, 0xd9, 0x4e, 0x7f, 0x70, 0xbd, 0x9f, 0xce, 0x90, 0xc9, 0x93, 0x06, 0x98, 0x20,
	0x21, 0x39, 0x86, 0xcd, 0xf3, 0x49, 0x38, 0x66, 0xcd, 0x07, 0xa7, 0xc7, 0xf4, 0x49, 0x03, 0x44,
	0x89, 0xc7, 0x1a, 0xc3, 0x16, 0xf8, 0x2c, 0x8c, 0x7b, 0xf4, 0xe4, 0x56, 0xc0, 0xdc, 0x71, 0x03,
	0xcc, 0x7e, 0xda, 0x6c, 0xec, 0x33, 0x56, 0x10, 0x97, 0x61, 0x38, 0x96, 0x7f, 0x1b, 0xbe, 0xd1,
	0xd5, 0xa9, 0x74, 0x64, 0xe0, 0xba, 0xde, 0x29, 0x7c, 0x47, 0xfc, 0x82, 0x1d, 0x3f, 0x4f, 0xe2,
	0xb3, 0x0c, 0x97, 0xe3, 0xcb, 0xfd, 0xfa, 0x85, 0x1d, 0xb6, 0x79, 0xdc, 0x00, 0x71, 0x3b, 0x2c,
	0x46, 0xc2, 0x56, 0x19, 0x6e, 0xed, 0x67, 0x7f, 0x07, 0x5f, 0x5f, 0x0a, 0xc8, 0xba, 0xb9, 0x14,
	0x36, 0x4c, 0xa9, 0xa2, 0xa8, 0x95, 0xa5, 0xa0, 0xa6, 0xe3, 0xf2, 0xd2, 0xb8, 0x81, 0xf7, 0xcc,
	0x5d, 0x49, 0xbd, 0x25, 0xd6, 0x90, 0xbc, 0x14, 0xde, 0x43, 0x65, 0x5d, 0xaa, 0x69, 0xcd, 0xaf,
	0x4f, 0xb6, 0x82, 0x91, 0x60, 0x34, 0xb4, 0x15, 0x8c, 0x84, 0xa3, 0x91, 0xad, 0x60, 0x04, 0x46,
	0xc7, 0xb6, 0x82, 0x91, 0x89, 0xe8, 0xe4, 0x56, 0x30, 0x12, 0x8d, 0x4e, 0x6f, 0x05, 0x23, 0x33,
	0xd1, 0xd9, 0xad, 0x60, 0x64, 0x3e, 0xba, 0xb0, 0x15, 0x8c, 0xc4, 0xa2, 0xf1, 0xd4, 0x5f, 0xa6,
	0xe0, 0xe4, 0x86, 0x8e, 0x24, 0x13, 0x8d, 0x44, 0xef, 0x48, 0xf4, 0x8e, 0x44, 0xef, 0xff, 0x91,
	0xe8, 0xad, 0xbe, 0x72, 0xd1, 0xdb, 0x14, 0x2f, 0xde, 0x82, 0xf7, 0xc6, 0xcb, 0x08, 0xde, 0xbe,
	0x52, 0xf7, 0xd6, 0xff, 0x40, 0xea, 0xf6, 0x15, 0xb9, 0x3b, 0x2f, 0x2b, 0x72, 0x07, 0xc9, 0xdb,
	0x0f, 0x5f, 0x5e, 0xde, 0x0e, 0x14, 0xb6, 0xeb, 0xd3, 0x9f, 0xbd, 0xdd, 0xf5, 0x35, 0x05, 0x9f,
	0xf6, 0x1e, 0xea, 0x0b, 0x47, 0x67, 0xc0, 0xcb, 0xc0, 0x67, 0xfa, 0x0c, 0x77, 0xfa, 0xe8, 0x0c,
	0x78, 0x5a, 0xf8, 0xb7, 0x06, 0x4e, 0xf9, 0xc4, 0xd1, 0x19, 0x18, 0x60, 0xb7, 0xf8, 0x79, 0x0d,
	0x7d, 0xc2, 0xcf, 0xc3, 0xc0, 0xbf, 0x73, 0xce, 0xe8, 0x4f, 0x1e, 0x9d, 0x81, 0x81, 0x1e, 0x7c,
	0xc2, 0xad, 0x04, 0xa6, 0x8e, 0xce, 0x80, 0xf3, 0x81, 0x95, 0xcf, 0x00, 0x1d, 0x40, 0xf2, 0xe9,
	0x6f, 0xe7, 0x85, 0x61, 0x05, 0xc1, 0xd7, 0x8e, 0xce, 0xc0, 0x70, 0xae, 0x2f, 0x3a, 0xbe, 0x53,
	0x7f, 0x9d, 0x82, 0x53, 0x02, 0xd2, 0xaa, 0x92, 0x3c, 0x9a, 0xdc, 0xa3, 0xc9, 0x3d, 0x9a, 0xdc,
	0xa3, 0xc9, 0x3d, 0x9a, 0xdc, 0xa3, 0xc9, 0x3d, 0x9a, 0xdc, 0x5f, 0xfe, 0xc9, 0xfd, 0xe7, 0x29,
	0x38, 0x76, 0x0d, 0x99, 0xa3, 0xa9, 0x3d, 0x9a, 0xda, 0xa3, 0xa9, 0x3d, 0x9a, 0xda, 0xa3, 0xa9,
	0x3d, 0x9a, 0xda, 0xa3, 0xa9, 0xfd, 0x65, 0x9f, 0xda, 0xfc, 0xcf, 0xc1, 0xc9, 0x93, 0x84, 0xef,
	0xf1, 0x93, 0x84, 0xef, 0x8b, 0x27, 0x09, 0x70, 0xf7, 0x34, 0x01, 0x7e, 0x7f, 0x9a, 0x00, 0x9f,
	0x9e, 0x26, 0xc0, 0xc9, 0x69, 0x02, 0x3c, 0x3e, 0x4d, 0x80, 0xcf, 0x4f, 0x13, 0xe0, 0xd9, 0x69,
	0xc2, 0xf7, 0xc5, 0x69, 0x02, 0xdc, 0x7b, 0x9a, 0xf0, 0x1d, 0x3f, 0x4d, 0x80, 0x93, 0xa7, 0x09,
	0xdf, 0xe3, 0xa7, 0x09, 0xdf, 0xf7, 0xde, 0xaf, 0x60, 0xed, 0x56, 0x25, 0x7d, 0x80, 0xab, 0x26,
	0xd2, 0x75, 0x29, 0x5d, 0x37, 0x56, 0xc8, 0xc5, 0x1e, 0xd6, 0x6b, 0xcb, 0x9a, 0x8e, 0x0f, 0x94,
	0x32, 0xd2, 0x97, 0x5b, 0xe6, 0x15, 0x6d, 0xb7, 0x82, 0x57, 0xd0, 0x8f, 0x4d, 0xfb, 0xa7, 0xdc,
	0xbd, 0x3f, 0x5d, 0xdf, 0xbd, 0x40, 0x7e, 0xd2, 0x9d, 0xfd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x4d, 0x05, 0x92, 0x40, 0xde, 0x2e, 0x00, 0x00,
}

func (this *ApplicationArgoCDType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ApplicationArgoCDType)
	if !ok {
		that2, ok := that.(ApplicationArgoCDType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GeneratedYaml != that1.GeneratedYaml {
		return false
	}
	if !this.LocalDomain.Equal(that1.LocalDomain) {
		return false
	}
	return true
}
func (this *ApplicationDashboardType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ApplicationDashboardType)
	if !ok {
		that2, ok := that.(ApplicationDashboardType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GeneratedYaml != that1.GeneratedYaml {
		return false
	}
	return true
}
func (this *ApplicationMetricsServerType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ApplicationMetricsServerType)
	if !ok {
		that2, ok := that.(ApplicationMetricsServerType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GeneratedYaml != that1.GeneratedYaml {
		return false
	}
	return true
}
func (this *ApplicationPrometheusType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ApplicationPrometheusType)
	if !ok {
		that2, ok := that.(ApplicationPrometheusType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GeneratedYaml != that1.GeneratedYaml {
		return false
	}
	return true
}
func (this *ClusterWideAppType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType)
	if !ok {
		that2, ok := that.(ClusterWideAppType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.AppChoice == nil {
		if this.AppChoice != nil {
			return false
		}
	} else if this.AppChoice == nil {
		return false
	} else if !this.AppChoice.Equal(that1.AppChoice) {
		return false
	}
	return true
}
func (this *ClusterWideAppType_ArgoCd) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType_ArgoCd)
	if !ok {
		that2, ok := that.(ClusterWideAppType_ArgoCd)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ArgoCd.Equal(that1.ArgoCd) {
		return false
	}
	return true
}
func (this *ClusterWideAppType_Dashboard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType_Dashboard)
	if !ok {
		that2, ok := that.(ClusterWideAppType_Dashboard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Dashboard.Equal(that1.Dashboard) {
		return false
	}
	return true
}
func (this *ClusterWideAppType_MetricsServer) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType_MetricsServer)
	if !ok {
		that2, ok := that.(ClusterWideAppType_MetricsServer)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MetricsServer.Equal(that1.MetricsServer) {
		return false
	}
	return true
}
func (this *ClusterWideAppType_Prometheus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType_Prometheus)
	if !ok {
		that2, ok := that.(ClusterWideAppType_Prometheus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Prometheus.Equal(that1.Prometheus) {
		return false
	}
	return true
}
func (this *ClusterWideAppListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppListType)
	if !ok {
		that2, ok := that.(ClusterWideAppListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ClusterWideApps) != len(that1.ClusterWideApps) {
		return false
	}
	for i := range this.ClusterWideApps {
		if !this.ClusterWideApps[i].Equal(that1.ClusterWideApps[i]) {
			return false
		}
	}
	return true
}
func (this *LocalAccessConfigType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessConfigType)
	if !ok {
		that2, ok := that.(LocalAccessConfigType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LocalDomain != that1.LocalDomain {
		return false
	}
	if that1.PortChoice == nil {
		if this.PortChoice != nil {
			return false
		}
	} else if this.PortChoice == nil {
		return false
	} else if !this.PortChoice.Equal(that1.PortChoice) {
		return false
	}
	return true
}
func (this *LocalAccessConfigType_DefaultPort) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessConfigType_DefaultPort)
	if !ok {
		that2, ok := that.(LocalAccessConfigType_DefaultPort)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DefaultPort.Equal(that1.DefaultPort) {
		return false
	}
	return true
}
func (this *LocalAccessConfigType_Port) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessConfigType_Port)
	if !ok {
		that2, ok := that.(LocalAccessConfigType_Port)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Port != that1.Port {
		return false
	}
	return true
}
func (this *LocalAccessArgoCDType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessArgoCDType)
	if !ok {
		that2, ok := that.(LocalAccessArgoCDType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LocalDomain != that1.LocalDomain {
		return false
	}
	if that1.PortChoice == nil {
		if this.PortChoice != nil {
			return false
		}
	} else if this.PortChoice == nil {
		return false
	} else if !this.PortChoice.Equal(that1.PortChoice) {
		return false
	}
	if !this.Password.Equal(that1.Password) {
		return false
	}
	return true
}
func (this *LocalAccessArgoCDType_DefaultPort) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessArgoCDType_DefaultPort)
	if !ok {
		that2, ok := that.(LocalAccessArgoCDType_DefaultPort)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DefaultPort.Equal(that1.DefaultPort) {
		return false
	}
	return true
}
func (this *LocalAccessArgoCDType_Port) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessArgoCDType_Port)
	if !ok {
		that2, ok := that.(LocalAccessArgoCDType_Port)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Port != that1.Port {
		return false
	}
	return true
}
func (this *PodSecurityPolicyListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PodSecurityPolicyListType)
	if !ok {
		that2, ok := that.(PodSecurityPolicyListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.PodSecurityPolicies) != len(that1.PodSecurityPolicies) {
		return false
	}
	for i := range this.PodSecurityPolicies {
		if !this.PodSecurityPolicies[i].Equal(that1.PodSecurityPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *ClusterRoleListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterRoleListType)
	if !ok {
		that2, ok := that.(ClusterRoleListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ClusterRoles) != len(that1.ClusterRoles) {
		return false
	}
	for i := range this.ClusterRoles {
		if !this.ClusterRoles[i].Equal(that1.ClusterRoles[i]) {
			return false
		}
	}
	return true
}
func (this *ClusterRoleBindingListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterRoleBindingListType)
	if !ok {
		that2, ok := that.(ClusterRoleBindingListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ClusterRoleBindings) != len(that1.ClusterRoleBindings) {
		return false
	}
	for i := range this.ClusterRoleBindings {
		if !this.ClusterRoleBindings[i].Equal(that1.ClusterRoleBindings[i]) {
			return false
		}
	}
	return true
}
func (this *InsecureRegistryListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*InsecureRegistryListType)
	if !ok {
		that2, ok := that.(InsecureRegistryListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.InsecureRegistries) != len(that1.InsecureRegistries) {
		return false
	}
	for i := range this.InsecureRegistries {
		if this.InsecureRegistries[i] != that1.InsecureRegistries[i] {
			return false
		}
	}
	return true
}
func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	if that1.AppsChoice == nil {
		if this.AppsChoice != nil {
			return false
		}
	} else if this.AppsChoice == nil {
		return false
	} else if !this.AppsChoice.Equal(that1.AppsChoice) {
		return false
	}
	if that1.InsecureRegistriesChoice == nil {
		if this.InsecureRegistriesChoice != nil {
			return false
		}
	} else if this.InsecureRegistriesChoice == nil {
		return false
	} else if !this.InsecureRegistriesChoice.Equal(that1.InsecureRegistriesChoice) {
		return false
	}
	if that1.ClusterScopedResourceAccessChoice == nil {
		if this.ClusterScopedResourceAccessChoice != nil {
			return false
		}
	} else if this.ClusterScopedResourceAccessChoice == nil {
		return false
	} else if !this.ClusterScopedResourceAccessChoice.Equal(that1.ClusterScopedResourceAccessChoice) {
		return false
	}
	if that1.Vk8SNamespaceAccessChoice == nil {
		if this.Vk8SNamespaceAccessChoice != nil {
			return false
		}
	} else if this.Vk8SNamespaceAccessChoice == nil {
		return false
	} else if !this.Vk8SNamespaceAccessChoice.Equal(that1.Vk8SNamespaceAccessChoice) {
		return false
	}
	if !this.ViewInternal.Equal(that1.ViewInternal) {
		return false
	}
	if len(this.FinalClusterRoleBindings) != len(that1.FinalClusterRoleBindings) {
		return false
	}
	for i := range this.FinalClusterRoleBindings {
		if !this.FinalClusterRoleBindings[i].Equal(that1.FinalClusterRoleBindings[i]) {
			return false
		}
	}
	if len(this.FinalClusterRoles) != len(that1.FinalClusterRoles) {
		return false
	}
	for i := range this.FinalClusterRoles {
		if !this.FinalClusterRoles[i].Equal(that1.FinalClusterRoles[i]) {
			return false
		}
	}
	if len(this.FinalPodSecurityPolicies) != len(that1.FinalPodSecurityPolicies) {
		return false
	}
	for i := range this.FinalPodSecurityPolicies {
		if !this.FinalPodSecurityPolicies[i].Equal(that1.FinalPodSecurityPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *GlobalSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(GlobalSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *GlobalSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(GlobalSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *GlobalSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(GlobalSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *GlobalSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(GlobalSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GlobalSpecType_NoClusterWideApps) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NoClusterWideApps)
	if !ok {
		that2, ok := that.(GlobalSpecType_NoClusterWideApps)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoClusterWideApps.Equal(that1.NoClusterWideApps) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ClusterWideAppList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ClusterWideAppList)
	if !ok {
		that2, ok := that.(GlobalSpecType_ClusterWideAppList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterWideAppList.Equal(that1.ClusterWideAppList) {
		return false
	}
	return true
}
func (this *GlobalSpecType_NoInsecureRegistries) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NoInsecureRegistries)
	if !ok {
		that2, ok := that.(GlobalSpecType_NoInsecureRegistries)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoInsecureRegistries.Equal(that1.NoInsecureRegistries) {
		return false
	}
	return true
}
func (this *GlobalSpecType_InsecureRegistryList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_InsecureRegistryList)
	if !ok {
		that2, ok := that.(GlobalSpecType_InsecureRegistryList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.InsecureRegistryList.Equal(that1.InsecureRegistryList) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ClusterScopedAccessDeny) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ClusterScopedAccessDeny)
	if !ok {
		that2, ok := that.(GlobalSpecType_ClusterScopedAccessDeny)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessDeny.Equal(that1.ClusterScopedAccessDeny) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ClusterScopedAccessPermit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ClusterScopedAccessPermit)
	if !ok {
		that2, ok := that.(GlobalSpecType_ClusterScopedAccessPermit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessPermit.Equal(that1.ClusterScopedAccessPermit) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Vk8SNamespaceAccessDeny) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Vk8SNamespaceAccessDeny)
	if !ok {
		that2, ok := that.(GlobalSpecType_Vk8SNamespaceAccessDeny)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Vk8SNamespaceAccessDeny.Equal(that1.Vk8SNamespaceAccessDeny) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Vk8SNamespaceAccessPermit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Vk8SNamespaceAccessPermit)
	if !ok {
		that2, ok := that.(GlobalSpecType_Vk8SNamespaceAccessPermit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Vk8SNamespaceAccessPermit.Equal(that1.Vk8SNamespaceAccessPermit) {
		return false
	}
	return true
}
func (this *CreateSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType)
	if !ok {
		that2, ok := that.(CreateSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	if that1.AppsChoice == nil {
		if this.AppsChoice != nil {
			return false
		}
	} else if this.AppsChoice == nil {
		return false
	} else if !this.AppsChoice.Equal(that1.AppsChoice) {
		return false
	}
	if that1.InsecureRegistriesChoice == nil {
		if this.InsecureRegistriesChoice != nil {
			return false
		}
	} else if this.InsecureRegistriesChoice == nil {
		return false
	} else if !this.InsecureRegistriesChoice.Equal(that1.InsecureRegistriesChoice) {
		return false
	}
	if that1.ClusterScopedResourceAccessChoice == nil {
		if this.ClusterScopedResourceAccessChoice != nil {
			return false
		}
	} else if this.ClusterScopedResourceAccessChoice == nil {
		return false
	} else if !this.ClusterScopedResourceAccessChoice.Equal(that1.ClusterScopedResourceAccessChoice) {
		return false
	}
	return true
}
func (this *CreateSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(CreateSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *CreateSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(CreateSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *CreateSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(CreateSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *CreateSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(CreateSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(CreateSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(CreateSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(CreateSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(CreateSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(CreateSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(CreateSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *CreateSpecType_NoClusterWideApps) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NoClusterWideApps)
	if !ok {
		that2, ok := that.(CreateSpecType_NoClusterWideApps)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoClusterWideApps.Equal(that1.NoClusterWideApps) {
		return false
	}
	return true
}
func (this *CreateSpecType_ClusterWideAppList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ClusterWideAppList)
	if !ok {
		that2, ok := that.(CreateSpecType_ClusterWideAppList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterWideAppList.Equal(that1.ClusterWideAppList) {
		return false
	}
	return true
}
func (this *CreateSpecType_NoInsecureRegistries) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NoInsecureRegistries)
	if !ok {
		that2, ok := that.(CreateSpecType_NoInsecureRegistries)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoInsecureRegistries.Equal(that1.NoInsecureRegistries) {
		return false
	}
	return true
}
func (this *CreateSpecType_InsecureRegistryList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_InsecureRegistryList)
	if !ok {
		that2, ok := that.(CreateSpecType_InsecureRegistryList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.InsecureRegistryList.Equal(that1.InsecureRegistryList) {
		return false
	}
	return true
}
func (this *CreateSpecType_ClusterScopedAccessDeny) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ClusterScopedAccessDeny)
	if !ok {
		that2, ok := that.(CreateSpecType_ClusterScopedAccessDeny)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessDeny.Equal(that1.ClusterScopedAccessDeny) {
		return false
	}
	return true
}
func (this *CreateSpecType_ClusterScopedAccessPermit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ClusterScopedAccessPermit)
	if !ok {
		that2, ok := that.(CreateSpecType_ClusterScopedAccessPermit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessPermit.Equal(that1.ClusterScopedAccessPermit) {
		return false
	}
	return true
}
func (this *ReplaceSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType)
	if !ok {
		that2, ok := that.(ReplaceSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	if that1.AppsChoice == nil {
		if this.AppsChoice != nil {
			return false
		}
	} else if this.AppsChoice == nil {
		return false
	} else if !this.AppsChoice.Equal(that1.AppsChoice) {
		return false
	}
	if that1.InsecureRegistriesChoice == nil {
		if this.InsecureRegistriesChoice != nil {
			return false
		}
	} else if this.InsecureRegistriesChoice == nil {
		return false
	} else if !this.InsecureRegistriesChoice.Equal(that1.InsecureRegistriesChoice) {
		return false
	}
	if that1.ClusterScopedResourceAccessChoice == nil {
		if this.ClusterScopedResourceAccessChoice != nil {
			return false
		}
	} else if this.ClusterScopedResourceAccessChoice == nil {
		return false
	} else if !this.ClusterScopedResourceAccessChoice.Equal(that1.ClusterScopedResourceAccessChoice) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(ReplaceSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(ReplaceSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NoClusterWideApps) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NoClusterWideApps)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NoClusterWideApps)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoClusterWideApps.Equal(that1.NoClusterWideApps) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ClusterWideAppList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ClusterWideAppList)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ClusterWideAppList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterWideAppList.Equal(that1.ClusterWideAppList) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NoInsecureRegistries) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NoInsecureRegistries)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NoInsecureRegistries)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoInsecureRegistries.Equal(that1.NoInsecureRegistries) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_InsecureRegistryList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_InsecureRegistryList)
	if !ok {
		that2, ok := that.(ReplaceSpecType_InsecureRegistryList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.InsecureRegistryList.Equal(that1.InsecureRegistryList) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ClusterScopedAccessDeny) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ClusterScopedAccessDeny)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ClusterScopedAccessDeny)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessDeny.Equal(that1.ClusterScopedAccessDeny) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ClusterScopedAccessPermit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ClusterScopedAccessPermit)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ClusterScopedAccessPermit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessPermit.Equal(that1.ClusterScopedAccessPermit) {
		return false
	}
	return true
}
func (this *GetSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType)
	if !ok {
		that2, ok := that.(GetSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	if that1.AppsChoice == nil {
		if this.AppsChoice != nil {
			return false
		}
	} else if this.AppsChoice == nil {
		return false
	} else if !this.AppsChoice.Equal(that1.AppsChoice) {
		return false
	}
	if that1.InsecureRegistriesChoice == nil {
		if this.InsecureRegistriesChoice != nil {
			return false
		}
	} else if this.InsecureRegistriesChoice == nil {
		return false
	} else if !this.InsecureRegistriesChoice.Equal(that1.InsecureRegistriesChoice) {
		return false
	}
	if that1.ClusterScopedResourceAccessChoice == nil {
		if this.ClusterScopedResourceAccessChoice != nil {
			return false
		}
	} else if this.ClusterScopedResourceAccessChoice == nil {
		return false
	} else if !this.ClusterScopedResourceAccessChoice.Equal(that1.ClusterScopedResourceAccessChoice) {
		return false
	}
	return true
}
func (this *GetSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(GetSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *GetSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(GetSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *GetSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(GetSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *GetSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(GetSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *GetSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(GetSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *GetSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(GetSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *GetSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(GetSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *GetSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(GetSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *GetSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(GetSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GetSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(GetSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GetSpecType_NoClusterWideApps) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NoClusterWideApps)
	if !ok {
		that2, ok := that.(GetSpecType_NoClusterWideApps)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoClusterWideApps.Equal(that1.NoClusterWideApps) {
		return false
	}
	return true
}
func (this *GetSpecType_ClusterWideAppList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ClusterWideAppList)
	if !ok {
		that2, ok := that.(GetSpecType_ClusterWideAppList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterWideAppList.Equal(that1.ClusterWideAppList) {
		return false
	}
	return true
}
func (this *GetSpecType_NoInsecureRegistries) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NoInsecureRegistries)
	if !ok {
		that2, ok := that.(GetSpecType_NoInsecureRegistries)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoInsecureRegistries.Equal(that1.NoInsecureRegistries) {
		return false
	}
	return true
}
func (this *GetSpecType_InsecureRegistryList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_InsecureRegistryList)
	if !ok {
		that2, ok := that.(GetSpecType_InsecureRegistryList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.InsecureRegistryList.Equal(that1.InsecureRegistryList) {
		return false
	}
	return true
}
func (this *GetSpecType_ClusterScopedAccessDeny) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ClusterScopedAccessDeny)
	if !ok {
		that2, ok := that.(GetSpecType_ClusterScopedAccessDeny)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessDeny.Equal(that1.ClusterScopedAccessDeny) {
		return false
	}
	return true
}
func (this *GetSpecType_ClusterScopedAccessPermit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ClusterScopedAccessPermit)
	if !ok {
		that2, ok := that.(GetSpecType_ClusterScopedAccessPermit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterScopedAccessPermit.Equal(that1.ClusterScopedAccessPermit) {
		return false
	}
	return true
}
func (this *ApplicationArgoCDType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&k8s_cluster.ApplicationArgoCDType{")
	s = append(s, "GeneratedYaml: "+fmt.Sprintf("%#v", this.GeneratedYaml)+",\n")
	if this.LocalDomain != nil {
		s = append(s, "LocalDomain: "+fmt.Sprintf("%#v", this.LocalDomain)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ApplicationDashboardType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ApplicationDashboardType{")
	s = append(s, "GeneratedYaml: "+fmt.Sprintf("%#v", this.GeneratedYaml)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ApplicationMetricsServerType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ApplicationMetricsServerType{")
	s = append(s, "GeneratedYaml: "+fmt.Sprintf("%#v", this.GeneratedYaml)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ApplicationPrometheusType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ApplicationPrometheusType{")
	s = append(s, "GeneratedYaml: "+fmt.Sprintf("%#v", this.GeneratedYaml)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterWideAppType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&k8s_cluster.ClusterWideAppType{")
	if this.AppChoice != nil {
		s = append(s, "AppChoice: "+fmt.Sprintf("%#v", this.AppChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterWideAppType_ArgoCd) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ClusterWideAppType_ArgoCd{` +
		`ArgoCd:` + fmt.Sprintf("%#v", this.ArgoCd) + `}`}, ", ")
	return s
}
func (this *ClusterWideAppType_Dashboard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ClusterWideAppType_Dashboard{` +
		`Dashboard:` + fmt.Sprintf("%#v", this.Dashboard) + `}`}, ", ")
	return s
}
func (this *ClusterWideAppType_MetricsServer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ClusterWideAppType_MetricsServer{` +
		`MetricsServer:` + fmt.Sprintf("%#v", this.MetricsServer) + `}`}, ", ")
	return s
}
func (this *ClusterWideAppType_Prometheus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ClusterWideAppType_Prometheus{` +
		`Prometheus:` + fmt.Sprintf("%#v", this.Prometheus) + `}`}, ", ")
	return s
}
func (this *ClusterWideAppListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ClusterWideAppListType{")
	if this.ClusterWideApps != nil {
		s = append(s, "ClusterWideApps: "+fmt.Sprintf("%#v", this.ClusterWideApps)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LocalAccessConfigType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&k8s_cluster.LocalAccessConfigType{")
	s = append(s, "LocalDomain: "+fmt.Sprintf("%#v", this.LocalDomain)+",\n")
	if this.PortChoice != nil {
		s = append(s, "PortChoice: "+fmt.Sprintf("%#v", this.PortChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LocalAccessConfigType_DefaultPort) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.LocalAccessConfigType_DefaultPort{` +
		`DefaultPort:` + fmt.Sprintf("%#v", this.DefaultPort) + `}`}, ", ")
	return s
}
func (this *LocalAccessConfigType_Port) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.LocalAccessConfigType_Port{` +
		`Port:` + fmt.Sprintf("%#v", this.Port) + `}`}, ", ")
	return s
}
func (this *LocalAccessArgoCDType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&k8s_cluster.LocalAccessArgoCDType{")
	s = append(s, "LocalDomain: "+fmt.Sprintf("%#v", this.LocalDomain)+",\n")
	if this.PortChoice != nil {
		s = append(s, "PortChoice: "+fmt.Sprintf("%#v", this.PortChoice)+",\n")
	}
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LocalAccessArgoCDType_DefaultPort) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.LocalAccessArgoCDType_DefaultPort{` +
		`DefaultPort:` + fmt.Sprintf("%#v", this.DefaultPort) + `}`}, ", ")
	return s
}
func (this *LocalAccessArgoCDType_Port) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.LocalAccessArgoCDType_Port{` +
		`Port:` + fmt.Sprintf("%#v", this.Port) + `}`}, ", ")
	return s
}
func (this *PodSecurityPolicyListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.PodSecurityPolicyListType{")
	if this.PodSecurityPolicies != nil {
		s = append(s, "PodSecurityPolicies: "+fmt.Sprintf("%#v", this.PodSecurityPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterRoleListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ClusterRoleListType{")
	if this.ClusterRoles != nil {
		s = append(s, "ClusterRoles: "+fmt.Sprintf("%#v", this.ClusterRoles)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterRoleBindingListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ClusterRoleBindingListType{")
	if this.ClusterRoleBindings != nil {
		s = append(s, "ClusterRoleBindings: "+fmt.Sprintf("%#v", this.ClusterRoleBindings)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *InsecureRegistryListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.InsecureRegistryListType{")
	s = append(s, "InsecureRegistries: "+fmt.Sprintf("%#v", this.InsecureRegistries)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 26)
	s = append(s, "&k8s_cluster.GlobalSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	if this.AppsChoice != nil {
		s = append(s, "AppsChoice: "+fmt.Sprintf("%#v", this.AppsChoice)+",\n")
	}
	if this.InsecureRegistriesChoice != nil {
		s = append(s, "InsecureRegistriesChoice: "+fmt.Sprintf("%#v", this.InsecureRegistriesChoice)+",\n")
	}
	if this.ClusterScopedResourceAccessChoice != nil {
		s = append(s, "ClusterScopedResourceAccessChoice: "+fmt.Sprintf("%#v", this.ClusterScopedResourceAccessChoice)+",\n")
	}
	if this.Vk8SNamespaceAccessChoice != nil {
		s = append(s, "Vk8SNamespaceAccessChoice: "+fmt.Sprintf("%#v", this.Vk8SNamespaceAccessChoice)+",\n")
	}
	if this.ViewInternal != nil {
		s = append(s, "ViewInternal: "+fmt.Sprintf("%#v", this.ViewInternal)+",\n")
	}
	if this.FinalClusterRoleBindings != nil {
		s = append(s, "FinalClusterRoleBindings: "+fmt.Sprintf("%#v", this.FinalClusterRoleBindings)+",\n")
	}
	if this.FinalClusterRoles != nil {
		s = append(s, "FinalClusterRoles: "+fmt.Sprintf("%#v", this.FinalClusterRoles)+",\n")
	}
	if this.FinalPodSecurityPolicies != nil {
		s = append(s, "FinalPodSecurityPolicies: "+fmt.Sprintf("%#v", this.FinalPodSecurityPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_NoClusterWideApps) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_NoClusterWideApps{` +
		`NoClusterWideApps:` + fmt.Sprintf("%#v", this.NoClusterWideApps) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ClusterWideAppList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_ClusterWideAppList{` +
		`ClusterWideAppList:` + fmt.Sprintf("%#v", this.ClusterWideAppList) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_NoInsecureRegistries) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_NoInsecureRegistries{` +
		`NoInsecureRegistries:` + fmt.Sprintf("%#v", this.NoInsecureRegistries) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_InsecureRegistryList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_InsecureRegistryList{` +
		`InsecureRegistryList:` + fmt.Sprintf("%#v", this.InsecureRegistryList) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ClusterScopedAccessDeny) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_ClusterScopedAccessDeny{` +
		`ClusterScopedAccessDeny:` + fmt.Sprintf("%#v", this.ClusterScopedAccessDeny) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ClusterScopedAccessPermit) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_ClusterScopedAccessPermit{` +
		`ClusterScopedAccessPermit:` + fmt.Sprintf("%#v", this.ClusterScopedAccessPermit) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_Vk8SNamespaceAccessDeny) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_Vk8SNamespaceAccessDeny{` +
		`Vk8SNamespaceAccessDeny:` + fmt.Sprintf("%#v", this.Vk8SNamespaceAccessDeny) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_Vk8SNamespaceAccessPermit) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_Vk8SNamespaceAccessPermit{` +
		`Vk8SNamespaceAccessPermit:` + fmt.Sprintf("%#v", this.Vk8SNamespaceAccessPermit) + `}`}, ", ")
	return s
}
func (this *CreateSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 20)
	s = append(s, "&k8s_cluster.CreateSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	if this.AppsChoice != nil {
		s = append(s, "AppsChoice: "+fmt.Sprintf("%#v", this.AppsChoice)+",\n")
	}
	if this.InsecureRegistriesChoice != nil {
		s = append(s, "InsecureRegistriesChoice: "+fmt.Sprintf("%#v", this.InsecureRegistriesChoice)+",\n")
	}
	if this.ClusterScopedResourceAccessChoice != nil {
		s = append(s, "ClusterScopedResourceAccessChoice: "+fmt.Sprintf("%#v", this.ClusterScopedResourceAccessChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_NoClusterWideApps) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_NoClusterWideApps{` +
		`NoClusterWideApps:` + fmt.Sprintf("%#v", this.NoClusterWideApps) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ClusterWideAppList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_ClusterWideAppList{` +
		`ClusterWideAppList:` + fmt.Sprintf("%#v", this.ClusterWideAppList) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_NoInsecureRegistries) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_NoInsecureRegistries{` +
		`NoInsecureRegistries:` + fmt.Sprintf("%#v", this.NoInsecureRegistries) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_InsecureRegistryList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_InsecureRegistryList{` +
		`InsecureRegistryList:` + fmt.Sprintf("%#v", this.InsecureRegistryList) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ClusterScopedAccessDeny) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_ClusterScopedAccessDeny{` +
		`ClusterScopedAccessDeny:` + fmt.Sprintf("%#v", this.ClusterScopedAccessDeny) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ClusterScopedAccessPermit) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_ClusterScopedAccessPermit{` +
		`ClusterScopedAccessPermit:` + fmt.Sprintf("%#v", this.ClusterScopedAccessPermit) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 20)
	s = append(s, "&k8s_cluster.ReplaceSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	if this.AppsChoice != nil {
		s = append(s, "AppsChoice: "+fmt.Sprintf("%#v", this.AppsChoice)+",\n")
	}
	if this.InsecureRegistriesChoice != nil {
		s = append(s, "InsecureRegistriesChoice: "+fmt.Sprintf("%#v", this.InsecureRegistriesChoice)+",\n")
	}
	if this.ClusterScopedResourceAccessChoice != nil {
		s = append(s, "ClusterScopedResourceAccessChoice: "+fmt.Sprintf("%#v", this.ClusterScopedResourceAccessChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ReplaceSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_NoClusterWideApps) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_NoClusterWideApps{` +
		`NoClusterWideApps:` + fmt.Sprintf("%#v", this.NoClusterWideApps) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ClusterWideAppList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_ClusterWideAppList{` +
		`ClusterWideAppList:` + fmt.Sprintf("%#v", this.ClusterWideAppList) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_NoInsecureRegistries) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_NoInsecureRegistries{` +
		`NoInsecureRegistries:` + fmt.Sprintf("%#v", this.NoInsecureRegistries) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_InsecureRegistryList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_InsecureRegistryList{` +
		`InsecureRegistryList:` + fmt.Sprintf("%#v", this.InsecureRegistryList) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ClusterScopedAccessDeny) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_ClusterScopedAccessDeny{` +
		`ClusterScopedAccessDeny:` + fmt.Sprintf("%#v", this.ClusterScopedAccessDeny) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ClusterScopedAccessPermit) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_ClusterScopedAccessPermit{` +
		`ClusterScopedAccessPermit:` + fmt.Sprintf("%#v", this.ClusterScopedAccessPermit) + `}`}, ", ")
	return s
}
func (this *GetSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 20)
	s = append(s, "&k8s_cluster.GetSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	if this.AppsChoice != nil {
		s = append(s, "AppsChoice: "+fmt.Sprintf("%#v", this.AppsChoice)+",\n")
	}
	if this.InsecureRegistriesChoice != nil {
		s = append(s, "InsecureRegistriesChoice: "+fmt.Sprintf("%#v", this.InsecureRegistriesChoice)+",\n")
	}
	if this.ClusterScopedResourceAccessChoice != nil {
		s = append(s, "ClusterScopedResourceAccessChoice: "+fmt.Sprintf("%#v", this.ClusterScopedResourceAccessChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *GetSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *GetSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *GetSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GetSpecType_NoClusterWideApps) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_NoClusterWideApps{` +
		`NoClusterWideApps:` + fmt.Sprintf("%#v", this.NoClusterWideApps) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ClusterWideAppList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_ClusterWideAppList{` +
		`ClusterWideAppList:` + fmt.Sprintf("%#v", this.ClusterWideAppList) + `}`}, ", ")
	return s
}
func (this *GetSpecType_NoInsecureRegistries) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_NoInsecureRegistries{` +
		`NoInsecureRegistries:` + fmt.Sprintf("%#v", this.NoInsecureRegistries) + `}`}, ", ")
	return s
}
func (this *GetSpecType_InsecureRegistryList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_InsecureRegistryList{` +
		`InsecureRegistryList:` + fmt.Sprintf("%#v", this.InsecureRegistryList) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ClusterScopedAccessDeny) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_ClusterScopedAccessDeny{` +
		`ClusterScopedAccessDeny:` + fmt.Sprintf("%#v", this.ClusterScopedAccessDeny) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ClusterScopedAccessPermit) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_ClusterScopedAccessPermit{` +
		`ClusterScopedAccessPermit:` + fmt.Sprintf("%#v", this.ClusterScopedAccessPermit) + `}`}, ", ")
	return s
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ApplicationArgoCDType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationArgoCDType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplicationArgoCDType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GeneratedYaml) > 0 {
		i -= len(m.GeneratedYaml)
		copy(dAtA[i:], m.GeneratedYaml)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.GeneratedYaml)))
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xca
	}
	if m.LocalDomain != nil {
		{
			size, err := m.LocalDomain.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ApplicationDashboardType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationDashboardType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplicationDashboardType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GeneratedYaml) > 0 {
		i -= len(m.GeneratedYaml)
		copy(dAtA[i:], m.GeneratedYaml)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.GeneratedYaml)))
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}

func (m *ApplicationMetricsServerType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationMetricsServerType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplicationMetricsServerType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GeneratedYaml) > 0 {
		i -= len(m.GeneratedYaml)
		copy(dAtA[i:], m.GeneratedYaml)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.GeneratedYaml)))
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}

func (m *ApplicationPrometheusType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationPrometheusType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplicationPrometheusType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GeneratedYaml) > 0 {
		i -= len(m.GeneratedYaml)
		copy(dAtA[i:], m.GeneratedYaml)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.GeneratedYaml)))
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWideAppType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWideAppType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWideAppType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AppChoice != nil {
		{
			size := m.AppChoice.Size()
			i -= size
			if _, err := m.AppChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWideAppType_ArgoCd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWideAppType_ArgoCd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ArgoCd != nil {
		{
			size, err := m.ArgoCd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ClusterWideAppType_Dashboard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWideAppType_Dashboard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Dashboard != nil {
		{
			size, err := m.Dashboard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ClusterWideAppType_MetricsServer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWideAppType_MetricsServer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.MetricsServer != nil {
		{
			size, err := m.MetricsServer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ClusterWideAppType_Prometheus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWideAppType_Prometheus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Prometheus != nil {
		{
			size, err := m.Prometheus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ClusterWideAppListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWideAppListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWideAppListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ClusterWideApps) > 0 {
		for iNdEx := len(m.ClusterWideApps) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ClusterWideApps[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *LocalAccessConfigType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocalAccessConfigType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocalAccessConfigType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PortChoice != nil {
		{
			size := m.PortChoice.Size()
			i -= size
			if _, err := m.PortChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.LocalDomain) > 0 {
		i -= len(m.LocalDomain)
		copy(dAtA[i:], m.LocalDomain)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.LocalDomain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LocalAccessConfigType_DefaultPort) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocalAccessConfigType_DefaultPort) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DefaultPort != nil {
		{
			size, err := m.DefaultPort.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *LocalAccessConfigType_Port) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocalAccessConfigType_Port) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintTypes(dAtA, i, uint64(m.Port))
	i--
	dAtA[i] = 0x20
	return len(dAtA) - i, nil
}
func (m *LocalAccessArgoCDType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocalAccessArgoCDType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocalAccessArgoCDType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.PortChoice != nil {
		{
			size := m.PortChoice.Size()
			i -= size
			if _, err := m.PortChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.LocalDomain) > 0 {
		i -= len(m.LocalDomain)
		copy(dAtA[i:], m.LocalDomain)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.LocalDomain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LocalAccessArgoCDType_DefaultPort) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocalAccessArgoCDType_DefaultPort) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DefaultPort != nil {
		{
			size, err := m.DefaultPort.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *LocalAccessArgoCDType_Port) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocalAccessArgoCDType_Port) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintTypes(dAtA, i, uint64(m.Port))
	i--
	dAtA[i] = 0x20
	return len(dAtA) - i, nil
}
func (m *PodSecurityPolicyListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PodSecurityPolicyListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PodSecurityPolicyListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PodSecurityPolicies) > 0 {
		for iNdEx := len(m.PodSecurityPolicies) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PodSecurityPolicies[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ClusterRoleListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterRoleListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterRoleListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ClusterRoles) > 0 {
		for iNdEx := len(m.ClusterRoles) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ClusterRoles[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ClusterRoleBindingListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterRoleBindingListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterRoleBindingListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ClusterRoleBindings) > 0 {
		for iNdEx := len(m.ClusterRoleBindings) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ClusterRoleBindings[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *InsecureRegistryListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InsecureRegistryListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InsecureRegistryListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InsecureRegistries) > 0 {
		for iNdEx := len(m.InsecureRegistries) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InsecureRegistries[iNdEx])
			copy(dAtA[i:], m.InsecureRegistries[iNdEx])
			i = encodeVarintTypes(dAtA, i, uint64(len(m.InsecureRegistries[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FinalPodSecurityPolicies) > 0 {
		for iNdEx := len(m.FinalPodSecurityPolicies) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FinalPodSecurityPolicies[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3e
			i--
			dAtA[i] = 0xda
		}
	}
	if len(m.FinalClusterRoles) > 0 {
		for iNdEx := len(m.FinalClusterRoles) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FinalClusterRoles[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3e
			i--
			dAtA[i] = 0xd2
		}
	}
	if len(m.FinalClusterRoleBindings) > 0 {
		for iNdEx := len(m.FinalClusterRoleBindings) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FinalClusterRoleBindings[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3e
			i--
			dAtA[i] = 0xca
		}
	}
	if m.ViewInternal != nil {
		{
			size, err := m.ViewInternal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xc2
	}
	if m.Vk8SNamespaceAccessChoice != nil {
		{
			size := m.Vk8SNamespaceAccessChoice.Size()
			i -= size
			if _, err := m.Vk8SNamespaceAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterScopedResourceAccessChoice != nil {
		{
			size := m.ClusterScopedResourceAccessChoice.Size()
			i -= size
			if _, err := m.ClusterScopedResourceAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.InsecureRegistriesChoice != nil {
		{
			size := m.InsecureRegistriesChoice.Size()
			i -= size
			if _, err := m.InsecureRegistriesChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.AppsChoice != nil {
		{
			size := m.AppsChoice.Size()
			i -= size
			if _, err := m.AppsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleBindingsChoice != nil {
		{
			size := m.ClusterRoleBindingsChoice.Size()
			i -= size
			if _, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleChoice != nil {
		{
			size := m.ClusterRoleChoice.Size()
			i -= size
			if _, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.PodSecurityPolicyChoice != nil {
		{
			size := m.PodSecurityPolicyChoice.Size()
			i -= size
			if _, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.GlobalAccessChoice != nil {
		{
			size := m.GlobalAccessChoice.Size()
			i -= size
			if _, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.LocalAccessChoice != nil {
		{
			size := m.LocalAccessChoice.Size()
			i -= size
			if _, err := m.LocalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *GlobalSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_NoLocalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoLocalAccess != nil {
		{
			size, err := m.NoLocalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_LocalAccessConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LocalAccessConfig != nil {
		{
			size, err := m.LocalAccessConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_NoGlobalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoGlobalAccess != nil {
		{
			size, err := m.NoGlobalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_GlobalAccessEnable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GlobalAccessEnable != nil {
		{
			size, err := m.GlobalAccessEnable.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_UseDefaultPsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultPsp != nil {
		{
			size, err := m.UseDefaultPsp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_UseCustomPspList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomPspList != nil {
		{
			size, err := m.UseCustomPspList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_UseDefaultClusterRoles) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoles != nil {
		{
			size, err := m.UseDefaultClusterRoles.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_UseCustomClusterRoleList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleList != nil {
		{
			size, err := m.UseCustomClusterRoleList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_UseDefaultClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoleBindings != nil {
		{
			size, err := m.UseDefaultClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_UseCustomClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleBindings != nil {
		{
			size, err := m.UseCustomClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_NoClusterWideApps) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_NoClusterWideApps) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoClusterWideApps != nil {
		{
			size, err := m.NoClusterWideApps.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ClusterWideAppList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ClusterWideAppList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterWideAppList != nil {
		{
			size, err := m.ClusterWideAppList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_NoInsecureRegistries) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_NoInsecureRegistries) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoInsecureRegistries != nil {
		{
			size, err := m.NoInsecureRegistries.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_InsecureRegistryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_InsecureRegistryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.InsecureRegistryList != nil {
		{
			size, err := m.InsecureRegistryList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ClusterScopedAccessDeny) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ClusterScopedAccessDeny) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessDeny != nil {
		{
			size, err := m.ClusterScopedAccessDeny.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ClusterScopedAccessPermit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ClusterScopedAccessPermit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessPermit != nil {
		{
			size, err := m.ClusterScopedAccessPermit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_Vk8SNamespaceAccessDeny) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_Vk8SNamespaceAccessDeny) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Vk8SNamespaceAccessDeny != nil {
		{
			size, err := m.Vk8SNamespaceAccessDeny.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_Vk8SNamespaceAccessPermit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_Vk8SNamespaceAccessPermit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Vk8SNamespaceAccessPermit != nil {
		{
			size, err := m.Vk8SNamespaceAccessPermit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ClusterScopedResourceAccessChoice != nil {
		{
			size := m.ClusterScopedResourceAccessChoice.Size()
			i -= size
			if _, err := m.ClusterScopedResourceAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.InsecureRegistriesChoice != nil {
		{
			size := m.InsecureRegistriesChoice.Size()
			i -= size
			if _, err := m.InsecureRegistriesChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.AppsChoice != nil {
		{
			size := m.AppsChoice.Size()
			i -= size
			if _, err := m.AppsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleBindingsChoice != nil {
		{
			size := m.ClusterRoleBindingsChoice.Size()
			i -= size
			if _, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleChoice != nil {
		{
			size := m.ClusterRoleChoice.Size()
			i -= size
			if _, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.PodSecurityPolicyChoice != nil {
		{
			size := m.PodSecurityPolicyChoice.Size()
			i -= size
			if _, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.GlobalAccessChoice != nil {
		{
			size := m.GlobalAccessChoice.Size()
			i -= size
			if _, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.LocalAccessChoice != nil {
		{
			size := m.LocalAccessChoice.Size()
			i -= size
			if _, err := m.LocalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *CreateSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_NoLocalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoLocalAccess != nil {
		{
			size, err := m.NoLocalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_LocalAccessConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LocalAccessConfig != nil {
		{
			size, err := m.LocalAccessConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_NoGlobalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoGlobalAccess != nil {
		{
			size, err := m.NoGlobalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_GlobalAccessEnable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GlobalAccessEnable != nil {
		{
			size, err := m.GlobalAccessEnable.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_UseDefaultPsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultPsp != nil {
		{
			size, err := m.UseDefaultPsp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_UseCustomPspList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomPspList != nil {
		{
			size, err := m.UseCustomPspList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_UseDefaultClusterRoles) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoles != nil {
		{
			size, err := m.UseDefaultClusterRoles.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_UseCustomClusterRoleList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleList != nil {
		{
			size, err := m.UseCustomClusterRoleList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_UseDefaultClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoleBindings != nil {
		{
			size, err := m.UseDefaultClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_UseCustomClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleBindings != nil {
		{
			size, err := m.UseCustomClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_NoClusterWideApps) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_NoClusterWideApps) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoClusterWideApps != nil {
		{
			size, err := m.NoClusterWideApps.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ClusterWideAppList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ClusterWideAppList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterWideAppList != nil {
		{
			size, err := m.ClusterWideAppList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_NoInsecureRegistries) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_NoInsecureRegistries) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoInsecureRegistries != nil {
		{
			size, err := m.NoInsecureRegistries.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_InsecureRegistryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_InsecureRegistryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.InsecureRegistryList != nil {
		{
			size, err := m.InsecureRegistryList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ClusterScopedAccessDeny) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ClusterScopedAccessDeny) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessDeny != nil {
		{
			size, err := m.ClusterScopedAccessDeny.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ClusterScopedAccessPermit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ClusterScopedAccessPermit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessPermit != nil {
		{
			size, err := m.ClusterScopedAccessPermit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplaceSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ClusterScopedResourceAccessChoice != nil {
		{
			size := m.ClusterScopedResourceAccessChoice.Size()
			i -= size
			if _, err := m.ClusterScopedResourceAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.InsecureRegistriesChoice != nil {
		{
			size := m.InsecureRegistriesChoice.Size()
			i -= size
			if _, err := m.InsecureRegistriesChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.AppsChoice != nil {
		{
			size := m.AppsChoice.Size()
			i -= size
			if _, err := m.AppsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleBindingsChoice != nil {
		{
			size := m.ClusterRoleBindingsChoice.Size()
			i -= size
			if _, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleChoice != nil {
		{
			size := m.ClusterRoleChoice.Size()
			i -= size
			if _, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.PodSecurityPolicyChoice != nil {
		{
			size := m.PodSecurityPolicyChoice.Size()
			i -= size
			if _, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.GlobalAccessChoice != nil {
		{
			size := m.GlobalAccessChoice.Size()
			i -= size
			if _, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.LocalAccessChoice != nil {
		{
			size := m.LocalAccessChoice.Size()
			i -= size
			if _, err := m.LocalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ReplaceSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_NoLocalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoLocalAccess != nil {
		{
			size, err := m.NoLocalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_LocalAccessConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LocalAccessConfig != nil {
		{
			size, err := m.LocalAccessConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_NoGlobalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoGlobalAccess != nil {
		{
			size, err := m.NoGlobalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_GlobalAccessEnable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GlobalAccessEnable != nil {
		{
			size, err := m.GlobalAccessEnable.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_UseDefaultPsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultPsp != nil {
		{
			size, err := m.UseDefaultPsp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_UseCustomPspList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomPspList != nil {
		{
			size, err := m.UseCustomPspList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_UseDefaultClusterRoles) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoles != nil {
		{
			size, err := m.UseDefaultClusterRoles.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_UseCustomClusterRoleList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleList != nil {
		{
			size, err := m.UseCustomClusterRoleList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_UseDefaultClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoleBindings != nil {
		{
			size, err := m.UseDefaultClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_UseCustomClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleBindings != nil {
		{
			size, err := m.UseCustomClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_NoClusterWideApps) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_NoClusterWideApps) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoClusterWideApps != nil {
		{
			size, err := m.NoClusterWideApps.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ClusterWideAppList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ClusterWideAppList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterWideAppList != nil {
		{
			size, err := m.ClusterWideAppList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_NoInsecureRegistries) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_NoInsecureRegistries) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoInsecureRegistries != nil {
		{
			size, err := m.NoInsecureRegistries.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_InsecureRegistryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_InsecureRegistryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.InsecureRegistryList != nil {
		{
			size, err := m.InsecureRegistryList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ClusterScopedAccessDeny) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ClusterScopedAccessDeny) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessDeny != nil {
		{
			size, err := m.ClusterScopedAccessDeny.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ClusterScopedAccessPermit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ClusterScopedAccessPermit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessPermit != nil {
		{
			size, err := m.ClusterScopedAccessPermit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ClusterScopedResourceAccessChoice != nil {
		{
			size := m.ClusterScopedResourceAccessChoice.Size()
			i -= size
			if _, err := m.ClusterScopedResourceAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.InsecureRegistriesChoice != nil {
		{
			size := m.InsecureRegistriesChoice.Size()
			i -= size
			if _, err := m.InsecureRegistriesChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.AppsChoice != nil {
		{
			size := m.AppsChoice.Size()
			i -= size
			if _, err := m.AppsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleBindingsChoice != nil {
		{
			size := m.ClusterRoleBindingsChoice.Size()
			i -= size
			if _, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ClusterRoleChoice != nil {
		{
			size := m.ClusterRoleChoice.Size()
			i -= size
			if _, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.PodSecurityPolicyChoice != nil {
		{
			size := m.PodSecurityPolicyChoice.Size()
			i -= size
			if _, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.GlobalAccessChoice != nil {
		{
			size := m.GlobalAccessChoice.Size()
			i -= size
			if _, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.LocalAccessChoice != nil {
		{
			size := m.LocalAccessChoice.Size()
			i -= size
			if _, err := m.LocalAccessChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_NoLocalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoLocalAccess != nil {
		{
			size, err := m.NoLocalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_LocalAccessConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LocalAccessConfig != nil {
		{
			size, err := m.LocalAccessConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_NoGlobalAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoGlobalAccess != nil {
		{
			size, err := m.NoGlobalAccess.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_GlobalAccessEnable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GlobalAccessEnable != nil {
		{
			size, err := m.GlobalAccessEnable.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_UseDefaultPsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultPsp != nil {
		{
			size, err := m.UseDefaultPsp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_UseCustomPspList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomPspList != nil {
		{
			size, err := m.UseCustomPspList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_UseDefaultClusterRoles) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoles != nil {
		{
			size, err := m.UseDefaultClusterRoles.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_UseCustomClusterRoleList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleList != nil {
		{
			size, err := m.UseCustomClusterRoleList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_UseDefaultClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseDefaultClusterRoleBindings != nil {
		{
			size, err := m.UseDefaultClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_UseCustomClusterRoleBindings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UseCustomClusterRoleBindings != nil {
		{
			size, err := m.UseCustomClusterRoleBindings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_NoClusterWideApps) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_NoClusterWideApps) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoClusterWideApps != nil {
		{
			size, err := m.NoClusterWideApps.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ClusterWideAppList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ClusterWideAppList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterWideAppList != nil {
		{
			size, err := m.ClusterWideAppList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_NoInsecureRegistries) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_NoInsecureRegistries) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoInsecureRegistries != nil {
		{
			size, err := m.NoInsecureRegistries.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_InsecureRegistryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_InsecureRegistryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.InsecureRegistryList != nil {
		{
			size, err := m.InsecureRegistryList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ClusterScopedAccessDeny) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ClusterScopedAccessDeny) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessDeny != nil {
		{
			size, err := m.ClusterScopedAccessDeny.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ClusterScopedAccessPermit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ClusterScopedAccessPermit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClusterScopedAccessPermit != nil {
		{
			size, err := m.ClusterScopedAccessPermit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ApplicationArgoCDType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalDomain != nil {
		l = m.LocalDomain.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.GeneratedYaml)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *ApplicationDashboardType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GeneratedYaml)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *ApplicationMetricsServerType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GeneratedYaml)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *ApplicationPrometheusType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GeneratedYaml)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *ClusterWideAppType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppChoice != nil {
		n += m.AppChoice.Size()
	}
	return n
}

func (m *ClusterWideAppType_ArgoCd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ArgoCd != nil {
		l = m.ArgoCd.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ClusterWideAppType_Dashboard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Dashboard != nil {
		l = m.Dashboard.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ClusterWideAppType_MetricsServer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MetricsServer != nil {
		l = m.MetricsServer.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ClusterWideAppType_Prometheus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prometheus != nil {
		l = m.Prometheus.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ClusterWideAppListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ClusterWideApps) > 0 {
		for _, e := range m.ClusterWideApps {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *LocalAccessConfigType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LocalDomain)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.PortChoice != nil {
		n += m.PortChoice.Size()
	}
	return n
}

func (m *LocalAccessConfigType_DefaultPort) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DefaultPort != nil {
		l = m.DefaultPort.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *LocalAccessConfigType_Port) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovTypes(uint64(m.Port))
	return n
}
func (m *LocalAccessArgoCDType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LocalDomain)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.PortChoice != nil {
		n += m.PortChoice.Size()
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *LocalAccessArgoCDType_DefaultPort) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DefaultPort != nil {
		l = m.DefaultPort.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *LocalAccessArgoCDType_Port) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovTypes(uint64(m.Port))
	return n
}
func (m *PodSecurityPolicyListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PodSecurityPolicies) > 0 {
		for _, e := range m.PodSecurityPolicies {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ClusterRoleListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ClusterRoles) > 0 {
		for _, e := range m.ClusterRoles {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ClusterRoleBindingListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ClusterRoleBindings) > 0 {
		for _, e := range m.ClusterRoleBindings {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *InsecureRegistryListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InsecureRegistries) > 0 {
		for _, s := range m.InsecureRegistries {
			l = len(s)
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *GlobalSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	if m.AppsChoice != nil {
		n += m.AppsChoice.Size()
	}
	if m.InsecureRegistriesChoice != nil {
		n += m.InsecureRegistriesChoice.Size()
	}
	if m.ClusterScopedResourceAccessChoice != nil {
		n += m.ClusterScopedResourceAccessChoice.Size()
	}
	if m.Vk8SNamespaceAccessChoice != nil {
		n += m.Vk8SNamespaceAccessChoice.Size()
	}
	if m.ViewInternal != nil {
		l = m.ViewInternal.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if len(m.FinalClusterRoleBindings) > 0 {
		for _, e := range m.FinalClusterRoleBindings {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	if len(m.FinalClusterRoles) > 0 {
		for _, e := range m.FinalClusterRoles {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	if len(m.FinalPodSecurityPolicies) > 0 {
		for _, e := range m.FinalPodSecurityPolicies {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *GlobalSpecType_NoLocalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_LocalAccessConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_NoGlobalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_GlobalAccessEnable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseDefaultPsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseCustomPspList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseDefaultClusterRoles) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseCustomClusterRoleList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_NoClusterWideApps) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoClusterWideApps != nil {
		l = m.NoClusterWideApps.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ClusterWideAppList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterWideAppList != nil {
		l = m.ClusterWideAppList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_NoInsecureRegistries) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoInsecureRegistries != nil {
		l = m.NoInsecureRegistries.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_InsecureRegistryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InsecureRegistryList != nil {
		l = m.InsecureRegistryList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ClusterScopedAccessDeny) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessDeny != nil {
		l = m.ClusterScopedAccessDeny.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ClusterScopedAccessPermit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessPermit != nil {
		l = m.ClusterScopedAccessPermit.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_Vk8SNamespaceAccessDeny) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vk8SNamespaceAccessDeny != nil {
		l = m.Vk8SNamespaceAccessDeny.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_Vk8SNamespaceAccessPermit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vk8SNamespaceAccessPermit != nil {
		l = m.Vk8SNamespaceAccessPermit.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	if m.AppsChoice != nil {
		n += m.AppsChoice.Size()
	}
	if m.InsecureRegistriesChoice != nil {
		n += m.InsecureRegistriesChoice.Size()
	}
	if m.ClusterScopedResourceAccessChoice != nil {
		n += m.ClusterScopedResourceAccessChoice.Size()
	}
	return n
}

func (m *CreateSpecType_NoLocalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_LocalAccessConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_NoGlobalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_GlobalAccessEnable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseDefaultPsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseCustomPspList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseDefaultClusterRoles) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseCustomClusterRoleList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_NoClusterWideApps) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoClusterWideApps != nil {
		l = m.NoClusterWideApps.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ClusterWideAppList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterWideAppList != nil {
		l = m.ClusterWideAppList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_NoInsecureRegistries) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoInsecureRegistries != nil {
		l = m.NoInsecureRegistries.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_InsecureRegistryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InsecureRegistryList != nil {
		l = m.InsecureRegistryList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ClusterScopedAccessDeny) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessDeny != nil {
		l = m.ClusterScopedAccessDeny.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ClusterScopedAccessPermit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessPermit != nil {
		l = m.ClusterScopedAccessPermit.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	if m.AppsChoice != nil {
		n += m.AppsChoice.Size()
	}
	if m.InsecureRegistriesChoice != nil {
		n += m.InsecureRegistriesChoice.Size()
	}
	if m.ClusterScopedResourceAccessChoice != nil {
		n += m.ClusterScopedResourceAccessChoice.Size()
	}
	return n
}

func (m *ReplaceSpecType_NoLocalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_LocalAccessConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_NoGlobalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_GlobalAccessEnable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseDefaultPsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseCustomPspList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseDefaultClusterRoles) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseCustomClusterRoleList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_NoClusterWideApps) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoClusterWideApps != nil {
		l = m.NoClusterWideApps.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ClusterWideAppList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterWideAppList != nil {
		l = m.ClusterWideAppList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_NoInsecureRegistries) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoInsecureRegistries != nil {
		l = m.NoInsecureRegistries.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_InsecureRegistryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InsecureRegistryList != nil {
		l = m.InsecureRegistryList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ClusterScopedAccessDeny) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessDeny != nil {
		l = m.ClusterScopedAccessDeny.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ClusterScopedAccessPermit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessPermit != nil {
		l = m.ClusterScopedAccessPermit.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	if m.AppsChoice != nil {
		n += m.AppsChoice.Size()
	}
	if m.InsecureRegistriesChoice != nil {
		n += m.InsecureRegistriesChoice.Size()
	}
	if m.ClusterScopedResourceAccessChoice != nil {
		n += m.ClusterScopedResourceAccessChoice.Size()
	}
	return n
}

func (m *GetSpecType_NoLocalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_LocalAccessConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_NoGlobalAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_GlobalAccessEnable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseDefaultPsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseCustomPspList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseDefaultClusterRoles) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseCustomClusterRoleList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_NoClusterWideApps) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoClusterWideApps != nil {
		l = m.NoClusterWideApps.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ClusterWideAppList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterWideAppList != nil {
		l = m.ClusterWideAppList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_NoInsecureRegistries) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoInsecureRegistries != nil {
		l = m.NoInsecureRegistries.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_InsecureRegistryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InsecureRegistryList != nil {
		l = m.InsecureRegistryList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ClusterScopedAccessDeny) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessDeny != nil {
		l = m.ClusterScopedAccessDeny.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ClusterScopedAccessPermit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClusterScopedAccessPermit != nil {
		l = m.ClusterScopedAccessPermit.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ApplicationArgoCDType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplicationArgoCDType{`,
		`LocalDomain:` + strings.Replace(this.LocalDomain.String(), "LocalAccessArgoCDType", "LocalAccessArgoCDType", 1) + `,`,
		`GeneratedYaml:` + fmt.Sprintf("%v", this.GeneratedYaml) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplicationDashboardType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplicationDashboardType{`,
		`GeneratedYaml:` + fmt.Sprintf("%v", this.GeneratedYaml) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplicationMetricsServerType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplicationMetricsServerType{`,
		`GeneratedYaml:` + fmt.Sprintf("%v", this.GeneratedYaml) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplicationPrometheusType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplicationPrometheusType{`,
		`GeneratedYaml:` + fmt.Sprintf("%v", this.GeneratedYaml) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType{`,
		`AppChoice:` + fmt.Sprintf("%v", this.AppChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType_ArgoCd) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType_ArgoCd{`,
		`ArgoCd:` + strings.Replace(fmt.Sprintf("%v", this.ArgoCd), "ApplicationArgoCDType", "ApplicationArgoCDType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType_Dashboard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType_Dashboard{`,
		`Dashboard:` + strings.Replace(fmt.Sprintf("%v", this.Dashboard), "ApplicationDashboardType", "ApplicationDashboardType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType_MetricsServer) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType_MetricsServer{`,
		`MetricsServer:` + strings.Replace(fmt.Sprintf("%v", this.MetricsServer), "ApplicationMetricsServerType", "ApplicationMetricsServerType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType_Prometheus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType_Prometheus{`,
		`Prometheus:` + strings.Replace(fmt.Sprintf("%v", this.Prometheus), "ApplicationPrometheusType", "ApplicationPrometheusType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppListType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForClusterWideApps := "[]*ClusterWideAppType{"
	for _, f := range this.ClusterWideApps {
		repeatedStringForClusterWideApps += strings.Replace(f.String(), "ClusterWideAppType", "ClusterWideAppType", 1) + ","
	}
	repeatedStringForClusterWideApps += "}"
	s := strings.Join([]string{`&ClusterWideAppListType{`,
		`ClusterWideApps:` + repeatedStringForClusterWideApps + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessConfigType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessConfigType{`,
		`LocalDomain:` + fmt.Sprintf("%v", this.LocalDomain) + `,`,
		`PortChoice:` + fmt.Sprintf("%v", this.PortChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessConfigType_DefaultPort) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessConfigType_DefaultPort{`,
		`DefaultPort:` + strings.Replace(fmt.Sprintf("%v", this.DefaultPort), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessConfigType_Port) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessConfigType_Port{`,
		`Port:` + fmt.Sprintf("%v", this.Port) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessArgoCDType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessArgoCDType{`,
		`LocalDomain:` + fmt.Sprintf("%v", this.LocalDomain) + `,`,
		`PortChoice:` + fmt.Sprintf("%v", this.PortChoice) + `,`,
		`Password:` + strings.Replace(fmt.Sprintf("%v", this.Password), "SecretType", "schema.SecretType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessArgoCDType_DefaultPort) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessArgoCDType_DefaultPort{`,
		`DefaultPort:` + strings.Replace(fmt.Sprintf("%v", this.DefaultPort), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessArgoCDType_Port) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessArgoCDType_Port{`,
		`Port:` + fmt.Sprintf("%v", this.Port) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PodSecurityPolicyListType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForPodSecurityPolicies := "[]*ObjectRefType{"
	for _, f := range this.PodSecurityPolicies {
		repeatedStringForPodSecurityPolicies += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForPodSecurityPolicies += "}"
	s := strings.Join([]string{`&PodSecurityPolicyListType{`,
		`PodSecurityPolicies:` + repeatedStringForPodSecurityPolicies + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterRoleListType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForClusterRoles := "[]*ObjectRefType{"
	for _, f := range this.ClusterRoles {
		repeatedStringForClusterRoles += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForClusterRoles += "}"
	s := strings.Join([]string{`&ClusterRoleListType{`,
		`ClusterRoles:` + repeatedStringForClusterRoles + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterRoleBindingListType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForClusterRoleBindings := "[]*ObjectRefType{"
	for _, f := range this.ClusterRoleBindings {
		repeatedStringForClusterRoleBindings += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForClusterRoleBindings += "}"
	s := strings.Join([]string{`&ClusterRoleBindingListType{`,
		`ClusterRoleBindings:` + repeatedStringForClusterRoleBindings + `,`,
		`}`,
	}, "")
	return s
}
func (this *InsecureRegistryListType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&InsecureRegistryListType{`,
		`InsecureRegistries:` + fmt.Sprintf("%v", this.InsecureRegistries) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForFinalClusterRoleBindings := "[]*ObjectRefType{"
	for _, f := range this.FinalClusterRoleBindings {
		repeatedStringForFinalClusterRoleBindings += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForFinalClusterRoleBindings += "}"
	repeatedStringForFinalClusterRoles := "[]*ObjectRefType{"
	for _, f := range this.FinalClusterRoles {
		repeatedStringForFinalClusterRoles += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForFinalClusterRoles += "}"
	repeatedStringForFinalPodSecurityPolicies := "[]*ObjectRefType{"
	for _, f := range this.FinalPodSecurityPolicies {
		repeatedStringForFinalPodSecurityPolicies += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForFinalPodSecurityPolicies += "}"
	s := strings.Join([]string{`&GlobalSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`AppsChoice:` + fmt.Sprintf("%v", this.AppsChoice) + `,`,
		`InsecureRegistriesChoice:` + fmt.Sprintf("%v", this.InsecureRegistriesChoice) + `,`,
		`ClusterScopedResourceAccessChoice:` + fmt.Sprintf("%v", this.ClusterScopedResourceAccessChoice) + `,`,
		`Vk8SNamespaceAccessChoice:` + fmt.Sprintf("%v", this.Vk8SNamespaceAccessChoice) + `,`,
		`ViewInternal:` + strings.Replace(fmt.Sprintf("%v", this.ViewInternal), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`FinalClusterRoleBindings:` + repeatedStringForFinalClusterRoleBindings + `,`,
		`FinalClusterRoles:` + repeatedStringForFinalClusterRoles + `,`,
		`FinalPodSecurityPolicies:` + repeatedStringForFinalPodSecurityPolicies + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NoClusterWideApps) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NoClusterWideApps{`,
		`NoClusterWideApps:` + strings.Replace(fmt.Sprintf("%v", this.NoClusterWideApps), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ClusterWideAppList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ClusterWideAppList{`,
		`ClusterWideAppList:` + strings.Replace(fmt.Sprintf("%v", this.ClusterWideAppList), "ClusterWideAppListType", "ClusterWideAppListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NoInsecureRegistries) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NoInsecureRegistries{`,
		`NoInsecureRegistries:` + strings.Replace(fmt.Sprintf("%v", this.NoInsecureRegistries), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_InsecureRegistryList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_InsecureRegistryList{`,
		`InsecureRegistryList:` + strings.Replace(fmt.Sprintf("%v", this.InsecureRegistryList), "InsecureRegistryListType", "InsecureRegistryListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ClusterScopedAccessDeny) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ClusterScopedAccessDeny{`,
		`ClusterScopedAccessDeny:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessDeny), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ClusterScopedAccessPermit) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ClusterScopedAccessPermit{`,
		`ClusterScopedAccessPermit:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessPermit), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Vk8SNamespaceAccessDeny) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Vk8SNamespaceAccessDeny{`,
		`Vk8SNamespaceAccessDeny:` + strings.Replace(fmt.Sprintf("%v", this.Vk8SNamespaceAccessDeny), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Vk8SNamespaceAccessPermit) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Vk8SNamespaceAccessPermit{`,
		`Vk8SNamespaceAccessPermit:` + strings.Replace(fmt.Sprintf("%v", this.Vk8SNamespaceAccessPermit), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`AppsChoice:` + fmt.Sprintf("%v", this.AppsChoice) + `,`,
		`InsecureRegistriesChoice:` + fmt.Sprintf("%v", this.InsecureRegistriesChoice) + `,`,
		`ClusterScopedResourceAccessChoice:` + fmt.Sprintf("%v", this.ClusterScopedResourceAccessChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NoClusterWideApps) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NoClusterWideApps{`,
		`NoClusterWideApps:` + strings.Replace(fmt.Sprintf("%v", this.NoClusterWideApps), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ClusterWideAppList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ClusterWideAppList{`,
		`ClusterWideAppList:` + strings.Replace(fmt.Sprintf("%v", this.ClusterWideAppList), "ClusterWideAppListType", "ClusterWideAppListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NoInsecureRegistries) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NoInsecureRegistries{`,
		`NoInsecureRegistries:` + strings.Replace(fmt.Sprintf("%v", this.NoInsecureRegistries), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_InsecureRegistryList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_InsecureRegistryList{`,
		`InsecureRegistryList:` + strings.Replace(fmt.Sprintf("%v", this.InsecureRegistryList), "InsecureRegistryListType", "InsecureRegistryListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ClusterScopedAccessDeny) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ClusterScopedAccessDeny{`,
		`ClusterScopedAccessDeny:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessDeny), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ClusterScopedAccessPermit) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ClusterScopedAccessPermit{`,
		`ClusterScopedAccessPermit:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessPermit), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`AppsChoice:` + fmt.Sprintf("%v", this.AppsChoice) + `,`,
		`InsecureRegistriesChoice:` + fmt.Sprintf("%v", this.InsecureRegistriesChoice) + `,`,
		`ClusterScopedResourceAccessChoice:` + fmt.Sprintf("%v", this.ClusterScopedResourceAccessChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NoClusterWideApps) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NoClusterWideApps{`,
		`NoClusterWideApps:` + strings.Replace(fmt.Sprintf("%v", this.NoClusterWideApps), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ClusterWideAppList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ClusterWideAppList{`,
		`ClusterWideAppList:` + strings.Replace(fmt.Sprintf("%v", this.ClusterWideAppList), "ClusterWideAppListType", "ClusterWideAppListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NoInsecureRegistries) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NoInsecureRegistries{`,
		`NoInsecureRegistries:` + strings.Replace(fmt.Sprintf("%v", this.NoInsecureRegistries), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_InsecureRegistryList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_InsecureRegistryList{`,
		`InsecureRegistryList:` + strings.Replace(fmt.Sprintf("%v", this.InsecureRegistryList), "InsecureRegistryListType", "InsecureRegistryListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ClusterScopedAccessDeny) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ClusterScopedAccessDeny{`,
		`ClusterScopedAccessDeny:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessDeny), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ClusterScopedAccessPermit) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ClusterScopedAccessPermit{`,
		`ClusterScopedAccessPermit:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessPermit), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`AppsChoice:` + fmt.Sprintf("%v", this.AppsChoice) + `,`,
		`InsecureRegistriesChoice:` + fmt.Sprintf("%v", this.InsecureRegistriesChoice) + `,`,
		`ClusterScopedResourceAccessChoice:` + fmt.Sprintf("%v", this.ClusterScopedResourceAccessChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NoClusterWideApps) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NoClusterWideApps{`,
		`NoClusterWideApps:` + strings.Replace(fmt.Sprintf("%v", this.NoClusterWideApps), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ClusterWideAppList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ClusterWideAppList{`,
		`ClusterWideAppList:` + strings.Replace(fmt.Sprintf("%v", this.ClusterWideAppList), "ClusterWideAppListType", "ClusterWideAppListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NoInsecureRegistries) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NoInsecureRegistries{`,
		`NoInsecureRegistries:` + strings.Replace(fmt.Sprintf("%v", this.NoInsecureRegistries), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_InsecureRegistryList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_InsecureRegistryList{`,
		`InsecureRegistryList:` + strings.Replace(fmt.Sprintf("%v", this.InsecureRegistryList), "InsecureRegistryListType", "InsecureRegistryListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ClusterScopedAccessDeny) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ClusterScopedAccessDeny{`,
		`ClusterScopedAccessDeny:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessDeny), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ClusterScopedAccessPermit) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ClusterScopedAccessPermit{`,
		`ClusterScopedAccessPermit:` + strings.Replace(fmt.Sprintf("%v", this.ClusterScopedAccessPermit), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ApplicationArgoCDType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationArgoCDType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationArgoCDType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalDomain", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LocalDomain == nil {
				m.LocalDomain = &LocalAccessArgoCDType{}
			}
			if err := m.LocalDomain.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeneratedYaml", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeneratedYaml = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplicationDashboardType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationDashboardType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationDashboardType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeneratedYaml", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeneratedYaml = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplicationMetricsServerType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationMetricsServerType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationMetricsServerType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeneratedYaml", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeneratedYaml = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplicationPrometheusType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationPrometheusType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationPrometheusType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeneratedYaml", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeneratedYaml = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWideAppType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWideAppType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWideAppType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArgoCd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ApplicationArgoCDType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppChoice = &ClusterWideAppType_ArgoCd{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dashboard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ApplicationDashboardType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppChoice = &ClusterWideAppType_Dashboard{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetricsServer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ApplicationMetricsServerType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppChoice = &ClusterWideAppType_MetricsServer{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prometheus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ApplicationPrometheusType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppChoice = &ClusterWideAppType_Prometheus{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWideAppListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWideAppListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWideAppListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterWideApps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterWideApps = append(m.ClusterWideApps, &ClusterWideAppType{})
			if err := m.ClusterWideApps[len(m.ClusterWideApps)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LocalAccessConfigType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocalAccessConfigType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocalAccessConfigType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PortChoice = &LocalAccessConfigType_DefaultPort{v}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Port", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PortChoice = &LocalAccessConfigType_Port{v}
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LocalAccessArgoCDType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocalAccessArgoCDType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocalAccessArgoCDType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PortChoice = &LocalAccessArgoCDType_DefaultPort{v}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Port", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PortChoice = &LocalAccessArgoCDType_Port{v}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &schema.SecretType{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PodSecurityPolicyListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PodSecurityPolicyListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PodSecurityPolicyListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PodSecurityPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PodSecurityPolicies = append(m.PodSecurityPolicies, &views.ObjectRefType{})
			if err := m.PodSecurityPolicies[len(m.PodSecurityPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterRoleListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterRoleListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterRoleListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterRoles = append(m.ClusterRoles, &views.ObjectRefType{})
			if err := m.ClusterRoles[len(m.ClusterRoles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterRoleBindingListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterRoleBindingListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterRoleBindingListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterRoleBindings = append(m.ClusterRoleBindings, &views.ObjectRefType{})
			if err := m.ClusterRoleBindings[len(m.ClusterRoleBindings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InsecureRegistryListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InsecureRegistryListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InsecureRegistryListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureRegistries", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsecureRegistries = append(m.InsecureRegistries, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GlobalSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GlobalSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GlobalSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GlobalSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GlobalSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GlobalSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GlobalSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GlobalSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GlobalSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GlobalSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoClusterWideApps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &GlobalSpecType_NoClusterWideApps{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterWideAppList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterWideAppListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &GlobalSpecType_ClusterWideAppList{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoInsecureRegistries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &GlobalSpecType_NoInsecureRegistries{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureRegistryList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &InsecureRegistryListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &GlobalSpecType_InsecureRegistryList{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessDeny", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &GlobalSpecType_ClusterScopedAccessDeny{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessPermit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &GlobalSpecType_ClusterScopedAccessPermit{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vk8SNamespaceAccessDeny", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Vk8SNamespaceAccessChoice = &GlobalSpecType_Vk8SNamespaceAccessDeny{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vk8SNamespaceAccessPermit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Vk8SNamespaceAccessChoice = &GlobalSpecType_Vk8SNamespaceAccessPermit{v}
			iNdEx = postIndex
		case 1000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewInternal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ViewInternal == nil {
				m.ViewInternal = &views.ObjectRefType{}
			}
			if err := m.ViewInternal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalClusterRoleBindings = append(m.FinalClusterRoleBindings, &views.ObjectRefType{})
			if err := m.FinalClusterRoleBindings[len(m.FinalClusterRoleBindings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalClusterRoles = append(m.FinalClusterRoles, &views.ObjectRefType{})
			if err := m.FinalClusterRoles[len(m.FinalClusterRoles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1003:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalPodSecurityPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalPodSecurityPolicies = append(m.FinalPodSecurityPolicies, &views.ObjectRefType{})
			if err := m.FinalPodSecurityPolicies[len(m.FinalPodSecurityPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &CreateSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &CreateSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &CreateSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &CreateSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &CreateSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &CreateSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &CreateSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &CreateSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &CreateSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &CreateSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoClusterWideApps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &CreateSpecType_NoClusterWideApps{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterWideAppList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterWideAppListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &CreateSpecType_ClusterWideAppList{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoInsecureRegistries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &CreateSpecType_NoInsecureRegistries{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureRegistryList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &InsecureRegistryListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &CreateSpecType_InsecureRegistryList{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessDeny", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &CreateSpecType_ClusterScopedAccessDeny{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessPermit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &CreateSpecType_ClusterScopedAccessPermit{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplaceSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplaceSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplaceSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &ReplaceSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &ReplaceSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &ReplaceSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &ReplaceSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &ReplaceSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &ReplaceSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &ReplaceSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &ReplaceSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &ReplaceSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &ReplaceSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoClusterWideApps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &ReplaceSpecType_NoClusterWideApps{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterWideAppList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterWideAppListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &ReplaceSpecType_ClusterWideAppList{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoInsecureRegistries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &ReplaceSpecType_NoInsecureRegistries{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureRegistryList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &InsecureRegistryListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &ReplaceSpecType_InsecureRegistryList{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessDeny", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &ReplaceSpecType_ClusterScopedAccessDeny{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessPermit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &ReplaceSpecType_ClusterScopedAccessPermit{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GetSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GetSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GetSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GetSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GetSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GetSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GetSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GetSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GetSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GetSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoClusterWideApps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &GetSpecType_NoClusterWideApps{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterWideAppList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterWideAppListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &GetSpecType_ClusterWideAppList{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoInsecureRegistries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &GetSpecType_NoInsecureRegistries{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureRegistryList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &InsecureRegistryListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsecureRegistriesChoice = &GetSpecType_InsecureRegistryList{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessDeny", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &GetSpecType_ClusterScopedAccessDeny{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterScopedAccessPermit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterScopedResourceAccessChoice = &GetSpecType_ClusterScopedAccessPermit{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
