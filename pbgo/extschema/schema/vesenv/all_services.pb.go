// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/vesenv/all_services.proto

package vesenv

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ServiceChoice enumerates all the service-framework based services in a VES environment
type ServiceChoice struct {
	// Types that are valid to be assigned to Choice:
	//	*ServiceChoice_Akar
	//	*ServiceChoice_Ares
	//	*ServiceChoice_Asterix
	//	*ServiceChoice_Athena
	//	*ServiceChoice_Automatix
	//	*ServiceChoice_Barracute
	//	*ServiceChoice_Blindfold
	//	*ServiceChoice_Bolt
	//	*ServiceChoice_Charmander
	//	*ServiceChoice_Charmandercar
	//	*ServiceChoice_Drogon
	//	*ServiceChoice_Eywa
	//	*ServiceChoice_Griffin
	//	*ServiceChoice_Identityauthority
	//	*ServiceChoice_Keypr
	//	*ServiceChoice_Maurice
	//	*ServiceChoice_Obelix
	//	*ServiceChoice_Ocspmule
	//	*ServiceChoice_Opera
	//	*ServiceChoice_Pikachu
	//	*ServiceChoice_Pkifactory
	//	*ServiceChoice_Rakar
	//	*ServiceChoice_SiteConsole
	//	*ServiceChoice_Vega
	//	*ServiceChoice_Voucher
	//	*ServiceChoice_Vpm
	//	*ServiceChoice_Vulpix
	//	*ServiceChoice_Warden
	//	*ServiceChoice_Wingman
	//	*ServiceChoice_Shape
	//	*ServiceChoice_Hellas
	//	*ServiceChoice_Nfvsvc
	//	*ServiceChoice_Scim
	//	*ServiceChoice_LilacEdge
	//	*ServiceChoice_Doscontroller
	Choice isServiceChoice_Choice `protobuf_oneof:"choice"`
}

func (m *ServiceChoice) Reset()      { *m = ServiceChoice{} }
func (*ServiceChoice) ProtoMessage() {}
func (*ServiceChoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_30eccf2b87cfc541, []int{0}
}
func (m *ServiceChoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServiceChoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServiceChoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServiceChoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceChoice.Merge(m, src)
}
func (m *ServiceChoice) XXX_Size() int {
	return m.Size()
}
func (m *ServiceChoice) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceChoice.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceChoice proto.InternalMessageInfo

type isServiceChoice_Choice interface {
	isServiceChoice_Choice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ServiceChoice_Akar struct {
	Akar bool `protobuf:"varint,1,opt,name=akar,proto3,oneof" json:"akar,omitempty"`
}
type ServiceChoice_Ares struct {
	Ares bool `protobuf:"varint,2,opt,name=ares,proto3,oneof" json:"ares,omitempty"`
}
type ServiceChoice_Asterix struct {
	Asterix bool `protobuf:"varint,4,opt,name=asterix,proto3,oneof" json:"asterix,omitempty"`
}
type ServiceChoice_Athena struct {
	Athena bool `protobuf:"varint,6,opt,name=athena,proto3,oneof" json:"athena,omitempty"`
}
type ServiceChoice_Automatix struct {
	Automatix bool `protobuf:"varint,7,opt,name=automatix,proto3,oneof" json:"automatix,omitempty"`
}
type ServiceChoice_Barracute struct {
	Barracute bool `protobuf:"varint,8,opt,name=barracute,proto3,oneof" json:"barracute,omitempty"`
}
type ServiceChoice_Blindfold struct {
	Blindfold bool `protobuf:"varint,9,opt,name=blindfold,proto3,oneof" json:"blindfold,omitempty"`
}
type ServiceChoice_Bolt struct {
	Bolt bool `protobuf:"varint,10,opt,name=bolt,proto3,oneof" json:"bolt,omitempty"`
}
type ServiceChoice_Charmander struct {
	Charmander bool `protobuf:"varint,11,opt,name=charmander,proto3,oneof" json:"charmander,omitempty"`
}
type ServiceChoice_Charmandercar struct {
	Charmandercar bool `protobuf:"varint,12,opt,name=charmandercar,proto3,oneof" json:"charmandercar,omitempty"`
}
type ServiceChoice_Drogon struct {
	Drogon bool `protobuf:"varint,13,opt,name=drogon,proto3,oneof" json:"drogon,omitempty"`
}
type ServiceChoice_Eywa struct {
	Eywa bool `protobuf:"varint,14,opt,name=eywa,proto3,oneof" json:"eywa,omitempty"`
}
type ServiceChoice_Griffin struct {
	Griffin bool `protobuf:"varint,15,opt,name=griffin,proto3,oneof" json:"griffin,omitempty"`
}
type ServiceChoice_Identityauthority struct {
	Identityauthority bool `protobuf:"varint,16,opt,name=identityauthority,proto3,oneof" json:"identityauthority,omitempty"`
}
type ServiceChoice_Keypr struct {
	Keypr bool `protobuf:"varint,17,opt,name=keypr,proto3,oneof" json:"keypr,omitempty"`
}
type ServiceChoice_Maurice struct {
	Maurice bool `protobuf:"varint,18,opt,name=maurice,proto3,oneof" json:"maurice,omitempty"`
}
type ServiceChoice_Obelix struct {
	Obelix bool `protobuf:"varint,19,opt,name=obelix,proto3,oneof" json:"obelix,omitempty"`
}
type ServiceChoice_Ocspmule struct {
	Ocspmule bool `protobuf:"varint,20,opt,name=ocspmule,proto3,oneof" json:"ocspmule,omitempty"`
}
type ServiceChoice_Opera struct {
	Opera bool `protobuf:"varint,21,opt,name=opera,proto3,oneof" json:"opera,omitempty"`
}
type ServiceChoice_Pikachu struct {
	Pikachu bool `protobuf:"varint,22,opt,name=pikachu,proto3,oneof" json:"pikachu,omitempty"`
}
type ServiceChoice_Pkifactory struct {
	Pkifactory bool `protobuf:"varint,23,opt,name=pkifactory,proto3,oneof" json:"pkifactory,omitempty"`
}
type ServiceChoice_Rakar struct {
	Rakar bool `protobuf:"varint,24,opt,name=rakar,proto3,oneof" json:"rakar,omitempty"`
}
type ServiceChoice_SiteConsole struct {
	SiteConsole bool `protobuf:"varint,25,opt,name=site_console,json=siteConsole,proto3,oneof" json:"site_console,omitempty"`
}
type ServiceChoice_Vega struct {
	Vega bool `protobuf:"varint,26,opt,name=vega,proto3,oneof" json:"vega,omitempty"`
}
type ServiceChoice_Voucher struct {
	Voucher bool `protobuf:"varint,27,opt,name=voucher,proto3,oneof" json:"voucher,omitempty"`
}
type ServiceChoice_Vpm struct {
	Vpm bool `protobuf:"varint,28,opt,name=vpm,proto3,oneof" json:"vpm,omitempty"`
}
type ServiceChoice_Vulpix struct {
	Vulpix bool `protobuf:"varint,29,opt,name=vulpix,proto3,oneof" json:"vulpix,omitempty"`
}
type ServiceChoice_Warden struct {
	Warden bool `protobuf:"varint,30,opt,name=warden,proto3,oneof" json:"warden,omitempty"`
}
type ServiceChoice_Wingman struct {
	Wingman bool `protobuf:"varint,31,opt,name=wingman,proto3,oneof" json:"wingman,omitempty"`
}
type ServiceChoice_Shape struct {
	Shape bool `protobuf:"varint,32,opt,name=shape,proto3,oneof" json:"shape,omitempty"`
}
type ServiceChoice_Hellas struct {
	Hellas bool `protobuf:"varint,33,opt,name=hellas,proto3,oneof" json:"hellas,omitempty"`
}
type ServiceChoice_Nfvsvc struct {
	Nfvsvc bool `protobuf:"varint,34,opt,name=nfvsvc,proto3,oneof" json:"nfvsvc,omitempty"`
}
type ServiceChoice_Scim struct {
	Scim bool `protobuf:"varint,35,opt,name=scim,proto3,oneof" json:"scim,omitempty"`
}
type ServiceChoice_LilacEdge struct {
	LilacEdge bool `protobuf:"varint,36,opt,name=lilac_edge,json=lilacEdge,proto3,oneof" json:"lilac_edge,omitempty"`
}
type ServiceChoice_Doscontroller struct {
	Doscontroller bool `protobuf:"varint,37,opt,name=doscontroller,proto3,oneof" json:"doscontroller,omitempty"`
}

func (*ServiceChoice_Akar) isServiceChoice_Choice()              {}
func (*ServiceChoice_Ares) isServiceChoice_Choice()              {}
func (*ServiceChoice_Asterix) isServiceChoice_Choice()           {}
func (*ServiceChoice_Athena) isServiceChoice_Choice()            {}
func (*ServiceChoice_Automatix) isServiceChoice_Choice()         {}
func (*ServiceChoice_Barracute) isServiceChoice_Choice()         {}
func (*ServiceChoice_Blindfold) isServiceChoice_Choice()         {}
func (*ServiceChoice_Bolt) isServiceChoice_Choice()              {}
func (*ServiceChoice_Charmander) isServiceChoice_Choice()        {}
func (*ServiceChoice_Charmandercar) isServiceChoice_Choice()     {}
func (*ServiceChoice_Drogon) isServiceChoice_Choice()            {}
func (*ServiceChoice_Eywa) isServiceChoice_Choice()              {}
func (*ServiceChoice_Griffin) isServiceChoice_Choice()           {}
func (*ServiceChoice_Identityauthority) isServiceChoice_Choice() {}
func (*ServiceChoice_Keypr) isServiceChoice_Choice()             {}
func (*ServiceChoice_Maurice) isServiceChoice_Choice()           {}
func (*ServiceChoice_Obelix) isServiceChoice_Choice()            {}
func (*ServiceChoice_Ocspmule) isServiceChoice_Choice()          {}
func (*ServiceChoice_Opera) isServiceChoice_Choice()             {}
func (*ServiceChoice_Pikachu) isServiceChoice_Choice()           {}
func (*ServiceChoice_Pkifactory) isServiceChoice_Choice()        {}
func (*ServiceChoice_Rakar) isServiceChoice_Choice()             {}
func (*ServiceChoice_SiteConsole) isServiceChoice_Choice()       {}
func (*ServiceChoice_Vega) isServiceChoice_Choice()              {}
func (*ServiceChoice_Voucher) isServiceChoice_Choice()           {}
func (*ServiceChoice_Vpm) isServiceChoice_Choice()               {}
func (*ServiceChoice_Vulpix) isServiceChoice_Choice()            {}
func (*ServiceChoice_Warden) isServiceChoice_Choice()            {}
func (*ServiceChoice_Wingman) isServiceChoice_Choice()           {}
func (*ServiceChoice_Shape) isServiceChoice_Choice()             {}
func (*ServiceChoice_Hellas) isServiceChoice_Choice()            {}
func (*ServiceChoice_Nfvsvc) isServiceChoice_Choice()            {}
func (*ServiceChoice_Scim) isServiceChoice_Choice()              {}
func (*ServiceChoice_LilacEdge) isServiceChoice_Choice()         {}
func (*ServiceChoice_Doscontroller) isServiceChoice_Choice()     {}

func (m *ServiceChoice) GetChoice() isServiceChoice_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *ServiceChoice) GetAkar() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Akar); ok {
		return x.Akar
	}
	return false
}

func (m *ServiceChoice) GetAres() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ares); ok {
		return x.Ares
	}
	return false
}

func (m *ServiceChoice) GetAsterix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Asterix); ok {
		return x.Asterix
	}
	return false
}

func (m *ServiceChoice) GetAthena() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Athena); ok {
		return x.Athena
	}
	return false
}

func (m *ServiceChoice) GetAutomatix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Automatix); ok {
		return x.Automatix
	}
	return false
}

func (m *ServiceChoice) GetBarracute() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Barracute); ok {
		return x.Barracute
	}
	return false
}

func (m *ServiceChoice) GetBlindfold() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Blindfold); ok {
		return x.Blindfold
	}
	return false
}

func (m *ServiceChoice) GetBolt() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Bolt); ok {
		return x.Bolt
	}
	return false
}

func (m *ServiceChoice) GetCharmander() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Charmander); ok {
		return x.Charmander
	}
	return false
}

func (m *ServiceChoice) GetCharmandercar() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Charmandercar); ok {
		return x.Charmandercar
	}
	return false
}

func (m *ServiceChoice) GetDrogon() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Drogon); ok {
		return x.Drogon
	}
	return false
}

func (m *ServiceChoice) GetEywa() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Eywa); ok {
		return x.Eywa
	}
	return false
}

func (m *ServiceChoice) GetGriffin() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Griffin); ok {
		return x.Griffin
	}
	return false
}

func (m *ServiceChoice) GetIdentityauthority() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Identityauthority); ok {
		return x.Identityauthority
	}
	return false
}

func (m *ServiceChoice) GetKeypr() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Keypr); ok {
		return x.Keypr
	}
	return false
}

func (m *ServiceChoice) GetMaurice() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Maurice); ok {
		return x.Maurice
	}
	return false
}

func (m *ServiceChoice) GetObelix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Obelix); ok {
		return x.Obelix
	}
	return false
}

func (m *ServiceChoice) GetOcspmule() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ocspmule); ok {
		return x.Ocspmule
	}
	return false
}

func (m *ServiceChoice) GetOpera() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Opera); ok {
		return x.Opera
	}
	return false
}

func (m *ServiceChoice) GetPikachu() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Pikachu); ok {
		return x.Pikachu
	}
	return false
}

func (m *ServiceChoice) GetPkifactory() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Pkifactory); ok {
		return x.Pkifactory
	}
	return false
}

func (m *ServiceChoice) GetRakar() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Rakar); ok {
		return x.Rakar
	}
	return false
}

func (m *ServiceChoice) GetSiteConsole() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_SiteConsole); ok {
		return x.SiteConsole
	}
	return false
}

func (m *ServiceChoice) GetVega() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Vega); ok {
		return x.Vega
	}
	return false
}

func (m *ServiceChoice) GetVoucher() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Voucher); ok {
		return x.Voucher
	}
	return false
}

func (m *ServiceChoice) GetVpm() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Vpm); ok {
		return x.Vpm
	}
	return false
}

func (m *ServiceChoice) GetVulpix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Vulpix); ok {
		return x.Vulpix
	}
	return false
}

func (m *ServiceChoice) GetWarden() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Warden); ok {
		return x.Warden
	}
	return false
}

func (m *ServiceChoice) GetWingman() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Wingman); ok {
		return x.Wingman
	}
	return false
}

func (m *ServiceChoice) GetShape() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Shape); ok {
		return x.Shape
	}
	return false
}

func (m *ServiceChoice) GetHellas() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Hellas); ok {
		return x.Hellas
	}
	return false
}

func (m *ServiceChoice) GetNfvsvc() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Nfvsvc); ok {
		return x.Nfvsvc
	}
	return false
}

func (m *ServiceChoice) GetScim() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Scim); ok {
		return x.Scim
	}
	return false
}

func (m *ServiceChoice) GetLilacEdge() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_LilacEdge); ok {
		return x.LilacEdge
	}
	return false
}

func (m *ServiceChoice) GetDoscontroller() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Doscontroller); ok {
		return x.Doscontroller
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ServiceChoice) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ServiceChoice_Akar)(nil),
		(*ServiceChoice_Ares)(nil),
		(*ServiceChoice_Asterix)(nil),
		(*ServiceChoice_Athena)(nil),
		(*ServiceChoice_Automatix)(nil),
		(*ServiceChoice_Barracute)(nil),
		(*ServiceChoice_Blindfold)(nil),
		(*ServiceChoice_Bolt)(nil),
		(*ServiceChoice_Charmander)(nil),
		(*ServiceChoice_Charmandercar)(nil),
		(*ServiceChoice_Drogon)(nil),
		(*ServiceChoice_Eywa)(nil),
		(*ServiceChoice_Griffin)(nil),
		(*ServiceChoice_Identityauthority)(nil),
		(*ServiceChoice_Keypr)(nil),
		(*ServiceChoice_Maurice)(nil),
		(*ServiceChoice_Obelix)(nil),
		(*ServiceChoice_Ocspmule)(nil),
		(*ServiceChoice_Opera)(nil),
		(*ServiceChoice_Pikachu)(nil),
		(*ServiceChoice_Pkifactory)(nil),
		(*ServiceChoice_Rakar)(nil),
		(*ServiceChoice_SiteConsole)(nil),
		(*ServiceChoice_Vega)(nil),
		(*ServiceChoice_Voucher)(nil),
		(*ServiceChoice_Vpm)(nil),
		(*ServiceChoice_Vulpix)(nil),
		(*ServiceChoice_Warden)(nil),
		(*ServiceChoice_Wingman)(nil),
		(*ServiceChoice_Shape)(nil),
		(*ServiceChoice_Hellas)(nil),
		(*ServiceChoice_Nfvsvc)(nil),
		(*ServiceChoice_Scim)(nil),
		(*ServiceChoice_LilacEdge)(nil),
		(*ServiceChoice_Doscontroller)(nil),
	}
}

func init() {
	proto.RegisterType((*ServiceChoice)(nil), "ves.io.schema.vesenv.ServiceChoice")
}

func init() {
	proto.RegisterFile("ves.io/schema/vesenv/all_services.proto", fileDescriptor_30eccf2b87cfc541)
}

var fileDescriptor_30eccf2b87cfc541 = []byte{
	// 886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x95, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xc7, 0x45, 0x57, 0xa6, 0xec, 0xb1, 0xe5, 0x0f, 0xd9, 0xa9, 0x27, 0x49, 0xcb, 0xa6, 0xae,
	0x02, 0x07, 0x02, 0x24, 0x15, 0x30, 0x1a, 0xa0, 0x97, 0x06, 0xb0, 0x11, 0xb4, 0x68, 0x6f, 0xe9,
	0xad, 0x17, 0x63, 0x45, 0xad, 0xc4, 0x85, 0x48, 0x2e, 0xb1, 0xfc, 0xb0, 0x74, 0xcb, 0x23, 0xf4,
	0x31, 0xfa, 0x02, 0xbd, 0x90, 0x2f, 0xd0, 0xa3, 0x8f, 0x39, 0xd6, 0xf2, 0xa5, 0xc7, 0x3c, 0x42,
	0xc1, 0xfd, 0x90, 0x56, 0x86, 0x6f, 0xfb, 0xff, 0xcd, 0x7f, 0x86, 0xbb, 0xb3, 0xcb, 0x5d, 0xb8,
	0x28, 0x68, 0x3a, 0x60, 0x7c, 0x98, 0xfa, 0x01, 0x8d, 0xc8, 0xb0, 0xa0, 0x29, 0x8d, 0x8b, 0x21,
	0x09, 0xc3, 0x9b, 0x94, 0x8a, 0x82, 0xf9, 0x34, 0x1d, 0x24, 0x82, 0x67, 0xbc, 0x73, 0xaa, 0x8c,
	0x03, 0x65, 0x1c, 0x28, 0xe3, 0x8b, 0xf3, 0x27, 0xd3, 0x79, 0x92, 0x31, 0x1e, 0xeb, 0xcc, 0xf3,
	0xbf, 0xdb, 0xd0, 0xfe, 0x5d, 0x15, 0xbb, 0x0e, 0x38, 0xf3, 0x69, 0xa7, 0x0b, 0x4d, 0x32, 0x23,
	0x02, 0x9d, 0x57, 0xce, 0x9b, 0x9d, 0xab, 0x83, 0xb2, 0x42, 0x50, 0xa4, 0xb3, 0xf5, 0xf3, 0xf5,
	0x2f, 0x8d, 0x0f, 0x6a, 0x5c, 0xbb, 0x04, 0x4d, 0x71, 0x6b, 0xc3, 0x25, 0x68, 0xda, 0xd9, 0xfa,
	0xf0, 0x5e, 0xba, 0xea, 0x71, 0x1f, 0x5a, 0x24, 0xcd, 0xa8, 0x60, 0x73, 0x6c, 0x4a, 0xe3, 0x71,
	0x59, 0x61, 0x7b, 0x05, 0x75, 0xc5, 0x95, 0xec, 0x81, 0x4b, 0xb2, 0x80, 0xc6, 0x04, 0x5d, 0xe9,
	0x3e, 0x2a, 0x2b, 0xdc, 0x37, 0x4c, 0x9b, 0x8d, 0xba, 0x84, 0x5d, 0x92, 0x67, 0x3c, 0x22, 0x19,
	0x9b, 0x63, 0x4b, 0xda, 0x4f, 0xca, 0x0a, 0x0f, 0x2d, 0xac, 0x33, 0x2c, 0x70, 0x09, 0xbb, 0x23,
	0x22, 0x04, 0xf1, 0xf3, 0x8c, 0xe2, 0x8e, 0x9d, 0xb4, 0xc2, 0x26, 0x69, 0x0d, 0xea, 0xa4, 0x90,
	0xc5, 0xe3, 0x09, 0x0f, 0xc7, 0xb8, 0xbb, 0x91, 0x64, 0xf0, 0x2a, 0x69, 0x05, 0xba, 0xd0, 0x1c,
	0xf1, 0x30, 0x43, 0xb0, 0xfb, 0x53, 0x13, 0xd3, 0x45, 0x39, 0x7e, 0x0b, 0xe0, 0x07, 0x44, 0x44,
	0x24, 0x1e, 0x53, 0x81, 0x7b, 0xd2, 0x7b, 0x5a, 0x56, 0x78, 0x64, 0x73, 0x9d, 0x61, 0x93, 0x77,
	0xd0, 0x5e, 0x2b, 0x9f, 0x08, 0xdc, 0x97, 0xa9, 0x67, 0x65, 0x85, 0x27, 0x8f, 0x42, 0x3a, 0xfb,
	0x11, 0xec, 0x81, 0x3b, 0x16, 0x7c, 0xca, 0x63, 0x6c, 0xdb, 0x9d, 0x56, 0xcc, 0x74, 0x5a, 0xab,
	0x2e, 0x34, 0xe9, 0xe2, 0x96, 0xe0, 0x81, 0xbd, 0x94, 0x9a, 0x98, 0xa5, 0xc8, 0x71, 0x1f, 0x5a,
	0x53, 0xc1, 0x26, 0x13, 0x16, 0xe3, 0xa1, 0xbd, 0xd5, 0x1a, 0x9a, 0xad, 0x36, 0xf2, 0x37, 0x38,
	0x66, 0x63, 0x1a, 0x67, 0x2c, 0x5b, 0x90, 0x3c, 0x0b, 0xb8, 0x60, 0xd9, 0x02, 0x8f, 0x64, 0xe2,
	0xcb, 0xb2, 0xc2, 0xb3, 0x27, 0xc2, 0xba, 0xc4, 0x13, 0x81, 0x0b, 0xd8, 0x9e, 0xd1, 0x45, 0x22,
	0xf0, 0x58, 0x16, 0x38, 0x2c, 0x2b, 0xdc, 0xd3, 0x48, 0x27, 0x69, 0xd1, 0x87, 0x56, 0x44, 0x72,
	0xc1, 0x7c, 0x8a, 0x1d, 0x7b, 0x92, 0x1a, 0x9a, 0x49, 0x1a, 0xd9, 0x03, 0x97, 0x8f, 0x68, 0xc8,
	0xe6, 0x78, 0x62, 0x77, 0x49, 0x31, 0x7d, 0xd0, 0x8d, 0xfa, 0x1e, 0x76, 0xb8, 0x9f, 0x26, 0x51,
	0x1e, 0x52, 0x3c, 0x95, 0xee, 0x4e, 0x59, 0xe1, 0xc1, 0x9a, 0xea, 0xe2, 0x6b, 0x3d, 0x84, 0x6d,
	0x9e, 0x50, 0x41, 0xf0, 0x99, 0xb5, 0x79, 0x0a, 0xd5, 0xde, 0xba, 0x7e, 0x67, 0xeb, 0xba, 0xfe,
	0x86, 0x86, 0x7d, 0x68, 0x25, 0x6c, 0x46, 0xfc, 0x20, 0xc7, 0x2f, 0xed, 0xd9, 0x6b, 0x68, 0x66,
	0x6f, 0xe4, 0x5b, 0x80, 0x64, 0xc6, 0x26, 0xc4, 0xcf, 0xb8, 0x58, 0xe0, 0x99, 0x7d, 0xb8, 0xd6,
	0xdc, 0x1c, 0x2e, 0x8b, 0x5c, 0xc0, 0xb6, 0x90, 0x37, 0x00, 0xda, 0xdd, 0x14, 0xea, 0x0a, 0x90,
	0x6b, 0xd6, 0xe2, 0x27, 0xd8, 0x4f, 0x59, 0x46, 0x6f, 0x7c, 0x1e, 0xa7, 0x3c, 0xa4, 0xf8, 0x5c,
	0xfa, 0x9f, 0x97, 0x15, 0x3e, 0x83, 0xbd, 0x3a, 0x72, 0xad, 0x02, 0xd6, 0x4a, 0x36, 0xf0, 0x1b,
	0x68, 0x16, 0x74, 0x4a, 0xf0, 0x85, 0xd5, 0x2e, 0x49, 0xac, 0x04, 0xa5, 0xfb, 0xd0, 0x2a, 0x78,
	0xee, 0x07, 0x54, 0xe0, 0x4b, 0x7b, 0xe5, 0x1a, 0xea, 0x69, 0xad, 0xe4, 0x6b, 0xf8, 0xa2, 0x48,
	0x22, 0xfc, 0xca, 0xb2, 0xd6, 0xc0, 0x2a, 0x2b, 0x65, 0x0f, 0xdc, 0x22, 0x0f, 0x13, 0x36, 0xc7,
	0xaf, 0xed, 0xed, 0x55, 0xcc, 0xfc, 0x04, 0x5a, 0xf5, 0xc0, 0xbd, 0x25, 0x62, 0x4c, 0x63, 0xf4,
	0x6c, 0xaf, 0x62, 0xc6, 0xab, 0xd5, 0x0f, 0xd0, 0xba, 0x65, 0xf1, 0x34, 0x22, 0x31, 0x7e, 0x63,
	0xb5, 0xc4, 0xc0, 0x47, 0x9b, 0xbb, 0xc2, 0x17, 0xb0, 0x9d, 0x06, 0x24, 0xa1, 0xf8, 0xca, 0xee,
	0xbb, 0x44, 0xe6, 0x14, 0x2b, 0xd1, 0x03, 0x37, 0xa0, 0x61, 0x48, 0x52, 0xfc, 0xd6, 0x9e, 0x8b,
	0x62, 0xba, 0xaa, 0x51, 0x3d, 0x70, 0xe3, 0x49, 0x91, 0x16, 0x3e, 0x9e, 0xdb, 0x5e, 0xc5, 0x8c,
	0x57, 0xab, 0x2e, 0x34, 0x53, 0x9f, 0x45, 0xf8, 0x9d, 0xfd, 0xa3, 0xd7, 0xc4, 0xfc, 0xe8, 0x72,
	0xfc, 0x23, 0x40, 0xc8, 0x42, 0xe2, 0xdf, 0xd0, 0xf1, 0x94, 0x62, 0x57, 0x7a, 0xb1, 0xac, 0xf0,
	0x54, 0xf3, 0x7e, 0xcd, 0xad, 0xf5, 0xed, 0x4a, 0xfa, 0xbe, 0x86, 0xef, 0xa0, 0x3d, 0xe6, 0xa9,
	0xcf, 0xe3, 0x4c, 0xf0, 0x30, 0xa4, 0x02, 0x5f, 0xdb, 0xd7, 0xd6, 0x46, 0xc8, 0x5c, 0x5b, 0x1b,
	0xf0, 0x6a, 0x07, 0x5c, 0x5f, 0xbe, 0x52, 0x57, 0x1f, 0x9d, 0xbb, 0x7b, 0xaf, 0xf1, 0xe9, 0xde,
	0x6b, 0x7c, 0xbe, 0xf7, 0x9c, 0x8f, 0x4b, 0xcf, 0xf9, 0x6b, 0xe9, 0x39, 0xff, 0x2c, 0x3d, 0xe7,
	0x6e, 0xe9, 0x39, 0xff, 0x2e, 0x3d, 0xe7, 0xbf, 0xa5, 0xd7, 0xf8, 0xbc, 0xf4, 0x9c, 0x3f, 0x1f,
	0xbc, 0xc6, 0xdd, 0x83, 0xd7, 0xf8, 0xf4, 0xe0, 0x35, 0xfe, 0xf8, 0x75, 0xca, 0x93, 0xd9, 0x74,
	0x50, 0xf0, 0x30, 0xa3, 0x42, 0x90, 0x41, 0x9e, 0x0e, 0xe5, 0x60, 0xc2, 0x45, 0xd4, 0x4f, 0x04,
	0x2f, 0xd8, 0x98, 0x8a, 0xbe, 0x09, 0x0f, 0x93, 0xd1, 0x94, 0x0f, 0xe9, 0x3c, 0xd3, 0x2f, 0xe8,
	0xc6, 0x43, 0x3a, 0x72, 0xe5, 0x0b, 0x7a, 0xf9, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0x66,
	0x97, 0x46, 0xa6, 0x07, 0x00, 0x00,
}

func (this *ServiceChoice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice)
	if !ok {
		that2, ok := that.(ServiceChoice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Choice == nil {
		if this.Choice != nil {
			return false
		}
	} else if this.Choice == nil {
		return false
	} else if !this.Choice.Equal(that1.Choice) {
		return false
	}
	return true
}
func (this *ServiceChoice_Akar) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Akar)
	if !ok {
		that2, ok := that.(ServiceChoice_Akar)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Akar != that1.Akar {
		return false
	}
	return true
}
func (this *ServiceChoice_Ares) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ares)
	if !ok {
		that2, ok := that.(ServiceChoice_Ares)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ares != that1.Ares {
		return false
	}
	return true
}
func (this *ServiceChoice_Asterix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Asterix)
	if !ok {
		that2, ok := that.(ServiceChoice_Asterix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Asterix != that1.Asterix {
		return false
	}
	return true
}
func (this *ServiceChoice_Athena) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Athena)
	if !ok {
		that2, ok := that.(ServiceChoice_Athena)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Athena != that1.Athena {
		return false
	}
	return true
}
func (this *ServiceChoice_Automatix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Automatix)
	if !ok {
		that2, ok := that.(ServiceChoice_Automatix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Automatix != that1.Automatix {
		return false
	}
	return true
}
func (this *ServiceChoice_Barracute) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Barracute)
	if !ok {
		that2, ok := that.(ServiceChoice_Barracute)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Barracute != that1.Barracute {
		return false
	}
	return true
}
func (this *ServiceChoice_Blindfold) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Blindfold)
	if !ok {
		that2, ok := that.(ServiceChoice_Blindfold)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Blindfold != that1.Blindfold {
		return false
	}
	return true
}
func (this *ServiceChoice_Bolt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Bolt)
	if !ok {
		that2, ok := that.(ServiceChoice_Bolt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Bolt != that1.Bolt {
		return false
	}
	return true
}
func (this *ServiceChoice_Charmander) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Charmander)
	if !ok {
		that2, ok := that.(ServiceChoice_Charmander)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Charmander != that1.Charmander {
		return false
	}
	return true
}
func (this *ServiceChoice_Charmandercar) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Charmandercar)
	if !ok {
		that2, ok := that.(ServiceChoice_Charmandercar)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Charmandercar != that1.Charmandercar {
		return false
	}
	return true
}
func (this *ServiceChoice_Drogon) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Drogon)
	if !ok {
		that2, ok := that.(ServiceChoice_Drogon)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Drogon != that1.Drogon {
		return false
	}
	return true
}
func (this *ServiceChoice_Eywa) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Eywa)
	if !ok {
		that2, ok := that.(ServiceChoice_Eywa)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Eywa != that1.Eywa {
		return false
	}
	return true
}
func (this *ServiceChoice_Griffin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Griffin)
	if !ok {
		that2, ok := that.(ServiceChoice_Griffin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Griffin != that1.Griffin {
		return false
	}
	return true
}
func (this *ServiceChoice_Identityauthority) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Identityauthority)
	if !ok {
		that2, ok := that.(ServiceChoice_Identityauthority)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Identityauthority != that1.Identityauthority {
		return false
	}
	return true
}
func (this *ServiceChoice_Keypr) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Keypr)
	if !ok {
		that2, ok := that.(ServiceChoice_Keypr)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Keypr != that1.Keypr {
		return false
	}
	return true
}
func (this *ServiceChoice_Maurice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Maurice)
	if !ok {
		that2, ok := that.(ServiceChoice_Maurice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Maurice != that1.Maurice {
		return false
	}
	return true
}
func (this *ServiceChoice_Obelix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Obelix)
	if !ok {
		that2, ok := that.(ServiceChoice_Obelix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Obelix != that1.Obelix {
		return false
	}
	return true
}
func (this *ServiceChoice_Ocspmule) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ocspmule)
	if !ok {
		that2, ok := that.(ServiceChoice_Ocspmule)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ocspmule != that1.Ocspmule {
		return false
	}
	return true
}
func (this *ServiceChoice_Opera) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Opera)
	if !ok {
		that2, ok := that.(ServiceChoice_Opera)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Opera != that1.Opera {
		return false
	}
	return true
}
func (this *ServiceChoice_Pikachu) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Pikachu)
	if !ok {
		that2, ok := that.(ServiceChoice_Pikachu)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Pikachu != that1.Pikachu {
		return false
	}
	return true
}
func (this *ServiceChoice_Pkifactory) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Pkifactory)
	if !ok {
		that2, ok := that.(ServiceChoice_Pkifactory)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Pkifactory != that1.Pkifactory {
		return false
	}
	return true
}
func (this *ServiceChoice_Rakar) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Rakar)
	if !ok {
		that2, ok := that.(ServiceChoice_Rakar)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Rakar != that1.Rakar {
		return false
	}
	return true
}
func (this *ServiceChoice_SiteConsole) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_SiteConsole)
	if !ok {
		that2, ok := that.(ServiceChoice_SiteConsole)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SiteConsole != that1.SiteConsole {
		return false
	}
	return true
}
func (this *ServiceChoice_Vega) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Vega)
	if !ok {
		that2, ok := that.(ServiceChoice_Vega)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Vega != that1.Vega {
		return false
	}
	return true
}
func (this *ServiceChoice_Voucher) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Voucher)
	if !ok {
		that2, ok := that.(ServiceChoice_Voucher)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Voucher != that1.Voucher {
		return false
	}
	return true
}
func (this *ServiceChoice_Vpm) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Vpm)
	if !ok {
		that2, ok := that.(ServiceChoice_Vpm)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Vpm != that1.Vpm {
		return false
	}
	return true
}
func (this *ServiceChoice_Vulpix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Vulpix)
	if !ok {
		that2, ok := that.(ServiceChoice_Vulpix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Vulpix != that1.Vulpix {
		return false
	}
	return true
}
func (this *ServiceChoice_Warden) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Warden)
	if !ok {
		that2, ok := that.(ServiceChoice_Warden)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Warden != that1.Warden {
		return false
	}
	return true
}
func (this *ServiceChoice_Wingman) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Wingman)
	if !ok {
		that2, ok := that.(ServiceChoice_Wingman)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Wingman != that1.Wingman {
		return false
	}
	return true
}
func (this *ServiceChoice_Shape) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Shape)
	if !ok {
		that2, ok := that.(ServiceChoice_Shape)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Shape != that1.Shape {
		return false
	}
	return true
}
func (this *ServiceChoice_Hellas) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Hellas)
	if !ok {
		that2, ok := that.(ServiceChoice_Hellas)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Hellas != that1.Hellas {
		return false
	}
	return true
}
func (this *ServiceChoice_Nfvsvc) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Nfvsvc)
	if !ok {
		that2, ok := that.(ServiceChoice_Nfvsvc)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Nfvsvc != that1.Nfvsvc {
		return false
	}
	return true
}
func (this *ServiceChoice_Scim) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Scim)
	if !ok {
		that2, ok := that.(ServiceChoice_Scim)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Scim != that1.Scim {
		return false
	}
	return true
}
func (this *ServiceChoice_LilacEdge) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_LilacEdge)
	if !ok {
		that2, ok := that.(ServiceChoice_LilacEdge)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LilacEdge != that1.LilacEdge {
		return false
	}
	return true
}
func (this *ServiceChoice_Doscontroller) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Doscontroller)
	if !ok {
		that2, ok := that.(ServiceChoice_Doscontroller)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Doscontroller != that1.Doscontroller {
		return false
	}
	return true
}
func (this *ServiceChoice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 39)
	s = append(s, "&vesenv.ServiceChoice{")
	if this.Choice != nil {
		s = append(s, "Choice: "+fmt.Sprintf("%#v", this.Choice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ServiceChoice_Akar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Akar{` +
		`Akar:` + fmt.Sprintf("%#v", this.Akar) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ares) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ares{` +
		`Ares:` + fmt.Sprintf("%#v", this.Ares) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Asterix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Asterix{` +
		`Asterix:` + fmt.Sprintf("%#v", this.Asterix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Athena) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Athena{` +
		`Athena:` + fmt.Sprintf("%#v", this.Athena) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Automatix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Automatix{` +
		`Automatix:` + fmt.Sprintf("%#v", this.Automatix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Barracute) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Barracute{` +
		`Barracute:` + fmt.Sprintf("%#v", this.Barracute) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Blindfold) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Blindfold{` +
		`Blindfold:` + fmt.Sprintf("%#v", this.Blindfold) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Bolt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Bolt{` +
		`Bolt:` + fmt.Sprintf("%#v", this.Bolt) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Charmander) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Charmander{` +
		`Charmander:` + fmt.Sprintf("%#v", this.Charmander) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Charmandercar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Charmandercar{` +
		`Charmandercar:` + fmt.Sprintf("%#v", this.Charmandercar) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Drogon) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Drogon{` +
		`Drogon:` + fmt.Sprintf("%#v", this.Drogon) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Eywa) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Eywa{` +
		`Eywa:` + fmt.Sprintf("%#v", this.Eywa) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Griffin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Griffin{` +
		`Griffin:` + fmt.Sprintf("%#v", this.Griffin) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Identityauthority) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Identityauthority{` +
		`Identityauthority:` + fmt.Sprintf("%#v", this.Identityauthority) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Keypr) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Keypr{` +
		`Keypr:` + fmt.Sprintf("%#v", this.Keypr) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Maurice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Maurice{` +
		`Maurice:` + fmt.Sprintf("%#v", this.Maurice) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Obelix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Obelix{` +
		`Obelix:` + fmt.Sprintf("%#v", this.Obelix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ocspmule) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ocspmule{` +
		`Ocspmule:` + fmt.Sprintf("%#v", this.Ocspmule) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Opera) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Opera{` +
		`Opera:` + fmt.Sprintf("%#v", this.Opera) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Pikachu) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Pikachu{` +
		`Pikachu:` + fmt.Sprintf("%#v", this.Pikachu) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Pkifactory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Pkifactory{` +
		`Pkifactory:` + fmt.Sprintf("%#v", this.Pkifactory) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Rakar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Rakar{` +
		`Rakar:` + fmt.Sprintf("%#v", this.Rakar) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_SiteConsole) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_SiteConsole{` +
		`SiteConsole:` + fmt.Sprintf("%#v", this.SiteConsole) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Vega) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Vega{` +
		`Vega:` + fmt.Sprintf("%#v", this.Vega) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Voucher) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Voucher{` +
		`Voucher:` + fmt.Sprintf("%#v", this.Voucher) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Vpm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Vpm{` +
		`Vpm:` + fmt.Sprintf("%#v", this.Vpm) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Vulpix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Vulpix{` +
		`Vulpix:` + fmt.Sprintf("%#v", this.Vulpix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Warden) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Warden{` +
		`Warden:` + fmt.Sprintf("%#v", this.Warden) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Wingman) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Wingman{` +
		`Wingman:` + fmt.Sprintf("%#v", this.Wingman) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Shape) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Shape{` +
		`Shape:` + fmt.Sprintf("%#v", this.Shape) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Hellas) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Hellas{` +
		`Hellas:` + fmt.Sprintf("%#v", this.Hellas) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Nfvsvc) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Nfvsvc{` +
		`Nfvsvc:` + fmt.Sprintf("%#v", this.Nfvsvc) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Scim) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Scim{` +
		`Scim:` + fmt.Sprintf("%#v", this.Scim) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_LilacEdge) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_LilacEdge{` +
		`LilacEdge:` + fmt.Sprintf("%#v", this.LilacEdge) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Doscontroller) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Doscontroller{` +
		`Doscontroller:` + fmt.Sprintf("%#v", this.Doscontroller) + `}`}, ", ")
	return s
}
func valueToGoStringAllServices(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ServiceChoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceChoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Choice != nil {
		{
			size := m.Choice.Size()
			i -= size
			if _, err := m.Choice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ServiceChoice_Akar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Akar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Akar {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ares) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ares) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ares {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Asterix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Asterix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Asterix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x20
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Athena) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Athena) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Athena {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x30
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Automatix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Automatix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Automatix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x38
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Barracute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Barracute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Barracute {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x40
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Blindfold) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Blindfold) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Blindfold {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x48
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Bolt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Bolt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Bolt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x50
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Charmander) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Charmander) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Charmander {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x58
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Charmandercar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Charmandercar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Charmandercar {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x60
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Drogon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Drogon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Drogon {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x68
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Eywa) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Eywa) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Eywa {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x70
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Griffin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Griffin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Griffin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x78
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Identityauthority) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Identityauthority) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Identityauthority {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Keypr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Keypr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Keypr {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Maurice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Maurice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Maurice {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Obelix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Obelix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Obelix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ocspmule) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ocspmule) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ocspmule {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Opera) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Opera) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Opera {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Pikachu) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Pikachu) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Pikachu {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Pkifactory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Pkifactory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Pkifactory {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Rakar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Rakar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Rakar {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_SiteConsole) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_SiteConsole) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.SiteConsole {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Vega) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Vega) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Vega {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Voucher) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Voucher) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Voucher {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Vpm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Vpm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Vpm {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Vulpix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Vulpix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Vulpix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Warden) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Warden) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Warden {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Wingman) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Wingman) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Wingman {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Shape) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Shape) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Shape {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Hellas) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Hellas) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Hellas {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Nfvsvc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Nfvsvc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Nfvsvc {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Scim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Scim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Scim {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_LilacEdge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_LilacEdge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.LilacEdge {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Doscontroller) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Doscontroller) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Doscontroller {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func encodeVarintAllServices(dAtA []byte, offset int, v uint64) int {
	offset -= sovAllServices(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ServiceChoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Choice != nil {
		n += m.Choice.Size()
	}
	return n
}

func (m *ServiceChoice_Akar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Ares) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Asterix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Athena) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Automatix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Barracute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Blindfold) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Bolt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Charmander) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Charmandercar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Drogon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Eywa) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Griffin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Identityauthority) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Keypr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Maurice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Obelix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ocspmule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Opera) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Pikachu) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Pkifactory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Rakar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_SiteConsole) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Vega) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Voucher) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Vpm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Vulpix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Warden) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Wingman) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Shape) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Hellas) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Nfvsvc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Scim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_LilacEdge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Doscontroller) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}

func sovAllServices(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAllServices(x uint64) (n int) {
	return sovAllServices(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ServiceChoice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice{`,
		`Choice:` + fmt.Sprintf("%v", this.Choice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Akar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Akar{`,
		`Akar:` + fmt.Sprintf("%v", this.Akar) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ares) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ares{`,
		`Ares:` + fmt.Sprintf("%v", this.Ares) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Asterix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Asterix{`,
		`Asterix:` + fmt.Sprintf("%v", this.Asterix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Athena) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Athena{`,
		`Athena:` + fmt.Sprintf("%v", this.Athena) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Automatix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Automatix{`,
		`Automatix:` + fmt.Sprintf("%v", this.Automatix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Barracute) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Barracute{`,
		`Barracute:` + fmt.Sprintf("%v", this.Barracute) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Blindfold) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Blindfold{`,
		`Blindfold:` + fmt.Sprintf("%v", this.Blindfold) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Bolt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Bolt{`,
		`Bolt:` + fmt.Sprintf("%v", this.Bolt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Charmander) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Charmander{`,
		`Charmander:` + fmt.Sprintf("%v", this.Charmander) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Charmandercar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Charmandercar{`,
		`Charmandercar:` + fmt.Sprintf("%v", this.Charmandercar) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Drogon) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Drogon{`,
		`Drogon:` + fmt.Sprintf("%v", this.Drogon) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Eywa) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Eywa{`,
		`Eywa:` + fmt.Sprintf("%v", this.Eywa) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Griffin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Griffin{`,
		`Griffin:` + fmt.Sprintf("%v", this.Griffin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Identityauthority) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Identityauthority{`,
		`Identityauthority:` + fmt.Sprintf("%v", this.Identityauthority) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Keypr) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Keypr{`,
		`Keypr:` + fmt.Sprintf("%v", this.Keypr) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Maurice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Maurice{`,
		`Maurice:` + fmt.Sprintf("%v", this.Maurice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Obelix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Obelix{`,
		`Obelix:` + fmt.Sprintf("%v", this.Obelix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ocspmule) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ocspmule{`,
		`Ocspmule:` + fmt.Sprintf("%v", this.Ocspmule) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Opera) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Opera{`,
		`Opera:` + fmt.Sprintf("%v", this.Opera) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Pikachu) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Pikachu{`,
		`Pikachu:` + fmt.Sprintf("%v", this.Pikachu) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Pkifactory) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Pkifactory{`,
		`Pkifactory:` + fmt.Sprintf("%v", this.Pkifactory) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Rakar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Rakar{`,
		`Rakar:` + fmt.Sprintf("%v", this.Rakar) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_SiteConsole) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_SiteConsole{`,
		`SiteConsole:` + fmt.Sprintf("%v", this.SiteConsole) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Vega) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Vega{`,
		`Vega:` + fmt.Sprintf("%v", this.Vega) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Voucher) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Voucher{`,
		`Voucher:` + fmt.Sprintf("%v", this.Voucher) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Vpm) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Vpm{`,
		`Vpm:` + fmt.Sprintf("%v", this.Vpm) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Vulpix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Vulpix{`,
		`Vulpix:` + fmt.Sprintf("%v", this.Vulpix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Warden) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Warden{`,
		`Warden:` + fmt.Sprintf("%v", this.Warden) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Wingman) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Wingman{`,
		`Wingman:` + fmt.Sprintf("%v", this.Wingman) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Shape) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Shape{`,
		`Shape:` + fmt.Sprintf("%v", this.Shape) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Hellas) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Hellas{`,
		`Hellas:` + fmt.Sprintf("%v", this.Hellas) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Nfvsvc) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Nfvsvc{`,
		`Nfvsvc:` + fmt.Sprintf("%v", this.Nfvsvc) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Scim) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Scim{`,
		`Scim:` + fmt.Sprintf("%v", this.Scim) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_LilacEdge) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_LilacEdge{`,
		`LilacEdge:` + fmt.Sprintf("%v", this.LilacEdge) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Doscontroller) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Doscontroller{`,
		`Doscontroller:` + fmt.Sprintf("%v", this.Doscontroller) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringAllServices(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ServiceChoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAllServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceChoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceChoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Akar", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Akar{b}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ares", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ares{b}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asterix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Asterix{b}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Athena", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Athena{b}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Automatix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Automatix{b}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Barracute", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Barracute{b}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blindfold", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Blindfold{b}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bolt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Bolt{b}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Charmander", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Charmander{b}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Charmandercar", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Charmandercar{b}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Drogon", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Drogon{b}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Eywa", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Eywa{b}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Griffin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Griffin{b}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identityauthority", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Identityauthority{b}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keypr", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Keypr{b}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Maurice", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Maurice{b}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Obelix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Obelix{b}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ocspmule", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ocspmule{b}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opera", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Opera{b}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pikachu", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Pikachu{b}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pkifactory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Pkifactory{b}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rakar", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Rakar{b}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteConsole", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_SiteConsole{b}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vega", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Vega{b}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Voucher", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Voucher{b}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vpm", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Vpm{b}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vulpix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Vulpix{b}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Warden", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Warden{b}
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wingman", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Wingman{b}
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shape", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Shape{b}
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hellas", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Hellas{b}
		case 34:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nfvsvc", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Nfvsvc{b}
		case 35:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scim", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Scim{b}
		case 36:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LilacEdge", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_LilacEdge{b}
		case 37:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Doscontroller", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Doscontroller{b}
		default:
			iNdEx = preIndex
			skippy, err := skipAllServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAllServices
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAllServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAllServices(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAllServices
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAllServices
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAllServices
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAllServices
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAllServices        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAllServices          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAllServices = fmt.Errorf("proto: unexpected end of group")
)
