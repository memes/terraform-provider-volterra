// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/views/api_definition/public_apiep_customapi.proto

// api_definition object
//
// x-displayName: "API Definition"
// The api_definition construct provides a mechanism to create api_groups based on referred OpenAPI specs.
// Default api_groups, which are built automatically, include a group containing all the operations specified in swaggers; a group defining all possible requests for the given base urls.
// In addition, we create default api-groups by a predefined OpenAPI extension, for example  x-volterra-apigroup. http_loadbalancer can refer api_definition object and create access policy rules based on its api-groups.
//

package api_definition

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Get API Endpoints Schema Request
//
// x-displayName: "Get API Endpoints Schema Request"
// Request shape for Get API Endpoints With Newly Discovered Schema
type GetAPIEndpointsSchemaReq struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// The namespace of the API Definition for the current request
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name
	//
	// x-displayName: "Name"
	// x-example: "name"
	// The name of the API Definition for the current request
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *GetAPIEndpointsSchemaReq) Reset()      { *m = GetAPIEndpointsSchemaReq{} }
func (*GetAPIEndpointsSchemaReq) ProtoMessage() {}
func (*GetAPIEndpointsSchemaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_984a6f975e1e6c73, []int{0}
}
func (m *GetAPIEndpointsSchemaReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAPIEndpointsSchemaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAPIEndpointsSchemaReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAPIEndpointsSchemaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAPIEndpointsSchemaReq.Merge(m, src)
}
func (m *GetAPIEndpointsSchemaReq) XXX_Size() int {
	return m.Size()
}
func (m *GetAPIEndpointsSchemaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAPIEndpointsSchemaReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAPIEndpointsSchemaReq proto.InternalMessageInfo

func (m *GetAPIEndpointsSchemaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetAPIEndpointsSchemaReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Get API Endpoints Schema Response
//
// x-displayName: "Get API Endpoints Schema Response"
// Response shape for Get API Endpoints With Newly Discovered Schema
type GetAPIEndpointsSchemaResp struct {
	// API Endpoints
	//
	// x-displayName: "API Endpoints"
	// The list of discovered API endpoints with newly discovered schema.
	ApiEndpoints []*ApiOperation `protobuf:"bytes,1,rep,name=api_endpoints,json=apiEndpoints,proto3" json:"api_endpoints,omitempty"`
}

func (m *GetAPIEndpointsSchemaResp) Reset()      { *m = GetAPIEndpointsSchemaResp{} }
func (*GetAPIEndpointsSchemaResp) ProtoMessage() {}
func (*GetAPIEndpointsSchemaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_984a6f975e1e6c73, []int{1}
}
func (m *GetAPIEndpointsSchemaResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAPIEndpointsSchemaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAPIEndpointsSchemaResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAPIEndpointsSchemaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAPIEndpointsSchemaResp.Merge(m, src)
}
func (m *GetAPIEndpointsSchemaResp) XXX_Size() int {
	return m.Size()
}
func (m *GetAPIEndpointsSchemaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAPIEndpointsSchemaResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAPIEndpointsSchemaResp proto.InternalMessageInfo

func (m *GetAPIEndpointsSchemaResp) GetApiEndpoints() []*ApiOperation {
	if m != nil {
		return m.ApiEndpoints
	}
	return nil
}

// Update API Endpoints Schema Request
//
// x-displayName: "Update API Endpoints Schema Request"
// Request shape for Update API Endpoints With Newly Discovered Schema
type UpdateAPIEndpointsSchemaReq struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// The namespace of the API Definition for the current request
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name
	//
	// x-displayName: "Name"
	// x-example: "name"
	// The name of the API Definition for the current request
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// API Endpoints
	//
	// x-displayName: "API Endpoints"
	// x-required
	// The list of discovered API endpoint to update schema for.
	ApiEndpoints []*ApiOperation `protobuf:"bytes,3,rep,name=api_endpoints,json=apiEndpoints,proto3" json:"api_endpoints,omitempty"`
}

func (m *UpdateAPIEndpointsSchemaReq) Reset()      { *m = UpdateAPIEndpointsSchemaReq{} }
func (*UpdateAPIEndpointsSchemaReq) ProtoMessage() {}
func (*UpdateAPIEndpointsSchemaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_984a6f975e1e6c73, []int{2}
}
func (m *UpdateAPIEndpointsSchemaReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateAPIEndpointsSchemaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateAPIEndpointsSchemaReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateAPIEndpointsSchemaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAPIEndpointsSchemaReq.Merge(m, src)
}
func (m *UpdateAPIEndpointsSchemaReq) XXX_Size() int {
	return m.Size()
}
func (m *UpdateAPIEndpointsSchemaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAPIEndpointsSchemaReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAPIEndpointsSchemaReq proto.InternalMessageInfo

func (m *UpdateAPIEndpointsSchemaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateAPIEndpointsSchemaReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateAPIEndpointsSchemaReq) GetApiEndpoints() []*ApiOperation {
	if m != nil {
		return m.ApiEndpoints
	}
	return nil
}

// Update API Endpoints Schema Response
//
// x-displayName: "Update API Endpoints Schema Response"
// Response shape for Update API Endpoints With Newly Discovered Schema
type UpdateAPIEndpointsSchemaResp struct {
}

func (m *UpdateAPIEndpointsSchemaResp) Reset()      { *m = UpdateAPIEndpointsSchemaResp{} }
func (*UpdateAPIEndpointsSchemaResp) ProtoMessage() {}
func (*UpdateAPIEndpointsSchemaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_984a6f975e1e6c73, []int{3}
}
func (m *UpdateAPIEndpointsSchemaResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateAPIEndpointsSchemaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateAPIEndpointsSchemaResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateAPIEndpointsSchemaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAPIEndpointsSchemaResp.Merge(m, src)
}
func (m *UpdateAPIEndpointsSchemaResp) XXX_Size() int {
	return m.Size()
}
func (m *UpdateAPIEndpointsSchemaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAPIEndpointsSchemaResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAPIEndpointsSchemaResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetAPIEndpointsSchemaReq)(nil), "ves.io.schema.views.api_definition.GetAPIEndpointsSchemaReq")
	golang_proto.RegisterType((*GetAPIEndpointsSchemaReq)(nil), "ves.io.schema.views.api_definition.GetAPIEndpointsSchemaReq")
	proto.RegisterType((*GetAPIEndpointsSchemaResp)(nil), "ves.io.schema.views.api_definition.GetAPIEndpointsSchemaResp")
	golang_proto.RegisterType((*GetAPIEndpointsSchemaResp)(nil), "ves.io.schema.views.api_definition.GetAPIEndpointsSchemaResp")
	proto.RegisterType((*UpdateAPIEndpointsSchemaReq)(nil), "ves.io.schema.views.api_definition.UpdateAPIEndpointsSchemaReq")
	golang_proto.RegisterType((*UpdateAPIEndpointsSchemaReq)(nil), "ves.io.schema.views.api_definition.UpdateAPIEndpointsSchemaReq")
	proto.RegisterType((*UpdateAPIEndpointsSchemaResp)(nil), "ves.io.schema.views.api_definition.UpdateAPIEndpointsSchemaResp")
	golang_proto.RegisterType((*UpdateAPIEndpointsSchemaResp)(nil), "ves.io.schema.views.api_definition.UpdateAPIEndpointsSchemaResp")
}

func init() {
	proto.RegisterFile("ves.io/schema/views/api_definition/public_apiep_customapi.proto", fileDescriptor_984a6f975e1e6c73)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/views/api_definition/public_apiep_customapi.proto", fileDescriptor_984a6f975e1e6c73)
}

var fileDescriptor_984a6f975e1e6c73 = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x4f, 0x6b, 0x13, 0x4f,
	0x18, 0xc7, 0x33, 0x49, 0x7f, 0x7f, 0xba, 0xbf, 0xfe, 0x40, 0x16, 0x0f, 0x31, 0x0d, 0x43, 0xd9,
	0x53, 0xfd, 0xb3, 0xbb, 0xa5, 0xfe, 0x03, 0x51, 0x6a, 0xaa, 0x22, 0x05, 0xb1, 0xa5, 0x52, 0x94,
	0x22, 0x84, 0xc9, 0xee, 0x93, 0xed, 0x68, 0xb2, 0x33, 0xee, 0x4c, 0x36, 0x0d, 0x22, 0x48, 0x5f,
	0x81, 0xd4, 0xb3, 0xe0, 0xd1, 0x17, 0xe0, 0x41, 0xec, 0xa5, 0x37, 0x8b, 0x07, 0x09, 0x7a, 0xe9,
	0xd1, 0x6e, 0x3c, 0xe8, 0xc9, 0xbe, 0x04, 0xd9, 0xc9, 0x26, 0xda, 0xd5, 0xd4, 0x60, 0xf5, 0xf6,
	0xcc, 0x7c, 0xf7, 0xf9, 0xee, 0xf3, 0x7c, 0xe6, 0x99, 0xd1, 0x66, 0x42, 0x10, 0x16, 0x65, 0xb6,
	0x70, 0x56, 0xa0, 0x4e, 0xec, 0x90, 0x42, 0x53, 0xd8, 0x84, 0xd3, 0xb2, 0x0b, 0x55, 0xea, 0x53,
	0x49, 0x99, 0x6f, 0xf3, 0x46, 0xa5, 0x46, 0x9d, 0x32, 0xe1, 0x14, 0x78, 0xd9, 0x69, 0x08, 0xc9,
	0xea, 0x84, 0x53, 0x8b, 0x07, 0x4c, 0x32, 0xdd, 0xe8, 0x1a, 0x58, 0x5d, 0x03, 0x4b, 0x19, 0x58,
	0x7b, 0x0d, 0x0a, 0xa6, 0x47, 0xe5, 0x4a, 0xa3, 0x62, 0x39, 0xac, 0x6e, 0x7b, 0xcc, 0x63, 0xb6,
	0x4a, 0xad, 0x34, 0xaa, 0x6a, 0xa5, 0x16, 0x2a, 0xea, 0x5a, 0x16, 0x8a, 0x1e, 0x63, 0x5e, 0x0d,
	0xe2, 0x32, 0x6c, 0xe2, 0xfb, 0x4c, 0x92, 0xd8, 0x45, 0x24, 0xea, 0x78, 0xa2, 0xf6, 0x3d, 0xa0,
	0xce, 0x65, 0xab, 0x27, 0xee, 0x6d, 0x87, 0xf1, 0x6f, 0x33, 0x8b, 0xa9, 0x5e, 0x49, 0x8d, 0xba,
	0x44, 0x42, 0xa2, 0x1a, 0x29, 0x15, 0x04, 0xf8, 0x61, 0xca, 0xc1, 0x1a, 0x82, 0x96, 0x6c, 0x71,
	0x48, 0xbe, 0x37, 0xae, 0x69, 0xf9, 0xab, 0x20, 0x4b, 0x0b, 0x73, 0x57, 0x7c, 0x97, 0x33, 0xea,
	0x4b, 0x71, 0x43, 0x65, 0x2e, 0xc2, 0x3d, 0xbd, 0xa8, 0x8d, 0xfa, 0xa4, 0x0e, 0x82, 0x13, 0x07,
	0xf2, 0x68, 0x02, 0x4d, 0x8e, 0x2e, 0x7e, 0xdd, 0xd0, 0x75, 0x6d, 0x24, 0x5e, 0xe4, 0xb3, 0x4a,
	0x50, 0xb1, 0x11, 0x68, 0x47, 0x06, 0xb8, 0x09, 0xae, 0x2f, 0x69, 0xff, 0xc7, 0x85, 0x40, 0x4f,
	0xca, 0xa3, 0x89, 0xdc, 0xe4, 0x7f, 0xd3, 0x53, 0xd6, 0xcf, 0xcf, 0xc7, 0x2a, 0x71, 0x3a, 0xcf,
	0x21, 0x50, 0x98, 0x17, 0xc7, 0x08, 0xa7, 0xfd, 0x1f, 0x18, 0xcf, 0x91, 0x36, 0xbe, 0xc4, 0x63,
	0x4c, 0xbf, 0xa9, 0x0b, 0xdd, 0x49, 0x17, 0x9a, 0xfb, 0xb5, 0x42, 0x67, 0xc7, 0x5e, 0x7e, 0xda,
	0xcc, 0xfd, 0xb3, 0x8e, 0x46, 0xfe, 0x45, 0x87, 0xdc, 0x54, 0xd9, 0x58, 0x2b, 0x0e, 0xae, 0x5a,
	0xf0, 0xe9, 0xcf, 0x7f, 0x69, 0x87, 0x17, 0xd4, 0x58, 0x97, 0xe2, 0xa9, 0xbe, 0xa4, 0x86, 0xba,
	0xb4, 0x30, 0xa7, 0xbf, 0xce, 0x6a, 0x93, 0x29, 0xc8, 0x37, 0xa9, 0x5c, 0xb9, 0x0e, 0xcd, 0x5a,
	0xeb, 0x32, 0x15, 0x0e, 0x0b, 0x21, 0x00, 0xb7, 0xeb, 0xa4, 0x9f, 0x1f, 0xa6, 0xe6, 0x41, 0x03,
	0x50, 0xb8, 0x70, 0x80, 0x6c, 0xc1, 0x8d, 0xa7, 0x68, 0xeb, 0x45, 0x16, 0x45, 0xaf, 0xf2, 0x67,
	0xaa, 0xa7, 0x57, 0x1d, 0xb3, 0x49, 0x08, 0x37, 0x89, 0x1b, 0x12, 0xdf, 0x01, 0xd7, 0xac, 0x33,
	0x9f, 0x4a, 0x16, 0x9c, 0x98, 0x08, 0x41, 0x98, 0x94, 0x99, 0x3c, 0x60, 0xab, 0x2d, 0x53, 0x80,
	0xd3, 0x08, 0xa8, 0x6c, 0x99, 0x01, 0x10, 0x77, 0xed, 0xdd, 0x87, 0xc7, 0xd9, 0xdb, 0xfa, 0x72,
	0x72, 0xbd, 0xed, 0xfe, 0xa9, 0x09, 0xfb, 0x7e, 0x3f, 0x7e, 0x90, 0x9a, 0xee, 0x44, 0xeb, 0x6e,
	0x53, 0x3f, 0x04, 0x5f, 0xb2, 0xa0, 0xd5, 0xbb, 0x0f, 0x3e, 0x34, 0xcb, 0x6e, 0x02, 0x89, 0x82,
	0xd0, 0xdb, 0x59, 0xed, 0xf8, 0xf7, 0xc7, 0x30, 0x98, 0xe7, 0xcc, 0x30, 0x44, 0xf6, 0x99, 0xc6,
	0xc2, 0xc5, 0x83, 0x19, 0x08, 0x6e, 0x3c, 0x89, 0x89, 0x9e, 0xfa, 0x01, 0xd1, 0x86, 0x80, 0x81,
	0x38, 0x9b, 0x01, 0x95, 0xa0, 0x78, 0x96, 0x8d, 0x3f, 0xc8, 0xf3, 0x1c, 0x3a, 0x56, 0x38, 0xbb,
	0xb9, 0x81, 0x72, 0x6f, 0x37, 0xd0, 0xd1, 0x21, 0x1a, 0x9d, 0xaf, 0xdc, 0x01, 0x47, 0xae, 0xbd,
	0xc9, 0x67, 0xa7, 0xd0, 0xec, 0x3a, 0x6a, 0xef, 0xe0, 0xcc, 0xf6, 0x0e, 0xce, 0xec, 0xee, 0x60,
	0xf4, 0x30, 0xc2, 0xe8, 0x59, 0x84, 0xd1, 0x56, 0x84, 0x51, 0x3b, 0xc2, 0xe8, 0x7d, 0x84, 0xd1,
	0xc7, 0x08, 0x67, 0x76, 0x23, 0x8c, 0x1e, 0x75, 0x70, 0x66, 0xb3, 0x83, 0x51, 0xbb, 0x83, 0x33,
	0xdb, 0x1d, 0x9c, 0x59, 0xbe, 0xe5, 0x31, 0x7e, 0xd7, 0xb3, 0x42, 0x56, 0x93, 0x10, 0x04, 0xc4,
	0x6a, 0x08, 0x5b, 0x05, 0x55, 0x16, 0xd4, 0x63, 0x14, 0x21, 0x75, 0x21, 0x30, 0x7b, 0xb2, 0xcd,
	0x2b, 0x1e, 0xb3, 0x61, 0x55, 0x26, 0x4d, 0xec, 0xf3, 0x56, 0x56, 0xfe, 0x56, 0xcf, 0xe4, 0xc9,
	0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x65, 0xb3, 0x67, 0x86, 0x06, 0x00, 0x00,
}

func (this *GetAPIEndpointsSchemaReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetAPIEndpointsSchemaReq)
	if !ok {
		that2, ok := that.(GetAPIEndpointsSchemaReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	return true
}
func (this *GetAPIEndpointsSchemaResp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetAPIEndpointsSchemaResp)
	if !ok {
		that2, ok := that.(GetAPIEndpointsSchemaResp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ApiEndpoints) != len(that1.ApiEndpoints) {
		return false
	}
	for i := range this.ApiEndpoints {
		if !this.ApiEndpoints[i].Equal(that1.ApiEndpoints[i]) {
			return false
		}
	}
	return true
}
func (this *UpdateAPIEndpointsSchemaReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateAPIEndpointsSchemaReq)
	if !ok {
		that2, ok := that.(UpdateAPIEndpointsSchemaReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if len(this.ApiEndpoints) != len(that1.ApiEndpoints) {
		return false
	}
	for i := range this.ApiEndpoints {
		if !this.ApiEndpoints[i].Equal(that1.ApiEndpoints[i]) {
			return false
		}
	}
	return true
}
func (this *UpdateAPIEndpointsSchemaResp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateAPIEndpointsSchemaResp)
	if !ok {
		that2, ok := that.(UpdateAPIEndpointsSchemaResp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GetAPIEndpointsSchemaReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&api_definition.GetAPIEndpointsSchemaReq{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetAPIEndpointsSchemaResp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&api_definition.GetAPIEndpointsSchemaResp{")
	if this.ApiEndpoints != nil {
		s = append(s, "ApiEndpoints: "+fmt.Sprintf("%#v", this.ApiEndpoints)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateAPIEndpointsSchemaReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&api_definition.UpdateAPIEndpointsSchemaReq{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	if this.ApiEndpoints != nil {
		s = append(s, "ApiEndpoints: "+fmt.Sprintf("%#v", this.ApiEndpoints)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateAPIEndpointsSchemaResp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&api_definition.UpdateAPIEndpointsSchemaResp{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicApiepCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublicApiepCustomAPIClient is the client API for PublicApiepCustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicApiepCustomAPIClient interface {
	// Get API Endpoints With Newly Discovered Schema
	//
	// x-displayName: "Get API Endpoints With Newly Discovered Schema"
	// Get the list API endpoints which have discovered payload schema updates
	// relative to the approved (last time updated by user) schema spec
	// NOTE: the list does not include API endpoints defined in user provided OpenAPI spec files
	GetAPIEndpointsWithNewlyDiscoveredSchema(ctx context.Context, in *GetAPIEndpointsSchemaReq, opts ...grpc.CallOption) (*GetAPIEndpointsSchemaResp, error)
	// Update API Endpoints With Newly Discovered Schema
	//
	// x-displayName: "Update API Endpoints With Newly Discovered Schema"
	// Update the payload schema for the specified endpoints or all pending changes if empty list is provided.
	// NOTE: only API endpoints returned by a call to `GetChangedEndpoints` can be updated.
	UpdateAPIEndpointsWithNewlyDiscoveredSchema(ctx context.Context, in *UpdateAPIEndpointsSchemaReq, opts ...grpc.CallOption) (*UpdateAPIEndpointsSchemaResp, error)
}

type publicApiepCustomAPIClient struct {
	cc *grpc.ClientConn
}

func NewPublicApiepCustomAPIClient(cc *grpc.ClientConn) PublicApiepCustomAPIClient {
	return &publicApiepCustomAPIClient{cc}
}

func (c *publicApiepCustomAPIClient) GetAPIEndpointsWithNewlyDiscoveredSchema(ctx context.Context, in *GetAPIEndpointsSchemaReq, opts ...grpc.CallOption) (*GetAPIEndpointsSchemaResp, error) {
	out := new(GetAPIEndpointsSchemaResp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.views.api_definition.PublicApiepCustomAPI/GetAPIEndpointsWithNewlyDiscoveredSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicApiepCustomAPIClient) UpdateAPIEndpointsWithNewlyDiscoveredSchema(ctx context.Context, in *UpdateAPIEndpointsSchemaReq, opts ...grpc.CallOption) (*UpdateAPIEndpointsSchemaResp, error) {
	out := new(UpdateAPIEndpointsSchemaResp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.views.api_definition.PublicApiepCustomAPI/UpdateAPIEndpointsWithNewlyDiscoveredSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicApiepCustomAPIServer is the server API for PublicApiepCustomAPI service.
type PublicApiepCustomAPIServer interface {
	// Get API Endpoints With Newly Discovered Schema
	//
	// x-displayName: "Get API Endpoints With Newly Discovered Schema"
	// Get the list API endpoints which have discovered payload schema updates
	// relative to the approved (last time updated by user) schema spec
	// NOTE: the list does not include API endpoints defined in user provided OpenAPI spec files
	GetAPIEndpointsWithNewlyDiscoveredSchema(context.Context, *GetAPIEndpointsSchemaReq) (*GetAPIEndpointsSchemaResp, error)
	// Update API Endpoints With Newly Discovered Schema
	//
	// x-displayName: "Update API Endpoints With Newly Discovered Schema"
	// Update the payload schema for the specified endpoints or all pending changes if empty list is provided.
	// NOTE: only API endpoints returned by a call to `GetChangedEndpoints` can be updated.
	UpdateAPIEndpointsWithNewlyDiscoveredSchema(context.Context, *UpdateAPIEndpointsSchemaReq) (*UpdateAPIEndpointsSchemaResp, error)
}

// UnimplementedPublicApiepCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPublicApiepCustomAPIServer struct {
}

func (*UnimplementedPublicApiepCustomAPIServer) GetAPIEndpointsWithNewlyDiscoveredSchema(ctx context.Context, req *GetAPIEndpointsSchemaReq) (*GetAPIEndpointsSchemaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIEndpointsWithNewlyDiscoveredSchema not implemented")
}
func (*UnimplementedPublicApiepCustomAPIServer) UpdateAPIEndpointsWithNewlyDiscoveredSchema(ctx context.Context, req *UpdateAPIEndpointsSchemaReq) (*UpdateAPIEndpointsSchemaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAPIEndpointsWithNewlyDiscoveredSchema not implemented")
}

func RegisterPublicApiepCustomAPIServer(s *grpc.Server, srv PublicApiepCustomAPIServer) {
	s.RegisterService(&_PublicApiepCustomAPI_serviceDesc, srv)
}

func _PublicApiepCustomAPI_GetAPIEndpointsWithNewlyDiscoveredSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAPIEndpointsSchemaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicApiepCustomAPIServer).GetAPIEndpointsWithNewlyDiscoveredSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.views.api_definition.PublicApiepCustomAPI/GetAPIEndpointsWithNewlyDiscoveredSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicApiepCustomAPIServer).GetAPIEndpointsWithNewlyDiscoveredSchema(ctx, req.(*GetAPIEndpointsSchemaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicApiepCustomAPI_UpdateAPIEndpointsWithNewlyDiscoveredSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAPIEndpointsSchemaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicApiepCustomAPIServer).UpdateAPIEndpointsWithNewlyDiscoveredSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.views.api_definition.PublicApiepCustomAPI/UpdateAPIEndpointsWithNewlyDiscoveredSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicApiepCustomAPIServer).UpdateAPIEndpointsWithNewlyDiscoveredSchema(ctx, req.(*UpdateAPIEndpointsSchemaReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicApiepCustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.views.api_definition.PublicApiepCustomAPI",
	HandlerType: (*PublicApiepCustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAPIEndpointsWithNewlyDiscoveredSchema",
			Handler:    _PublicApiepCustomAPI_GetAPIEndpointsWithNewlyDiscoveredSchema_Handler,
		},
		{
			MethodName: "UpdateAPIEndpointsWithNewlyDiscoveredSchema",
			Handler:    _PublicApiepCustomAPI_UpdateAPIEndpointsWithNewlyDiscoveredSchema_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/views/api_definition/public_apiep_customapi.proto",
}

func (m *GetAPIEndpointsSchemaReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAPIEndpointsSchemaReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAPIEndpointsSchemaReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetAPIEndpointsSchemaResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAPIEndpointsSchemaResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAPIEndpointsSchemaResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiEndpoints) > 0 {
		for iNdEx := len(m.ApiEndpoints) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ApiEndpoints[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UpdateAPIEndpointsSchemaReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateAPIEndpointsSchemaReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateAPIEndpointsSchemaReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiEndpoints) > 0 {
		for iNdEx := len(m.ApiEndpoints) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ApiEndpoints[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateAPIEndpointsSchemaResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateAPIEndpointsSchemaResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateAPIEndpointsSchemaResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintPublicApiepCustomapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicApiepCustomapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetAPIEndpointsSchemaReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func (m *GetAPIEndpointsSchemaResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ApiEndpoints) > 0 {
		for _, e := range m.ApiEndpoints {
			l = e.Size()
			n += 1 + l + sovPublicApiepCustomapi(uint64(l))
		}
	}
	return n
}

func (m *UpdateAPIEndpointsSchemaReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	if len(m.ApiEndpoints) > 0 {
		for _, e := range m.ApiEndpoints {
			l = e.Size()
			n += 1 + l + sovPublicApiepCustomapi(uint64(l))
		}
	}
	return n
}

func (m *UpdateAPIEndpointsSchemaResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovPublicApiepCustomapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicApiepCustomapi(x uint64) (n int) {
	return sovPublicApiepCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GetAPIEndpointsSchemaReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetAPIEndpointsSchemaReq{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetAPIEndpointsSchemaResp) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForApiEndpoints := "[]*ApiOperation{"
	for _, f := range this.ApiEndpoints {
		repeatedStringForApiEndpoints += strings.Replace(fmt.Sprintf("%v", f), "ApiOperation", "ApiOperation", 1) + ","
	}
	repeatedStringForApiEndpoints += "}"
	s := strings.Join([]string{`&GetAPIEndpointsSchemaResp{`,
		`ApiEndpoints:` + repeatedStringForApiEndpoints + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateAPIEndpointsSchemaReq) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForApiEndpoints := "[]*ApiOperation{"
	for _, f := range this.ApiEndpoints {
		repeatedStringForApiEndpoints += strings.Replace(fmt.Sprintf("%v", f), "ApiOperation", "ApiOperation", 1) + ","
	}
	repeatedStringForApiEndpoints += "}"
	s := strings.Join([]string{`&UpdateAPIEndpointsSchemaReq{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`ApiEndpoints:` + repeatedStringForApiEndpoints + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateAPIEndpointsSchemaResp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateAPIEndpointsSchemaResp{`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicApiepCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GetAPIEndpointsSchemaReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAPIEndpointsSchemaReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAPIEndpointsSchemaReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAPIEndpointsSchemaResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAPIEndpointsSchemaResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAPIEndpointsSchemaResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpoints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiEndpoints = append(m.ApiEndpoints, &ApiOperation{})
			if err := m.ApiEndpoints[len(m.ApiEndpoints)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateAPIEndpointsSchemaReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateAPIEndpointsSchemaReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateAPIEndpointsSchemaReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpoints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiEndpoints = append(m.ApiEndpoints, &ApiOperation{})
			if err := m.ApiEndpoints[len(m.ApiEndpoints)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateAPIEndpointsSchemaResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateAPIEndpointsSchemaResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateAPIEndpointsSchemaResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicApiepCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicApiepCustomapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicApiepCustomapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicApiepCustomapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicApiepCustomapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicApiepCustomapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicApiepCustomapi = fmt.Errorf("proto: unexpected end of group")
)
