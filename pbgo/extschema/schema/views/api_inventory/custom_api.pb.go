// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/views/api_inventory/custom_api.proto

// api definition object

package api_inventory

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GetPathSuggestionsReq is used to get suggestions of API Endpoint paths
//
// x-displayName: "Get Paths Suggestions Request"
// This is the input message of the 'GetPathSuggestions' RPC
type GetPathSuggestionsReq struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "default"
	// Namespace for the object to be configured
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name
	//
	// x-displayName: "Name"
	// x-example: "all-api"
	// Name of the object to be configured
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// match_value
	//
	// x-displayName: "Match Value"
	// x-example: "some-substring"
	// A substring that must be present in either the value or description of each SuggestedItem in the response.
	MatchValue string `protobuf:"bytes,3,opt,name=match_value,json=matchValue,proto3" json:"match_value,omitempty"`
}

func (m *GetPathSuggestionsReq) Reset()      { *m = GetPathSuggestionsReq{} }
func (*GetPathSuggestionsReq) ProtoMessage() {}
func (*GetPathSuggestionsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dada6645ff1af20, []int{0}
}
func (m *GetPathSuggestionsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPathSuggestionsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPathSuggestionsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPathSuggestionsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPathSuggestionsReq.Merge(m, src)
}
func (m *GetPathSuggestionsReq) XXX_Size() int {
	return m.Size()
}
func (m *GetPathSuggestionsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPathSuggestionsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPathSuggestionsReq proto.InternalMessageInfo

func (m *GetPathSuggestionsReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetPathSuggestionsReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPathSuggestionsReq) GetMatchValue() string {
	if m != nil {
		return m.MatchValue
	}
	return ""
}

func init() {
	proto.RegisterType((*GetPathSuggestionsReq)(nil), "ves.io.schema.views.api_inventory.GetPathSuggestionsReq")
}

func init() {
	proto.RegisterFile("ves.io/schema/views/api_inventory/custom_api.proto", fileDescriptor_2dada6645ff1af20)
}

var fileDescriptor_2dada6645ff1af20 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x41, 0x6b, 0x13, 0x41,
	0x14, 0xc7, 0x77, 0x36, 0x55, 0xe8, 0x7a, 0x91, 0x05, 0x61, 0x8d, 0x71, 0xa8, 0x39, 0x15, 0xa5,
	0x3b, 0x52, 0x41, 0xc4, 0x9b, 0xf5, 0x20, 0x9e, 0x0c, 0x29, 0xa8, 0x78, 0x59, 0x26, 0x9b, 0xe7,
	0x66, 0x34, 0x3b, 0x33, 0xce, 0x4c, 0x46, 0x8b, 0x08, 0xa5, 0x77, 0x41, 0xf0, 0x13, 0x78, 0xf3,
	0x23, 0x88, 0xbd, 0xf4, 0xd8, 0x93, 0x04, 0xf5, 0xd0, 0xa3, 0xd9, 0x78, 0xd0, 0x5b, 0x3f, 0x82,
	0x64, 0x36, 0x89, 0xdd, 0x68, 0xc9, 0xed, 0xed, 0xfc, 0xf8, 0xbf, 0xf7, 0xff, 0x3f, 0xde, 0x06,
	0x9b, 0x16, 0x74, 0xcc, 0x04, 0xd1, 0x69, 0x0f, 0x72, 0x4a, 0x2c, 0x83, 0x97, 0x9a, 0x50, 0xc9,
	0x12, 0xc6, 0x2d, 0x70, 0x23, 0xd4, 0x0e, 0x49, 0x07, 0xda, 0x88, 0x3c, 0xa1, 0x92, 0xc5, 0x52,
	0x09, 0x23, 0xc2, 0x2b, 0xa5, 0x26, 0x2e, 0x35, 0xb1, 0xd3, 0xc4, 0x15, 0x4d, 0xbd, 0x91, 0x09,
	0x91, 0xf5, 0x61, 0xd2, 0x89, 0x50, 0xce, 0x85, 0xa1, 0x86, 0x09, 0xae, 0xcb, 0x06, 0xf5, 0x4b,
	0xd5, 0xa1, 0x42, 0x9e, 0x84, 0x97, 0xab, 0x50, 0x5a, 0x93, 0x98, 0x1d, 0x09, 0x33, 0x7c, 0xb1,
	0x8a, 0x4f, 0xa2, 0xc6, 0x42, 0x16, 0xda, 0x67, 0x5d, 0x6a, 0x60, 0x4a, 0x9b, 0x0b, 0x14, 0x34,
	0x70, 0x5b, 0x9d, 0xdd, 0xb4, 0xc1, 0x85, 0x7b, 0x60, 0x5a, 0xd4, 0xf4, 0xb6, 0x07, 0x59, 0x06,
	0xda, 0xb1, 0x36, 0xbc, 0x08, 0x1b, 0xc1, 0x2a, 0xa7, 0x39, 0x68, 0x49, 0x53, 0x88, 0xd0, 0x1a,
	0x5a, 0x5f, 0x6d, 0xff, 0x7d, 0x08, 0xc3, 0x60, 0x65, 0xf2, 0x11, 0xf9, 0x0e, 0xb8, 0x3a, 0xbc,
	0x16, 0x9c, 0xcb, 0xa9, 0x49, 0x7b, 0x89, 0xa5, 0xfd, 0x01, 0x44, 0xb5, 0x09, 0xda, 0x0a, 0x3e,
	0xff, 0x3e, 0xa8, 0x9d, 0x51, 0xb5, 0x68, 0xd7, 0x6f, 0x07, 0x0e, 0x3f, 0x9c, 0xd0, 0xcd, 0x0f,
	0x7e, 0x70, 0xfe, 0xae, 0x5b, 0xf3, 0x9d, 0xd6, 0xfd, 0x96, 0x62, 0x96, 0x1a, 0x08, 0xbf, 0xa3,
	0x20, 0xfc, 0xd7, 0x4d, 0x78, 0x2b, 0x5e, 0xba, 0xfe, 0xf8, 0xbf, 0x21, 0xea, 0x6b, 0x0b, 0xca,
	0x29, 0x76, 0x16, 0x74, 0x1b, 0xb4, 0x6c, 0x76, 0x0e, 0x3f, 0xf9, 0x68, 0xef, 0xdb, 0xcf, 0xf7,
	0xfe, 0xe3, 0xe6, 0x36, 0x91, 0xa5, 0x11, 0x32, 0x0f, 0xaa, 0xc9, 0xeb, 0x79, 0xfd, 0xa6, 0x72,
	0x25, 0x6c, 0xc6, 0xca, 0x67, 0xe0, 0x5d, 0x29, 0x18, 0x37, 0x89, 0xa4, 0xa6, 0x47, 0xf4, 0xdc,
	0xc6, 0x6d, 0x74, 0xb5, 0x7e, 0xf3, 0x60, 0x1f, 0xad, 0x7c, 0xdd, 0x47, 0xeb, 0xcb, 0x63, 0x3c,
	0xe8, 0x3c, 0x83, 0xd4, 0xec, 0x7d, 0x89, 0xfc, 0xeb, 0x68, 0xeb, 0x2d, 0x1a, 0x8e, 0xb0, 0x77,
	0x34, 0xc2, 0xde, 0xf1, 0x08, 0xa3, 0xdd, 0x02, 0xa3, 0x8f, 0x05, 0x46, 0x87, 0x05, 0x46, 0xc3,
	0x02, 0xa3, 0x1f, 0x05, 0x46, 0xbf, 0x0a, 0xec, 0x1d, 0x17, 0x18, 0xbd, 0x1b, 0x63, 0x6f, 0x38,
	0xc6, 0xde, 0xd1, 0x18, 0x7b, 0x4f, 0x1e, 0x65, 0x42, 0x3e, 0xcf, 0x62, 0x2b, 0xfa, 0x06, 0x94,
	0xa2, 0xf1, 0x40, 0x13, 0x57, 0x3c, 0x15, 0x2a, 0xdf, 0x90, 0x4a, 0x58, 0xd6, 0x05, 0xb5, 0x31,
	0xc3, 0x44, 0x76, 0x32, 0x41, 0xe0, 0x95, 0x99, 0x5e, 0xc9, 0xe9, 0xbf, 0x45, 0xe7, 0xac, 0x3b,
	0x99, 0x1b, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x53, 0x50, 0x78, 0x42, 0x03, 0x00, 0x00,
}

func (this *GetPathSuggestionsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPathSuggestionsReq)
	if !ok {
		that2, ok := that.(GetPathSuggestionsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.MatchValue != that1.MatchValue {
		return false
	}
	return true
}
func (this *GetPathSuggestionsReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&api_inventory.GetPathSuggestionsReq{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "MatchValue: "+fmt.Sprintf("%#v", this.MatchValue)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringCustomApi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomAPIPrivateClient is the client API for CustomAPIPrivate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomAPIPrivateClient interface {
	// Get path suggestions
	//
	// x-displayName: "Get Path Suggestions"
	// Get the suggestions for API Endpoint paths
	GetPathSuggestions(ctx context.Context, in *GetPathSuggestionsReq, opts ...grpc.CallOption) (*schema.SuggestValuesResp, error)
}

type customAPIPrivateClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIPrivateClient(cc *grpc.ClientConn) CustomAPIPrivateClient {
	return &customAPIPrivateClient{cc}
}

func (c *customAPIPrivateClient) GetPathSuggestions(ctx context.Context, in *GetPathSuggestionsReq, opts ...grpc.CallOption) (*schema.SuggestValuesResp, error) {
	out := new(schema.SuggestValuesResp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.views.api_inventory.CustomAPIPrivate/GetPathSuggestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomAPIPrivateServer is the server API for CustomAPIPrivate service.
type CustomAPIPrivateServer interface {
	// Get path suggestions
	//
	// x-displayName: "Get Path Suggestions"
	// Get the suggestions for API Endpoint paths
	GetPathSuggestions(context.Context, *GetPathSuggestionsReq) (*schema.SuggestValuesResp, error)
}

// UnimplementedCustomAPIPrivateServer can be embedded to have forward compatible implementations.
type UnimplementedCustomAPIPrivateServer struct {
}

func (*UnimplementedCustomAPIPrivateServer) GetPathSuggestions(ctx context.Context, req *GetPathSuggestionsReq) (*schema.SuggestValuesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPathSuggestions not implemented")
}

func RegisterCustomAPIPrivateServer(s *grpc.Server, srv CustomAPIPrivateServer) {
	s.RegisterService(&_CustomAPIPrivate_serviceDesc, srv)
}

func _CustomAPIPrivate_GetPathSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPathSuggestionsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIPrivateServer).GetPathSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.views.api_inventory.CustomAPIPrivate/GetPathSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIPrivateServer).GetPathSuggestions(ctx, req.(*GetPathSuggestionsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPIPrivate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.views.api_inventory.CustomAPIPrivate",
	HandlerType: (*CustomAPIPrivateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPathSuggestions",
			Handler:    _CustomAPIPrivate_GetPathSuggestions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/views/api_inventory/custom_api.proto",
}

func (m *GetPathSuggestionsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPathSuggestionsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPathSuggestionsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MatchValue) > 0 {
		i -= len(m.MatchValue)
		copy(dAtA[i:], m.MatchValue)
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.MatchValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCustomApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovCustomApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetPathSuggestionsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.MatchValue)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func sovCustomApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCustomApi(x uint64) (n int) {
	return sovCustomApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GetPathSuggestionsReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPathSuggestionsReq{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`MatchValue:` + fmt.Sprintf("%v", this.MatchValue) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringCustomApi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GetPathSuggestionsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPathSuggestionsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPathSuggestionsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MatchValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCustomApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCustomApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCustomApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCustomApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCustomApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCustomApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCustomApi = fmt.Errorf("proto: unexpected end of group")
)
