// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/app_type/public_custom_api.proto

// app type object
//
// x-displayName: "App Type"
// App Type object defines a application profile type from an advanced monitoring/security point of view.
// An App type is a set of (micro) services that interact with one another and function as an application.
// Services can be made members of a particular AppType set by adding label ves.io/app_type=app_type.metadata.name to services.
// App type object is the profile for one such application label. One can define various AI/ML features that can
// be enabled for a given application in this object. All services in a given namespace that are labeled with
// same ves.io/app_type label are assumed to be a single application. In a different namespace as two different
// instances of same application.
// app_type object is recommended per tenant and present only in shared namespace.
// This way AI/ML modelled developed for a given application can be shared across namespaces or deployments.
// app_setting object can be used to enable a app_type monitoring profile in a given namespace.

package app_type

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// API endpoints GET request
//
// x-displayName: "API Endpoints Request"
// Request shape for GET API endpoints API
type APIEndpointsReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Api Endpoint Info Request
	//
	// x-displayName: "Api Endpoint Info Request"
	// List of additional things that needs to be sent as part of the request
	ApiEndpointInfoRequest []ApiEndpointInfoRequest `protobuf:"varint,3,rep,packed,name=api_endpoint_info_request,json=apiEndpointInfoRequest,proto3,enum=ves.io.schema.app_type.ApiEndpointInfoRequest" json:"api_endpoint_info_request,omitempty"`
}

func (m *APIEndpointsReq) Reset()      { *m = APIEndpointsReq{} }
func (*APIEndpointsReq) ProtoMessage() {}
func (*APIEndpointsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{0}
}
func (m *APIEndpointsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointsReq.Merge(m, src)
}
func (m *APIEndpointsReq) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointsReq.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointsReq proto.InternalMessageInfo

func (m *APIEndpointsReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *APIEndpointsReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointsReq) GetApiEndpointInfoRequest() []ApiEndpointInfoRequest {
	if m != nil {
		return m.ApiEndpointInfoRequest
	}
	return nil
}

// Swagger spec request
//
// x-displayName: "Swagger spec Request"
// Request shape for GET Swagger Spec API
type SwaggerSpecReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *SwaggerSpecReq) Reset()      { *m = SwaggerSpecReq{} }
func (*SwaggerSpecReq) ProtoMessage() {}
func (*SwaggerSpecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{1}
}
func (m *SwaggerSpecReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SwaggerSpecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SwaggerSpecReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SwaggerSpecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwaggerSpecReq.Merge(m, src)
}
func (m *SwaggerSpecReq) XXX_Size() int {
	return m.Size()
}
func (m *SwaggerSpecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SwaggerSpecReq.DiscardUnknown(m)
}

var xxx_messageInfo_SwaggerSpecReq proto.InternalMessageInfo

func (m *SwaggerSpecReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *SwaggerSpecReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// API endpoint PDF request
//
// x-displayName: "PDF Request"
// shape of request to get PDF for a given API endpoint.
type SwaggerSpecRsp struct {
	// Swagger Spec
	//
	// x-displayName: "Swagger Spec"
	// x-example: "{\"info\": {\"description\": \"\",\"title\": \"\",\"version\": \"\"},\"paths\": {\"\/api\/Addresss\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"query\",\"name\": \"test1\",\"type\": \"string\"},{\"description\": \"\",\"in\": \"query\",\"items\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"name\": \"test\",\"type\": \"array\"},{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"country\\\": \\\"dummy\\\", \\\"fullName\\\": \\\"dummy\\\", \\\"mobileNum\\\": 1234567890, \\\"zipCode\\\": \\\"121\\\", \\\"streetAddress\\\": \\\"dummy\\\", \\\"city\\\": \\\"dummy\\\", \\\"state\\\": \\\"dummy\\\", \\\"test\\\": \\\"Hello, \\\\u4e16\\\\u754c\\\", \\\"abc\\\": \\\"def\\\"}\"],\"properties\": {\"abc\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"city\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"country\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"mobileNum\": {\"type\": \"integer\"},\"state\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"streetAddress\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"},\"zipCode\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"fullName\",\"mobileNum\",\"city\",\"test\",\"zipCode\",\"state\",\"streetAddress\",\"country\",\"abc\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/api\/Cards\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"fullName\\\": \\\"dummy\\\", \\\"cardNum\\\": 0, \\\"expMonth\\\": \\\"0\\\", \\\"expYear\\\": \\\"0\\\"}\"],\"properties\": {\"cardNum\": {\"type\": \"integer\"},\"expMonth\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"expYear\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"}},\"required\": [\"expMonth\",\"expYear\",\"fullName\",\"cardNum\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/basket\/6\/checkout\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9792\\\", \\\"addressId\\\": \\\"21189\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9814\\\", \\\"addressId\\\": \\\"21409\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9822\\\", \\\"addressId\\\": \\\"21489\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9793\\\", \\\"addressId\\\": \\\"21199\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9817\\\", \\\"addressId\\\": \\\"21439\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\"],\"properties\": {\"couponData\": {\"type\": \"string\"},\"orderDetails\": {\"properties\": {\"addressId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"deliveryMethodId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"paymentId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"addressId\",\"paymentId\",\"deliveryMethodId\"],\"type\": \"object\"}},\"required\": [\"orderDetails\",\"couponData\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/products\/1\/reviews\": {\"put\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/user\/login\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"email\\\":\\\"dummy0@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy1@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy2@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy3@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\"],\"properties\": {\"email\": {\"description\": \"Email\",\"pattern\": \".+@.+\",\"type\": \"string\",\"x-pii\": {\"examples\": [\"dummy0@dummy.com\",\"dummy1@dummy.com\",\"dummy2@dummy.com\",\"dummy3@dummy.com\"]}},\"password\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"}},\"required\": [\"email\",\"test\",\"password\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}}},\"schemes\": [\"https\",\"http\"],\"swagger\": \"2.0\"}"
	// Swagger spec json encoded string for current request
	SwaggerSpec string `protobuf:"bytes,1,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
}

func (m *SwaggerSpecRsp) Reset()      { *m = SwaggerSpecRsp{} }
func (*SwaggerSpecRsp) ProtoMessage() {}
func (*SwaggerSpecRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{2}
}
func (m *SwaggerSpecRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SwaggerSpecRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SwaggerSpecRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SwaggerSpecRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwaggerSpecRsp.Merge(m, src)
}
func (m *SwaggerSpecRsp) XXX_Size() int {
	return m.Size()
}
func (m *SwaggerSpecRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SwaggerSpecRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SwaggerSpecRsp proto.InternalMessageInfo

func (m *SwaggerSpecRsp) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

// API endpoints per service GET request
//
// x-displayName: "Service API Endpoints Request"
// Request shape for GET Service API endpoints API
type ServiceAPIEndpointsReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Service
	//
	// x-displayName: "Service Name"
	// x-example: "N:public or S:productpage"
	// Identifies the destination service
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Api Endpoint Info Request
	//
	// x-displayName: "Api Endpoint Info Request"
	// List of additional things that needs to be sent as part of the request
	ApiEndpointInfoRequest []ApiEndpointInfoRequest `protobuf:"varint,4,rep,packed,name=api_endpoint_info_request,json=apiEndpointInfoRequest,proto3,enum=ves.io.schema.app_type.ApiEndpointInfoRequest" json:"api_endpoint_info_request,omitempty"`
}

func (m *ServiceAPIEndpointsReq) Reset()      { *m = ServiceAPIEndpointsReq{} }
func (*ServiceAPIEndpointsReq) ProtoMessage() {}
func (*ServiceAPIEndpointsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{3}
}
func (m *ServiceAPIEndpointsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServiceAPIEndpointsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServiceAPIEndpointsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServiceAPIEndpointsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAPIEndpointsReq.Merge(m, src)
}
func (m *ServiceAPIEndpointsReq) XXX_Size() int {
	return m.Size()
}
func (m *ServiceAPIEndpointsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAPIEndpointsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAPIEndpointsReq proto.InternalMessageInfo

func (m *ServiceAPIEndpointsReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *ServiceAPIEndpointsReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ServiceAPIEndpointsReq) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceAPIEndpointsReq) GetApiEndpointInfoRequest() []ApiEndpointInfoRequest {
	if m != nil {
		return m.ApiEndpointInfoRequest
	}
	return nil
}

// API endpoints GET response
//
// x-displayName: "API Endpoints Response"
// Response shape for GET API endpoints API. It is list of API endpoints discovered
type APIEndpointsRsp struct {
	// API endpoints list
	//
	// x-displayName: "API Endpoints"
	// list of API endpoints discovered
	ApiepList []*APIEPInfo `protobuf:"bytes,1,rep,name=apiep_list,json=apiepList,proto3" json:"apiep_list,omitempty"`
}

func (m *APIEndpointsRsp) Reset()      { *m = APIEndpointsRsp{} }
func (*APIEndpointsRsp) ProtoMessage() {}
func (*APIEndpointsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{4}
}
func (m *APIEndpointsRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointsRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointsRsp.Merge(m, src)
}
func (m *APIEndpointsRsp) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointsRsp proto.InternalMessageInfo

func (m *APIEndpointsRsp) GetApiepList() []*APIEPInfo {
	if m != nil {
		return m.ApiepList
	}
	return nil
}

// API endpoint PDF request
//
// x-displayName: "PDF Request"
// shape of request to get PDF for a given API endpoint.
type APIEndpointPDFReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "value"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,3,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "value"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *APIEndpointPDFReq) Reset()      { *m = APIEndpointPDFReq{} }
func (*APIEndpointPDFReq) ProtoMessage() {}
func (*APIEndpointPDFReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{5}
}
func (m *APIEndpointPDFReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointPDFReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointPDFReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointPDFReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointPDFReq.Merge(m, src)
}
func (m *APIEndpointPDFReq) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointPDFReq) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointPDFReq.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointPDFReq proto.InternalMessageInfo

func (m *APIEndpointPDFReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *APIEndpointPDFReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointPDFReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *APIEndpointPDFReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

// Service API endpoint PDF request
//
// x-displayName: "Per Service API Endpoint PDF Request"
// shape of request to get PDF for a given API endpoint.
type ServiceAPIEndpointPDFReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Service
	//
	// x-displayName: "Service Name"
	// x-example: "N:public or S:productpage"
	// Identifies the destination service
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "value"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,4,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "value"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *ServiceAPIEndpointPDFReq) Reset()      { *m = ServiceAPIEndpointPDFReq{} }
func (*ServiceAPIEndpointPDFReq) ProtoMessage() {}
func (*ServiceAPIEndpointPDFReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{6}
}
func (m *ServiceAPIEndpointPDFReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServiceAPIEndpointPDFReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServiceAPIEndpointPDFReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServiceAPIEndpointPDFReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAPIEndpointPDFReq.Merge(m, src)
}
func (m *ServiceAPIEndpointPDFReq) XXX_Size() int {
	return m.Size()
}
func (m *ServiceAPIEndpointPDFReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAPIEndpointPDFReq.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAPIEndpointPDFReq proto.InternalMessageInfo

func (m *ServiceAPIEndpointPDFReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

// API endpoint PDF response
//
// x-displayName: "PDF Response"
// shape of response to get PDF for a given API endpoint.
type APIEndpointPDFRsp struct {
	// PDF data
	//
	// x-displayName: "PDF Data"
	//PDF data for request API endpoint.
	PdfInfo *APIEPPDFInfo `protobuf:"bytes,1,opt,name=pdf_info,json=pdfInfo,proto3" json:"pdf_info,omitempty"`
}

func (m *APIEndpointPDFRsp) Reset()      { *m = APIEndpointPDFRsp{} }
func (*APIEndpointPDFRsp) ProtoMessage() {}
func (*APIEndpointPDFRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{7}
}
func (m *APIEndpointPDFRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointPDFRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointPDFRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointPDFRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointPDFRsp.Merge(m, src)
}
func (m *APIEndpointPDFRsp) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointPDFRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointPDFRsp.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointPDFRsp proto.InternalMessageInfo

func (m *APIEndpointPDFRsp) GetPdfInfo() *APIEPPDFInfo {
	if m != nil {
		return m.PdfInfo
	}
	return nil
}

// Get API endpoint override request.
//
// x-displayName: "Get Override Request"
// shape of request to get override for API endpoints.
type OverridesReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *OverridesReq) Reset()      { *m = OverridesReq{} }
func (*OverridesReq) ProtoMessage() {}
func (*OverridesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{8}
}
func (m *OverridesReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OverridesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OverridesReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OverridesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OverridesReq.Merge(m, src)
}
func (m *OverridesReq) XXX_Size() int {
	return m.Size()
}
func (m *OverridesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OverridesReq.DiscardUnknown(m)
}

var xxx_messageInfo_OverridesReq proto.InternalMessageInfo

func (m *OverridesReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *OverridesReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Get API endpoint override response
//
// x-displayName: "Get Override Response"
// shape of response to get override for API endpoints
type OverridesRsp struct {
	// List of override
	//
	// x-displayName: "Override"
	// List of all override applied to API endpoints of requested App Type
	OverrideList []*OverrideInfo `protobuf:"bytes,1,rep,name=override_list,json=overrideList,proto3" json:"override_list,omitempty"`
}

func (m *OverridesRsp) Reset()      { *m = OverridesRsp{} }
func (*OverridesRsp) ProtoMessage() {}
func (*OverridesRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{9}
}
func (m *OverridesRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OverridesRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OverridesRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OverridesRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OverridesRsp.Merge(m, src)
}
func (m *OverridesRsp) XXX_Size() int {
	return m.Size()
}
func (m *OverridesRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_OverridesRsp.DiscardUnknown(m)
}

var xxx_messageInfo_OverridesRsp proto.InternalMessageInfo

func (m *OverridesRsp) GetOverrideList() []*OverrideInfo {
	if m != nil {
		return m.OverrideList
	}
	return nil
}

// Add API endpoint override request
//
// x-displayName: "Add Override Request"
// Shape of request to add override for API endpoints
type OverridePushReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Override Data
	//
	// x-displayName: "Override Data"
	// Override data to be added
	OverrideInfo *OverrideInfo `protobuf:"bytes,3,opt,name=override_info,json=overrideInfo,proto3" json:"override_info,omitempty"`
}

func (m *OverridePushReq) Reset()      { *m = OverridePushReq{} }
func (*OverridePushReq) ProtoMessage() {}
func (*OverridePushReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{10}
}
func (m *OverridePushReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OverridePushReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OverridePushReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OverridePushReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OverridePushReq.Merge(m, src)
}
func (m *OverridePushReq) XXX_Size() int {
	return m.Size()
}
func (m *OverridePushReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OverridePushReq.DiscardUnknown(m)
}

var xxx_messageInfo_OverridePushReq proto.InternalMessageInfo

func (m *OverridePushReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *OverridePushReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *OverridePushReq) GetOverrideInfo() *OverrideInfo {
	if m != nil {
		return m.OverrideInfo
	}
	return nil
}

// Add API endpoint override response
//
// x-displayName: "Add Override Response"
// Shape of response to add override for API endpoints
type OverridePushRsp struct {
	// Status
	//
	// x-displayName: "Status"
	// x-example: "true"
	// Status of the add operation (sucess or fail)
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// Message
	//
	// x-displayName: "Message"
	// x-example: "Override Push Successful"
	// Message string for the status of add operation
	StatusMsg string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
}

func (m *OverridePushRsp) Reset()      { *m = OverridePushRsp{} }
func (*OverridePushRsp) ProtoMessage() {}
func (*OverridePushRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{11}
}
func (m *OverridePushRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OverridePushRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OverridePushRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OverridePushRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OverridePushRsp.Merge(m, src)
}
func (m *OverridePushRsp) XXX_Size() int {
	return m.Size()
}
func (m *OverridePushRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_OverridePushRsp.DiscardUnknown(m)
}

var xxx_messageInfo_OverridePushRsp proto.InternalMessageInfo

func (m *OverridePushRsp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *OverridePushRsp) GetStatusMsg() string {
	if m != nil {
		return m.StatusMsg
	}
	return ""
}

// Remove API endpoint override request
//
// x-displayName: "Remove Override Request"
// Shape of remove to remove override for API endpoints
type OverridePopReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *OverridePopReq) Reset()      { *m = OverridePopReq{} }
func (*OverridePopReq) ProtoMessage() {}
func (*OverridePopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{12}
}
func (m *OverridePopReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OverridePopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OverridePopReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OverridePopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OverridePopReq.Merge(m, src)
}
func (m *OverridePopReq) XXX_Size() int {
	return m.Size()
}
func (m *OverridePopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OverridePopReq.DiscardUnknown(m)
}

var xxx_messageInfo_OverridePopReq proto.InternalMessageInfo

func (m *OverridePopReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *OverridePopReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Add API endpoint override response
//
// x-displayName: "Add Override Response"
// Shape of response to add override for API endpoints
type OverridePopRsp struct {
	// Status
	//
	// x-displayName: "Status"
	// x-example: "true"
	// Status of the add operation (sucess or fail)
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// Message
	//
	// x-displayName: "Message"
	// x-example: "Override Pop Successful"
	// Message string for the status of add operation
	StatusMsg string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
}

func (m *OverridePopRsp) Reset()      { *m = OverridePopRsp{} }
func (*OverridePopRsp) ProtoMessage() {}
func (*OverridePopRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{13}
}
func (m *OverridePopRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OverridePopRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OverridePopRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OverridePopRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OverridePopRsp.Merge(m, src)
}
func (m *OverridePopRsp) XXX_Size() int {
	return m.Size()
}
func (m *OverridePopRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_OverridePopRsp.DiscardUnknown(m)
}

var xxx_messageInfo_OverridePopRsp proto.InternalMessageInfo

func (m *OverridePopRsp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *OverridePopRsp) GetStatusMsg() string {
	if m != nil {
		return m.StatusMsg
	}
	return ""
}

// API endpoint Learnt Schema request
//
// x-displayName: "Learnt Schema Request"
// shape of request to get learnt schema request for a given API endpoint.
type APIEndpointLearntSchemaReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "value"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,3,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "value"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	// Api Endpoint Info Request
	//
	// x-displayName: "Api Endpoint Info Request"
	// List of additional things that needs to be sent as part of the request
	ApiEndpointInfoRequest []ApiEndpointInfoRequest `protobuf:"varint,5,rep,packed,name=api_endpoint_info_request,json=apiEndpointInfoRequest,proto3,enum=ves.io.schema.app_type.ApiEndpointInfoRequest" json:"api_endpoint_info_request,omitempty"`
}

func (m *APIEndpointLearntSchemaReq) Reset()      { *m = APIEndpointLearntSchemaReq{} }
func (*APIEndpointLearntSchemaReq) ProtoMessage() {}
func (*APIEndpointLearntSchemaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{14}
}
func (m *APIEndpointLearntSchemaReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointLearntSchemaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointLearntSchemaReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointLearntSchemaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointLearntSchemaReq.Merge(m, src)
}
func (m *APIEndpointLearntSchemaReq) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointLearntSchemaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointLearntSchemaReq.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointLearntSchemaReq proto.InternalMessageInfo

func (m *APIEndpointLearntSchemaReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetApiEndpointInfoRequest() []ApiEndpointInfoRequest {
	if m != nil {
		return m.ApiEndpointInfoRequest
	}
	return nil
}

// API endpoint Req Body Schema response
//
// x-displayName: "Req Body Schema Response"
// shape of response to get req body schema for a given API endpoint.
type APIEndpointLearntSchemaRsp struct {
	// Discovered Schema
	//
	// x-displayName: "Discovered Schema"
	// Discovered Schema for request API endpoint.
	DiscoveredSchema *DiscoveredSchema `protobuf:"bytes,6,opt,name=discovered_schema,json=discoveredSchema,proto3" json:"discovered_schema,omitempty"`
	// Discovered OpenAPI Spec
	//
	// x-displayName: "Discovered OpenAPI Spec"
	// x-example: "{\"info\":{\"description\":\"\",\"title\":\"\",\"version\":\"\"},\"paths\":{\"\/api\/Addresss\":{\"get\":{\"consumes\":[\"application\/json\"],\"description\":\"Swagger auto-generated from learnt schema\",\"parameters\":[{\"description\":\"\",\"in\":\"query\",\"name\":\"test\",\"type\":\"string\"},{\"description\":\"\",\"in\":\"query\",\"name\":\"test1\",\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"\"}}}}},\"schemes\":[\"https\",\"http\"],\"swagger\":\"2.0\"}"
	// Discovered OpenAPI spec for request API endpoint.
	DiscoveredOpenapiSpec string `protobuf:"bytes,2,opt,name=discovered_openapi_spec,json=discoveredOpenapiSpec,proto3" json:"discovered_openapi_spec,omitempty"` // Deprecated: Do not use.
	// API Specifications
	//
	// x-displayName: "API Specifications"
	// Discovered API Specifications based on API type for eg, OpenAPI or GraphQL schema for API endpoint.
	ApiSpecs map[string]string `protobuf:"bytes,3,rep,name=api_specs,json=apiSpecs,proto3" json:"api_specs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// List of sensitive data
	//
	// x-displayName: "List of Sensitive Data"
	// List of sensitive data for request API endpoint.
	SensitiveData []*SensitiveData `protobuf:"bytes,7,rep,name=sensitive_data,json=sensitiveData,proto3" json:"sensitive_data,omitempty"`
	// Inventory OpenAPI Spec
	//
	// x-displayName: "Inventory OpenAPI Spec"
	// x-example: "{\"info\":{\"description\":\"\",\"title\":\"\",\"version\":\"\"},\"paths\":{\"\/api\/Addresss\":{\"get\":{\"consumes\":[\"application\/json\"],\"description\":\"Swagger auto-generated from learnt schema\",\"parameters\":[{\"description\":\"\",\"in\":\"query\",\"name\":\"test\",\"type\":\"string\"},{\"description\":\"\",\"in\":\"query\",\"name\":\"test1\",\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"\"}}}}},\"schemes\":[\"https\",\"http\"],\"swagger\":\"2.0\"}"
	// Inventory OpenAPI spec for request API endpoint.
	InventoryOpenapiSpec string `protobuf:"bytes,5,opt,name=inventory_openapi_spec,json=inventoryOpenapiSpec,proto3" json:"inventory_openapi_spec,omitempty"`
	// Probability Density Function
	//
	// x-displayName: "PDF(Value)"
	// Metrics supported currently are request_size response_size latency_with_data, latency_no_data, request_rate, error_rate, response_throughput.
	// PDF is calculated for each combination of (Tenant, App type, API endpoint).
	// API endpoint is determined from automatically identified API (collapsed_url) and method.
	PdfInfo *APIEPPDFInfo `protobuf:"bytes,8,opt,name=pdf_info,json=pdfInfo,proto3" json:"pdf_info,omitempty"`
}

func (m *APIEndpointLearntSchemaRsp) Reset()      { *m = APIEndpointLearntSchemaRsp{} }
func (*APIEndpointLearntSchemaRsp) ProtoMessage() {}
func (*APIEndpointLearntSchemaRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8adbf77dd545807, []int{15}
}
func (m *APIEndpointLearntSchemaRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointLearntSchemaRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointLearntSchemaRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointLearntSchemaRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointLearntSchemaRsp.Merge(m, src)
}
func (m *APIEndpointLearntSchemaRsp) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointLearntSchemaRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointLearntSchemaRsp.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointLearntSchemaRsp proto.InternalMessageInfo

func (m *APIEndpointLearntSchemaRsp) GetDiscoveredSchema() *DiscoveredSchema {
	if m != nil {
		return m.DiscoveredSchema
	}
	return nil
}

// Deprecated: Do not use.
func (m *APIEndpointLearntSchemaRsp) GetDiscoveredOpenapiSpec() string {
	if m != nil {
		return m.DiscoveredOpenapiSpec
	}
	return ""
}

func (m *APIEndpointLearntSchemaRsp) GetApiSpecs() map[string]string {
	if m != nil {
		return m.ApiSpecs
	}
	return nil
}

func (m *APIEndpointLearntSchemaRsp) GetSensitiveData() []*SensitiveData {
	if m != nil {
		return m.SensitiveData
	}
	return nil
}

func (m *APIEndpointLearntSchemaRsp) GetInventoryOpenapiSpec() string {
	if m != nil {
		return m.InventoryOpenapiSpec
	}
	return ""
}

func (m *APIEndpointLearntSchemaRsp) GetPdfInfo() *APIEPPDFInfo {
	if m != nil {
		return m.PdfInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*APIEndpointsReq)(nil), "ves.io.schema.app_type.APIEndpointsReq")
	golang_proto.RegisterType((*APIEndpointsReq)(nil), "ves.io.schema.app_type.APIEndpointsReq")
	proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.app_type.SwaggerSpecReq")
	golang_proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.app_type.SwaggerSpecReq")
	proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.app_type.SwaggerSpecRsp")
	golang_proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.app_type.SwaggerSpecRsp")
	proto.RegisterType((*ServiceAPIEndpointsReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointsReq")
	golang_proto.RegisterType((*ServiceAPIEndpointsReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointsReq")
	proto.RegisterType((*APIEndpointsRsp)(nil), "ves.io.schema.app_type.APIEndpointsRsp")
	golang_proto.RegisterType((*APIEndpointsRsp)(nil), "ves.io.schema.app_type.APIEndpointsRsp")
	proto.RegisterType((*APIEndpointPDFReq)(nil), "ves.io.schema.app_type.APIEndpointPDFReq")
	golang_proto.RegisterType((*APIEndpointPDFReq)(nil), "ves.io.schema.app_type.APIEndpointPDFReq")
	proto.RegisterType((*ServiceAPIEndpointPDFReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointPDFReq")
	golang_proto.RegisterType((*ServiceAPIEndpointPDFReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointPDFReq")
	proto.RegisterType((*APIEndpointPDFRsp)(nil), "ves.io.schema.app_type.APIEndpointPDFRsp")
	golang_proto.RegisterType((*APIEndpointPDFRsp)(nil), "ves.io.schema.app_type.APIEndpointPDFRsp")
	proto.RegisterType((*OverridesReq)(nil), "ves.io.schema.app_type.OverridesReq")
	golang_proto.RegisterType((*OverridesReq)(nil), "ves.io.schema.app_type.OverridesReq")
	proto.RegisterType((*OverridesRsp)(nil), "ves.io.schema.app_type.OverridesRsp")
	golang_proto.RegisterType((*OverridesRsp)(nil), "ves.io.schema.app_type.OverridesRsp")
	proto.RegisterType((*OverridePushReq)(nil), "ves.io.schema.app_type.OverridePushReq")
	golang_proto.RegisterType((*OverridePushReq)(nil), "ves.io.schema.app_type.OverridePushReq")
	proto.RegisterType((*OverridePushRsp)(nil), "ves.io.schema.app_type.OverridePushRsp")
	golang_proto.RegisterType((*OverridePushRsp)(nil), "ves.io.schema.app_type.OverridePushRsp")
	proto.RegisterType((*OverridePopReq)(nil), "ves.io.schema.app_type.OverridePopReq")
	golang_proto.RegisterType((*OverridePopReq)(nil), "ves.io.schema.app_type.OverridePopReq")
	proto.RegisterType((*OverridePopRsp)(nil), "ves.io.schema.app_type.OverridePopRsp")
	golang_proto.RegisterType((*OverridePopRsp)(nil), "ves.io.schema.app_type.OverridePopRsp")
	proto.RegisterType((*APIEndpointLearntSchemaReq)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaReq")
	golang_proto.RegisterType((*APIEndpointLearntSchemaReq)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaReq")
	proto.RegisterType((*APIEndpointLearntSchemaRsp)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaRsp")
	golang_proto.RegisterType((*APIEndpointLearntSchemaRsp)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaRsp")
	proto.RegisterMapType((map[string]string)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaRsp.ApiSpecsEntry")
	golang_proto.RegisterMapType((map[string]string)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaRsp.ApiSpecsEntry")
}

func init() {
	proto.RegisterFile("ves.io/schema/app_type/public_custom_api.proto", fileDescriptor_e8adbf77dd545807)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/app_type/public_custom_api.proto", fileDescriptor_e8adbf77dd545807)
}

var fileDescriptor_e8adbf77dd545807 = []byte{
	// 1436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x4d, 0x6c, 0x1b, 0x45,
	0x14, 0xce, 0xd8, 0x49, 0x9b, 0x4c, 0x7e, 0xda, 0x8e, 0x4a, 0xd8, 0x9a, 0xd6, 0xa4, 0x4b, 0x81,
	0xf0, 0xe3, 0xdd, 0x2a, 0xa5, 0x08, 0x95, 0x03, 0x6d, 0x48, 0xd2, 0x86, 0xa6, 0xd4, 0x72, 0x5a,
	0x09, 0x10, 0xb0, 0x9a, 0xec, 0x8e, 0x9d, 0xa1, 0xf6, 0xce, 0x74, 0x67, 0xec, 0xd4, 0xaa, 0x2a,
	0xa1, 0x1e, 0x00, 0x09, 0x09, 0xa1, 0x72, 0x41, 0x20, 0x71, 0x00, 0x09, 0xc1, 0x15, 0x71, 0x40,
	0x94, 0x43, 0x6f, 0xad, 0x38, 0xa0, 0x0a, 0x2e, 0x3d, 0x52, 0x07, 0x89, 0x56, 0x48, 0xa8, 0x07,
	0x24, 0xae, 0x68, 0x67, 0x77, 0x9d, 0xb5, 0x6b, 0xa7, 0x4e, 0xba, 0x15, 0x17, 0x6b, 0x66, 0xde,
	0x9b, 0x37, 0xef, 0xfb, 0xe6, 0xed, 0x7b, 0xcf, 0x03, 0x8d, 0x1a, 0x11, 0x06, 0x65, 0xa6, 0xb0,
	0x97, 0x49, 0x05, 0x9b, 0x98, 0x73, 0x4b, 0xd6, 0x39, 0x31, 0x79, 0x75, 0xa9, 0x4c, 0x6d, 0xcb,
	0xae, 0x0a, 0xc9, 0x2a, 0x16, 0xe6, 0xd4, 0xe0, 0x1e, 0x93, 0x0c, 0x8d, 0x07, 0xfa, 0x46, 0xa0,
	0x6f, 0x44, 0xfa, 0x99, 0x5c, 0x89, 0xca, 0xe5, 0xea, 0x92, 0x61, 0xb3, 0x8a, 0x59, 0x62, 0x25,
	0x66, 0x2a, 0xf5, 0xa5, 0x6a, 0x51, 0xcd, 0xd4, 0x44, 0x8d, 0x02, 0x33, 0x99, 0xdd, 0x25, 0xc6,
	0x4a, 0x65, 0x62, 0x62, 0x4e, 0x4d, 0xec, 0xba, 0x4c, 0x62, 0x49, 0x99, 0x2b, 0x42, 0xe9, 0xae,
	0x98, 0x74, 0x59, 0x4a, 0xbe, 0xc4, 0x9c, 0x7a, 0x28, 0x7a, 0x34, 0x14, 0x35, 0xcd, 0x4b, 0x5a,
	0x21, 0x42, 0xe2, 0x0a, 0x0f, 0x15, 0xf4, 0x2e, 0x80, 0xfc, 0x9f, 0xc8, 0xfe, 0x23, 0xad, 0x3a,
	0x8c, 0xc7, 0x0f, 0xdf, 0xdd, 0x2a, 0xac, 0xe1, 0x32, 0x75, 0xb0, 0x24, 0x9d, 0xcd, 0xd7, 0x88,
	0x20, 0x6e, 0xad, 0xcd, 0xc2, 0x44, 0x9b, 0x0e, 0x25, 0x2b, 0x56, 0x8b, 0x86, 0xfe, 0x33, 0x80,
	0xdb, 0x8e, 0xe4, 0xe7, 0x67, 0x5d, 0x87, 0x33, 0xea, 0x4a, 0x51, 0x20, 0x67, 0x91, 0x0e, 0x47,
	0x23, 0x67, 0x2d, 0x17, 0x57, 0x88, 0x06, 0x26, 0xc0, 0xe4, 0x50, 0x61, 0x18, 0x73, 0x7e, 0xaa,
	0xce, 0xc9, 0xab, 0xb8, 0x42, 0xd0, 0x6e, 0x38, 0xe4, 0x8b, 0x04, 0xc7, 0x36, 0xd1, 0x52, 0x4a,
	0xbe, 0xb6, 0x80, 0xaa, 0x70, 0x17, 0xe6, 0xd4, 0x22, 0xa1, 0x55, 0x8b, 0xba, 0x45, 0x66, 0x79,
	0xe4, 0x6c, 0x95, 0x08, 0xa9, 0xa5, 0x27, 0xd2, 0x93, 0x63, 0x53, 0x86, 0xd1, 0xf9, 0xfe, 0x8c,
	0x23, 0x9c, 0x46, 0xde, 0xcc, 0xbb, 0x45, 0x56, 0x08, 0x76, 0x4d, 0xc3, 0x1f, 0x6f, 0x5f, 0x49,
	0x0f, 0x5c, 0x02, 0x29, 0x0d, 0x14, 0xc6, 0x71, 0x47, 0x1d, 0xbd, 0x00, 0xc7, 0x16, 0x57, 0x70,
	0xa9, 0x44, 0xbc, 0x45, 0x4e, 0xec, 0x44, 0xa0, 0xe8, 0x07, 0x5a, 0x6d, 0x0a, 0x8e, 0xf6, 0xc2,
	0x11, 0x11, 0xac, 0x58, 0x82, 0x13, 0x3b, 0x32, 0x29, 0xd6, 0xb4, 0xf4, 0x7f, 0x00, 0x1c, 0x5f,
	0x24, 0x5e, 0x8d, 0xda, 0x24, 0x79, 0x72, 0xfd, 0xf3, 0x03, 0xdb, 0x81, 0x81, 0x74, 0x78, 0x7e,
	0xb0, 0xa6, 0x0c, 0xac, 0xcb, 0x7f, 0xff, 0x03, 0xe3, 0x7f, 0xb1, 0x2d, 0x96, 0x04, 0x47, 0x87,
	0x21, 0xc4, 0x9c, 0x12, 0x6e, 0x95, 0xa9, 0x90, 0x1a, 0x98, 0x48, 0x4f, 0x0e, 0x4f, 0xed, 0xed,
	0x7a, 0x74, 0x7e, 0x7e, 0x36, 0xaf, 0x0c, 0x0e, 0xa9, 0x4d, 0x0b, 0x54, 0x48, 0xfd, 0x12, 0x80,
	0x3b, 0x62, 0x56, 0xf3, 0x33, 0x73, 0xc9, 0xd0, 0xf8, 0x18, 0x1c, 0xb5, 0x59, 0xb9, 0x8c, 0xb9,
	0x20, 0x8e, 0x55, 0xf5, 0xca, 0x21, 0x8f, 0x23, 0xcd, 0xc5, 0xd3, 0x5e, 0x19, 0x8d, 0xc3, 0x2d,
	0x15, 0x22, 0x97, 0x99, 0xa3, 0xf5, 0x2b, 0x69, 0x38, 0xd3, 0x7f, 0x02, 0x50, 0xbb, 0xfb, 0x82,
	0x13, 0xf3, 0xad, 0x87, 0x2b, 0xbe, 0xcb, 0xfd, 0xfe, 0x75, 0xdd, 0x1f, 0x68, 0x71, 0xff, 0xd4,
	0x5d, 0x94, 0x0a, 0x8e, 0x5e, 0x82, 0x83, 0xdc, 0x29, 0xaa, 0x58, 0x51, 0x1e, 0x0f, 0x4f, 0xed,
	0x5b, 0xf7, 0xa2, 0xf2, 0x33, 0x73, 0xea, 0xae, 0xb6, 0x72, 0xa7, 0xe8, 0x0f, 0xf4, 0x3c, 0x1c,
	0x39, 0x59, 0x23, 0x9e, 0x47, 0x1d, 0x92, 0x4c, 0xa8, 0xeb, 0xaf, 0xc7, 0x2d, 0x0a, 0x8e, 0xe6,
	0xe1, 0x28, 0x0b, 0xe7, 0xf1, 0x80, 0xea, 0xea, 0x67, 0xb4, 0x59, 0xf9, 0x39, 0x12, 0x6d, 0x55,
	0x61, 0xf5, 0x05, 0x80, 0xdb, 0x22, 0x71, 0xbe, 0x2a, 0x96, 0x93, 0xb9, 0xb8, 0xb8, 0x83, 0x8a,
	0xc8, 0xf4, 0xfa, 0x44, 0x76, 0x76, 0x50, 0xb1, 0x79, 0xac, 0xcd, 0x3f, 0xc1, 0xfd, 0xeb, 0x14,
	0x12, 0xcb, 0xaa, 0x50, 0x8e, 0x0d, 0x16, 0xc2, 0x19, 0xda, 0x03, 0x61, 0x30, 0xb2, 0x2a, 0xa2,
	0x14, 0x39, 0x15, 0xac, 0x9c, 0x10, 0x25, 0x3f, 0x2d, 0x36, 0x2d, 0x31, 0x9e, 0xcc, 0xcd, 0x1c,
	0x6d, 0xb5, 0xb9, 0x79, 0xe7, 0x2e, 0xa5, 0x60, 0x26, 0x16, 0x8b, 0x0b, 0x04, 0x7b, 0xae, 0x5c,
	0x54, 0x34, 0xfd, 0xff, 0xdf, 0xf9, 0xfa, 0x89, 0x74, 0xe0, 0x81, 0x25, 0xd2, 0xef, 0xfa, 0xbb,
	0x93, 0x22, 0x38, 0x3a, 0x0d, 0x77, 0x38, 0x54, 0xd8, 0x7e, 0xb8, 0x10, 0xc7, 0x0a, 0xce, 0xd5,
	0xb6, 0xa8, 0x48, 0x9b, 0xec, 0xe6, 0xcd, 0x4c, 0x73, 0x43, 0x68, 0x67, 0xbb, 0xd3, 0xb6, 0x82,
	0xde, 0x84, 0x0f, 0xc7, 0xcc, 0x32, 0x4e, 0x5c, 0x1f, 0xbb, 0xaa, 0x71, 0x8a, 0xd5, 0xe9, 0x7d,
	0x37, 0x2e, 0x80, 0xc6, 0x05, 0xed, 0x04, 0xab, 0x11, 0x67, 0x42, 0xb2, 0x89, 0x48, 0x2c, 0x26,
	0x8a, 0x94, 0x94, 0x9d, 0x5b, 0x97, 0x01, 0xd0, 0x40, 0xe1, 0xa1, 0x35, 0x23, 0x27, 0x03, 0x1b,
	0x7e, 0x4d, 0x44, 0x6f, 0xc1, 0xa1, 0xa6, 0xbe, 0xea, 0x01, 0x86, 0xa7, 0x0e, 0xaf, 0x97, 0x5f,
	0x3a, 0x63, 0xf7, 0x59, 0xf5, 0xcd, 0x89, 0x59, 0x57, 0x7a, 0xf5, 0xc2, 0x60, 0x68, 0x5d, 0xa0,
	0x05, 0x38, 0x26, 0x88, 0x2b, 0xa8, 0xa4, 0x35, 0x62, 0x39, 0x58, 0x62, 0x6d, 0xab, 0x3a, 0xe3,
	0xf1, 0x6e, 0x67, 0x2c, 0x46, 0xda, 0x33, 0x58, 0xe2, 0xc2, 0xa8, 0x88, 0x4f, 0xd1, 0x73, 0x70,
	0x9c, 0xba, 0x35, 0xe2, 0x4a, 0xe6, 0xd5, 0x5b, 0x99, 0x08, 0x12, 0xe9, 0xce, 0xa6, 0x34, 0x0e,
	0x31, 0x9e, 0x41, 0x07, 0x37, 0x91, 0x41, 0x33, 0x2f, 0xc2, 0xd1, 0x16, 0x7c, 0x68, 0x3b, 0x4c,
	0x9f, 0x21, 0xf5, 0x30, 0xe8, 0xfd, 0x21, 0xda, 0x09, 0x07, 0x6a, 0xb8, 0x5c, 0x8d, 0x02, 0x3d,
	0x98, 0x1c, 0x4a, 0xbd, 0x00, 0xa6, 0xbe, 0x47, 0x70, 0xe8, 0x65, 0xd5, 0x25, 0x1f, 0xc9, 0xcf,
	0xa3, 0xbf, 0x01, 0x1c, 0x89, 0x17, 0x63, 0xf4, 0x64, 0x0f, 0x64, 0xfb, 0x69, 0x3b, 0xd3, 0x9b,
	0xa2, 0xe0, 0xfa, 0x87, 0xe0, 0xda, 0x0f, 0x29, 0xd0, 0xb8, 0xaa, 0x1d, 0x2c, 0x1e, 0x3c, 0x67,
	0xe7, 0x56, 0x30, 0xe6, 0x39, 0xec, 0xd4, 0xb0, 0x6b, 0x13, 0x27, 0x57, 0x61, 0x2e, 0x95, 0xcc,
	0x7b, 0xd6, 0x6f, 0x41, 0x73, 0x94, 0xe5, 0xb8, 0xc7, 0xce, 0xd5, 0xa3, 0xd5, 0x9c, 0x47, 0xb0,
	0x73, 0xf1, 0xb7, 0x3f, 0x3e, 0x49, 0x1d, 0x43, 0x73, 0x61, 0x87, 0x6f, 0x36, 0x3f, 0x59, 0x61,
	0x9e, 0x6f, 0x8e, 0x2f, 0x34, 0xfb, 0x66, 0x61, 0x9e, 0x6f, 0xc9, 0x04, 0xbe, 0x64, 0xed, 0xcb,
	0x14, 0xe8, 0x5f, 0x00, 0xc7, 0x5a, 0x8b, 0x1a, 0x7a, 0xaa, 0x07, 0x24, 0x41, 0xcd, 0xce, 0xf4,
	0xaa, 0x2a, 0xb8, 0xfe, 0x51, 0x02, 0xb0, 0x8f, 0xa3, 0xf9, 0x44, 0x60, 0x9b, 0xdc, 0x29, 0xa2,
	0x06, 0x80, 0x43, 0xcd, 0x32, 0x89, 0xee, 0x59, 0x6b, 0xd4, 0x25, 0xf7, 0xa0, 0x25, 0xb8, 0xfe,
	0x41, 0x04, 0xf5, 0xf9, 0x0d, 0x43, 0x5d, 0xf1, 0xa8, 0x24, 0x0a, 0xeb, 0x0c, 0x9a, 0xde, 0x34,
	0x56, 0xd6, 0x84, 0xf5, 0x17, 0x58, 0xeb, 0x05, 0xfc, 0x7a, 0xd8, 0x3d, 0x9e, 0xdb, 0xaa, 0x7a,
	0xa6, 0x37, 0x45, 0x85, 0xb6, 0x71, 0x55, 0x3b, 0xd0, 0x01, 0x69, 0x55, 0x90, 0x7b, 0xc3, 0x3c,
	0xae, 0xcf, 0xdd, 0x37, 0x4c, 0x93, 0x57, 0xc5, 0xf2, 0x21, 0xf0, 0x34, 0xfa, 0x13, 0xc0, 0xe1,
	0x58, 0x7d, 0x45, 0x4f, 0xdc, 0x13, 0x83, 0x2a, 0xec, 0x99, 0x9e, 0xf4, 0x04, 0xd7, 0xdf, 0xbf,
	0x2f, 0xa8, 0xaf, 0xe8, 0xb3, 0x09, 0x40, 0x65, 0xdc, 0x47, 0xfa, 0x59, 0x0a, 0x8e, 0x1f, 0x25,
	0xb2, 0xc3, 0xbf, 0x25, 0x64, 0x74, 0x4f, 0xdd, 0x9d, 0xfe, 0x5a, 0xf5, 0x9e, 0xb8, 0xbe, 0x4e,
	0xe0, 0x0b, 0xb6, 0xf5, 0xb7, 0x37, 0xcd, 0x41, 0xd8, 0xc7, 0x0b, 0xf3, 0x7c, 0xbc, 0xcb, 0x6f,
	0x4b, 0x68, 0x3e, 0x39, 0x5f, 0xa5, 0xa0, 0xd6, 0x91, 0x1c, 0x3f, 0xbb, 0xed, 0xef, 0x9d, 0x9e,
	0x8d, 0x27, 0xb9, 0x6f, 0x13, 0xa0, 0xa8, 0xa8, 0xe3, 0x07, 0x4a, 0x91, 0x9f, 0xfc, 0x7c, 0x96,
	0xbe, 0x4c, 0xc1, 0xcc, 0x51, 0x22, 0xbb, 0x34, 0x0d, 0x68, 0x6a, 0xa3, 0x5d, 0x06, 0x39, 0x9b,
	0x99, 0xda, 0x78, 0x67, 0xa2, 0x7f, 0x9e, 0x00, 0x65, 0xaf, 0xe9, 0x8b, 0xc9, 0xd4, 0x85, 0xb2,
	0x72, 0x2e, 0xec, 0x0d, 0x7d, 0x92, 0x6e, 0x03, 0x38, 0xe6, 0x87, 0xd2, 0xda, 0x2b, 0x45, 0xf7,
	0xa4, 0xd2, 0xfa, 0x88, 0x92, 0xd9, 0x69, 0x04, 0x4f, 0x5d, 0x06, 0xe6, 0xd4, 0x38, 0x26, 0x25,
	0x9f, 0x66, 0x4e, 0x5d, 0xff, 0x34, 0x01, 0xb8, 0xa7, 0x51, 0x32, 0x70, 0x85, 0x19, 0x7f, 0x91,
	0xc9, 0x3c, 0x73, 0xe5, 0x32, 0x48, 0xff, 0x7a, 0x19, 0xec, 0xe9, 0x96, 0x0c, 0x97, 0xde, 0x21,
	0xb6, 0xbc, 0xf8, 0x8b, 0x96, 0xda, 0x0f, 0xa6, 0xdf, 0x03, 0xd7, 0x6f, 0x66, 0xfb, 0x6e, 0xdc,
	0xcc, 0xf6, 0xdd, 0xb9, 0x99, 0x05, 0xef, 0x36, 0xb2, 0xe0, 0x9b, 0x46, 0x16, 0x5c, 0x6b, 0x64,
	0xc1, 0xf5, 0x46, 0x16, 0xfc, 0xde, 0xc8, 0x82, 0x5b, 0x8d, 0x6c, 0xdf, 0x9d, 0x46, 0x16, 0x7c,
	0xbc, 0x9a, 0xed, 0xbb, 0xb2, 0x9a, 0x05, 0xd7, 0x57, 0xb3, 0x7d, 0x37, 0x56, 0xb3, 0x7d, 0x6f,
	0x2c, 0x94, 0x18, 0x3f, 0x53, 0x32, 0x6a, 0xac, 0x2c, 0x89, 0xe7, 0x61, 0xa3, 0x2a, 0x4c, 0x35,
	0x28, 0x32, 0xaf, 0xe2, 0x43, 0xae, 0x51, 0x87, 0x78, 0xb9, 0x48, 0x6c, 0xf2, 0xa5, 0x12, 0x33,
	0xc9, 0x39, 0x19, 0xbe, 0xc6, 0xb5, 0xbd, 0x0b, 0x2e, 0x6d, 0x51, 0x2f, 0x72, 0x07, 0xfe, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x33, 0x0a, 0x6d, 0x40, 0x09, 0x15, 0x00, 0x00,
}

func (this *APIEndpointsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointsReq)
	if !ok {
		that2, ok := that.(APIEndpointsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if len(this.ApiEndpointInfoRequest) != len(that1.ApiEndpointInfoRequest) {
		return false
	}
	for i := range this.ApiEndpointInfoRequest {
		if this.ApiEndpointInfoRequest[i] != that1.ApiEndpointInfoRequest[i] {
			return false
		}
	}
	return true
}
func (this *SwaggerSpecReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecReq)
	if !ok {
		that2, ok := that.(SwaggerSpecReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *SwaggerSpecRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecRsp)
	if !ok {
		that2, ok := that.(SwaggerSpecRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SwaggerSpec != that1.SwaggerSpec {
		return false
	}
	return true
}
func (this *ServiceAPIEndpointsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceAPIEndpointsReq)
	if !ok {
		that2, ok := that.(ServiceAPIEndpointsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ServiceName != that1.ServiceName {
		return false
	}
	if len(this.ApiEndpointInfoRequest) != len(that1.ApiEndpointInfoRequest) {
		return false
	}
	for i := range this.ApiEndpointInfoRequest {
		if this.ApiEndpointInfoRequest[i] != that1.ApiEndpointInfoRequest[i] {
			return false
		}
	}
	return true
}
func (this *APIEndpointsRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointsRsp)
	if !ok {
		that2, ok := that.(APIEndpointsRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ApiepList) != len(that1.ApiepList) {
		return false
	}
	for i := range this.ApiepList {
		if !this.ApiepList[i].Equal(that1.ApiepList[i]) {
			return false
		}
	}
	return true
}
func (this *APIEndpointPDFReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointPDFReq)
	if !ok {
		that2, ok := that.(APIEndpointPDFReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *ServiceAPIEndpointPDFReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceAPIEndpointPDFReq)
	if !ok {
		that2, ok := that.(ServiceAPIEndpointPDFReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ServiceName != that1.ServiceName {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *APIEndpointPDFRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointPDFRsp)
	if !ok {
		that2, ok := that.(APIEndpointPDFRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.PdfInfo.Equal(that1.PdfInfo) {
		return false
	}
	return true
}
func (this *OverridesReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridesReq)
	if !ok {
		that2, ok := that.(OverridesReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *OverridesRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridesRsp)
	if !ok {
		that2, ok := that.(OverridesRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.OverrideList) != len(that1.OverrideList) {
		return false
	}
	for i := range this.OverrideList {
		if !this.OverrideList[i].Equal(that1.OverrideList[i]) {
			return false
		}
	}
	return true
}
func (this *OverridePushReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePushReq)
	if !ok {
		that2, ok := that.(OverridePushReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if !this.OverrideInfo.Equal(that1.OverrideInfo) {
		return false
	}
	return true
}
func (this *OverridePushRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePushRsp)
	if !ok {
		that2, ok := that.(OverridePushRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if this.StatusMsg != that1.StatusMsg {
		return false
	}
	return true
}
func (this *OverridePopReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePopReq)
	if !ok {
		that2, ok := that.(OverridePopReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *OverridePopRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePopRsp)
	if !ok {
		that2, ok := that.(OverridePopRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if this.StatusMsg != that1.StatusMsg {
		return false
	}
	return true
}
func (this *APIEndpointLearntSchemaReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointLearntSchemaReq)
	if !ok {
		that2, ok := that.(APIEndpointLearntSchemaReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	if len(this.ApiEndpointInfoRequest) != len(that1.ApiEndpointInfoRequest) {
		return false
	}
	for i := range this.ApiEndpointInfoRequest {
		if this.ApiEndpointInfoRequest[i] != that1.ApiEndpointInfoRequest[i] {
			return false
		}
	}
	return true
}
func (this *APIEndpointLearntSchemaRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointLearntSchemaRsp)
	if !ok {
		that2, ok := that.(APIEndpointLearntSchemaRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DiscoveredSchema.Equal(that1.DiscoveredSchema) {
		return false
	}
	if this.DiscoveredOpenapiSpec != that1.DiscoveredOpenapiSpec {
		return false
	}
	if len(this.ApiSpecs) != len(that1.ApiSpecs) {
		return false
	}
	for i := range this.ApiSpecs {
		if this.ApiSpecs[i] != that1.ApiSpecs[i] {
			return false
		}
	}
	if len(this.SensitiveData) != len(that1.SensitiveData) {
		return false
	}
	for i := range this.SensitiveData {
		if !this.SensitiveData[i].Equal(that1.SensitiveData[i]) {
			return false
		}
	}
	if this.InventoryOpenapiSpec != that1.InventoryOpenapiSpec {
		return false
	}
	if !this.PdfInfo.Equal(that1.PdfInfo) {
		return false
	}
	return true
}
func (this *APIEndpointsReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&app_type.APIEndpointsReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ApiEndpointInfoRequest: "+fmt.Sprintf("%#v", this.ApiEndpointInfoRequest)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SwaggerSpecReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.SwaggerSpecReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SwaggerSpecRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.SwaggerSpecRsp{")
	s = append(s, "SwaggerSpec: "+fmt.Sprintf("%#v", this.SwaggerSpec)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ServiceAPIEndpointsReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&app_type.ServiceAPIEndpointsReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ServiceName: "+fmt.Sprintf("%#v", this.ServiceName)+",\n")
	s = append(s, "ApiEndpointInfoRequest: "+fmt.Sprintf("%#v", this.ApiEndpointInfoRequest)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointsRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.APIEndpointsRsp{")
	if this.ApiepList != nil {
		s = append(s, "ApiepList: "+fmt.Sprintf("%#v", this.ApiepList)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointPDFReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&app_type.APIEndpointPDFReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ServiceAPIEndpointPDFReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&app_type.ServiceAPIEndpointPDFReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ServiceName: "+fmt.Sprintf("%#v", this.ServiceName)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointPDFRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.APIEndpointPDFRsp{")
	if this.PdfInfo != nil {
		s = append(s, "PdfInfo: "+fmt.Sprintf("%#v", this.PdfInfo)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridesReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridesReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridesRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.OverridesRsp{")
	if this.OverrideList != nil {
		s = append(s, "OverrideList: "+fmt.Sprintf("%#v", this.OverrideList)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePushReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&app_type.OverridePushReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	if this.OverrideInfo != nil {
		s = append(s, "OverrideInfo: "+fmt.Sprintf("%#v", this.OverrideInfo)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePushRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridePushRsp{")
	s = append(s, "Status: "+fmt.Sprintf("%#v", this.Status)+",\n")
	s = append(s, "StatusMsg: "+fmt.Sprintf("%#v", this.StatusMsg)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePopReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridePopReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePopRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridePopRsp{")
	s = append(s, "Status: "+fmt.Sprintf("%#v", this.Status)+",\n")
	s = append(s, "StatusMsg: "+fmt.Sprintf("%#v", this.StatusMsg)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointLearntSchemaReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&app_type.APIEndpointLearntSchemaReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "ApiEndpointInfoRequest: "+fmt.Sprintf("%#v", this.ApiEndpointInfoRequest)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointLearntSchemaRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&app_type.APIEndpointLearntSchemaRsp{")
	if this.DiscoveredSchema != nil {
		s = append(s, "DiscoveredSchema: "+fmt.Sprintf("%#v", this.DiscoveredSchema)+",\n")
	}
	s = append(s, "DiscoveredOpenapiSpec: "+fmt.Sprintf("%#v", this.DiscoveredOpenapiSpec)+",\n")
	keysForApiSpecs := make([]string, 0, len(this.ApiSpecs))
	for k, _ := range this.ApiSpecs {
		keysForApiSpecs = append(keysForApiSpecs, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForApiSpecs)
	mapStringForApiSpecs := "map[string]string{"
	for _, k := range keysForApiSpecs {
		mapStringForApiSpecs += fmt.Sprintf("%#v: %#v,", k, this.ApiSpecs[k])
	}
	mapStringForApiSpecs += "}"
	if this.ApiSpecs != nil {
		s = append(s, "ApiSpecs: "+mapStringForApiSpecs+",\n")
	}
	if this.SensitiveData != nil {
		s = append(s, "SensitiveData: "+fmt.Sprintf("%#v", this.SensitiveData)+",\n")
	}
	s = append(s, "InventoryOpenapiSpec: "+fmt.Sprintf("%#v", this.InventoryOpenapiSpec)+",\n")
	if this.PdfInfo != nil {
		s = append(s, "PdfInfo: "+fmt.Sprintf("%#v", this.PdfInfo)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicCustomApi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomAPIClient is the client API for CustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomAPIClient interface {
	// Get API endpoints
	//
	// x-displayName: "Get API endpoints"
	// Get all auto discovered API endpoints for App type
	APIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint
	//
	// x-displayName: "Get PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for App type
	APIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error)
	// Get override for all endpoints
	//
	// x-displayName: "Get Override"
	// Get all override for API endpoints configured for this App type
	Overrides(ctx context.Context, in *OverridesReq, opts ...grpc.CallOption) (*OverridesRsp, error)
	// Add override for dynamic endpoint
	//
	// x-displayName: "Add Override"
	// Add override for dynamic component for API endpoints discovered for this App type
	OverridePush(ctx context.Context, in *OverridePushReq, opts ...grpc.CallOption) (*OverridePushRsp, error)
	// remove override for dynamic endpoint
	//
	// x-displayName: "Remove Override"
	// remove override for dynamic component for API endpoints discovered for this App type
	OverridePop(ctx context.Context, in *OverridePopReq, opts ...grpc.CallOption) (*OverridePopRsp, error)
	// Get API endpoints Per Service
	//
	// x-displayName: "Get Service API Endpoints"
	// Get all autodiscovered API endpoints for Service
	GetServiceAPIEndpoints(ctx context.Context, in *ServiceAPIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint Per Service
	//
	// x-displayName: "Get Service API Endpoint PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for Service
	GetServiceAPIEndpointPDF(ctx context.Context, in *ServiceAPIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error)
	// Get Learnt Schema per API endpoint
	//
	// x-displayName: "Get Learnt Schema per API endpoint"
	// Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Service
	GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error)
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for App Type"
	// Get the corresponding Swagger spec for the given app type
	GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
}

type customAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIClient(cc *grpc.ClientConn) CustomAPIClient {
	return &customAPIClient{cc}
}

func (c *customAPIClient) APIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error) {
	out := new(APIEndpointsRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/APIEndpoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) APIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error) {
	out := new(APIEndpointPDFRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/APIEndpointPDF", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) Overrides(ctx context.Context, in *OverridesReq, opts ...grpc.CallOption) (*OverridesRsp, error) {
	out := new(OverridesRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/Overrides", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) OverridePush(ctx context.Context, in *OverridePushReq, opts ...grpc.CallOption) (*OverridePushRsp, error) {
	out := new(OverridePushRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/OverridePush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) OverridePop(ctx context.Context, in *OverridePopReq, opts ...grpc.CallOption) (*OverridePopRsp, error) {
	out := new(OverridePopRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/OverridePop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetServiceAPIEndpoints(ctx context.Context, in *ServiceAPIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error) {
	out := new(APIEndpointsRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetServiceAPIEndpointPDF(ctx context.Context, in *ServiceAPIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error) {
	out := new(APIEndpointPDFRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpointPDF", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error) {
	out := new(APIEndpointLearntSchemaRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetAPIEndpointLearntSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetSwaggerSpec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomAPIServer is the server API for CustomAPI service.
type CustomAPIServer interface {
	// Get API endpoints
	//
	// x-displayName: "Get API endpoints"
	// Get all auto discovered API endpoints for App type
	APIEndpoints(context.Context, *APIEndpointsReq) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint
	//
	// x-displayName: "Get PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for App type
	APIEndpointPDF(context.Context, *APIEndpointPDFReq) (*APIEndpointPDFRsp, error)
	// Get override for all endpoints
	//
	// x-displayName: "Get Override"
	// Get all override for API endpoints configured for this App type
	Overrides(context.Context, *OverridesReq) (*OverridesRsp, error)
	// Add override for dynamic endpoint
	//
	// x-displayName: "Add Override"
	// Add override for dynamic component for API endpoints discovered for this App type
	OverridePush(context.Context, *OverridePushReq) (*OverridePushRsp, error)
	// remove override for dynamic endpoint
	//
	// x-displayName: "Remove Override"
	// remove override for dynamic component for API endpoints discovered for this App type
	OverridePop(context.Context, *OverridePopReq) (*OverridePopRsp, error)
	// Get API endpoints Per Service
	//
	// x-displayName: "Get Service API Endpoints"
	// Get all autodiscovered API endpoints for Service
	GetServiceAPIEndpoints(context.Context, *ServiceAPIEndpointsReq) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint Per Service
	//
	// x-displayName: "Get Service API Endpoint PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for Service
	GetServiceAPIEndpointPDF(context.Context, *ServiceAPIEndpointPDFReq) (*APIEndpointPDFRsp, error)
	// Get Learnt Schema per API endpoint
	//
	// x-displayName: "Get Learnt Schema per API endpoint"
	// Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Service
	GetAPIEndpointLearntSchema(context.Context, *APIEndpointLearntSchemaReq) (*APIEndpointLearntSchemaRsp, error)
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for App Type"
	// Get the corresponding Swagger spec for the given app type
	GetSwaggerSpec(context.Context, *SwaggerSpecReq) (*httpbody.HttpBody, error)
}

// UnimplementedCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomAPIServer struct {
}

func (*UnimplementedCustomAPIServer) APIEndpoints(ctx context.Context, req *APIEndpointsReq) (*APIEndpointsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method APIEndpoints not implemented")
}
func (*UnimplementedCustomAPIServer) APIEndpointPDF(ctx context.Context, req *APIEndpointPDFReq) (*APIEndpointPDFRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method APIEndpointPDF not implemented")
}
func (*UnimplementedCustomAPIServer) Overrides(ctx context.Context, req *OverridesReq) (*OverridesRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Overrides not implemented")
}
func (*UnimplementedCustomAPIServer) OverridePush(ctx context.Context, req *OverridePushReq) (*OverridePushRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OverridePush not implemented")
}
func (*UnimplementedCustomAPIServer) OverridePop(ctx context.Context, req *OverridePopReq) (*OverridePopRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OverridePop not implemented")
}
func (*UnimplementedCustomAPIServer) GetServiceAPIEndpoints(ctx context.Context, req *ServiceAPIEndpointsReq) (*APIEndpointsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAPIEndpoints not implemented")
}
func (*UnimplementedCustomAPIServer) GetServiceAPIEndpointPDF(ctx context.Context, req *ServiceAPIEndpointPDFReq) (*APIEndpointPDFRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAPIEndpointPDF not implemented")
}
func (*UnimplementedCustomAPIServer) GetAPIEndpointLearntSchema(ctx context.Context, req *APIEndpointLearntSchemaReq) (*APIEndpointLearntSchemaRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIEndpointLearntSchema not implemented")
}
func (*UnimplementedCustomAPIServer) GetSwaggerSpec(ctx context.Context, req *SwaggerSpecReq) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwaggerSpec not implemented")
}

func RegisterCustomAPIServer(s *grpc.Server, srv CustomAPIServer) {
	s.RegisterService(&_CustomAPI_serviceDesc, srv)
}

func _CustomAPI_APIEndpoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).APIEndpoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/APIEndpoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).APIEndpoints(ctx, req.(*APIEndpointsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_APIEndpointPDF_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointPDFReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).APIEndpointPDF(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/APIEndpointPDF",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).APIEndpointPDF(ctx, req.(*APIEndpointPDFReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_Overrides_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverridesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).Overrides(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/Overrides",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).Overrides(ctx, req.(*OverridesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_OverridePush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverridePushReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).OverridePush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/OverridePush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).OverridePush(ctx, req.(*OverridePushReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_OverridePop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverridePopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).OverridePop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/OverridePop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).OverridePop(ctx, req.(*OverridePopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetServiceAPIEndpoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAPIEndpointsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetServiceAPIEndpoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetServiceAPIEndpoints(ctx, req.(*ServiceAPIEndpointsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetServiceAPIEndpointPDF_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAPIEndpointPDFReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetServiceAPIEndpointPDF(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpointPDF",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetServiceAPIEndpointPDF(ctx, req.(*ServiceAPIEndpointPDFReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetAPIEndpointLearntSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointLearntSchemaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetAPIEndpointLearntSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetAPIEndpointLearntSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetAPIEndpointLearntSchema(ctx, req.(*APIEndpointLearntSchemaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetSwaggerSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwaggerSpecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetSwaggerSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetSwaggerSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetSwaggerSpec(ctx, req.(*SwaggerSpecReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.app_type.CustomAPI",
	HandlerType: (*CustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "APIEndpoints",
			Handler:    _CustomAPI_APIEndpoints_Handler,
		},
		{
			MethodName: "APIEndpointPDF",
			Handler:    _CustomAPI_APIEndpointPDF_Handler,
		},
		{
			MethodName: "Overrides",
			Handler:    _CustomAPI_Overrides_Handler,
		},
		{
			MethodName: "OverridePush",
			Handler:    _CustomAPI_OverridePush_Handler,
		},
		{
			MethodName: "OverridePop",
			Handler:    _CustomAPI_OverridePop_Handler,
		},
		{
			MethodName: "GetServiceAPIEndpoints",
			Handler:    _CustomAPI_GetServiceAPIEndpoints_Handler,
		},
		{
			MethodName: "GetServiceAPIEndpointPDF",
			Handler:    _CustomAPI_GetServiceAPIEndpointPDF_Handler,
		},
		{
			MethodName: "GetAPIEndpointLearntSchema",
			Handler:    _CustomAPI_GetAPIEndpointLearntSchema_Handler,
		},
		{
			MethodName: "GetSwaggerSpec",
			Handler:    _CustomAPI_GetSwaggerSpec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/app_type/public_custom_api.proto",
}

func (m *APIEndpointsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiEndpointInfoRequest) > 0 {
		dAtA2 := make([]byte, len(m.ApiEndpointInfoRequest)*10)
		var j1 int
		for _, num := range m.ApiEndpointInfoRequest {
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SwaggerSpecReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SwaggerSpecReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SwaggerSpecRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SwaggerSpecRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SwaggerSpec) > 0 {
		i -= len(m.SwaggerSpec)
		copy(dAtA[i:], m.SwaggerSpec)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.SwaggerSpec)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ServiceAPIEndpointsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceAPIEndpointsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceAPIEndpointsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiEndpointInfoRequest) > 0 {
		dAtA4 := make([]byte, len(m.ApiEndpointInfoRequest)*10)
		var j3 int
		for _, num := range m.ApiEndpointInfoRequest {
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		i -= j3
		copy(dAtA[i:], dAtA4[:j3])
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(j3))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointsRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointsRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointsRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiepList) > 0 {
		for iNdEx := len(m.ApiepList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ApiepList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCustomApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointPDFReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointPDFReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointPDFReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Method) > 0 {
		i -= len(m.Method)
		copy(dAtA[i:], m.Method)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Method)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollapsedUrl) > 0 {
		i -= len(m.CollapsedUrl)
		copy(dAtA[i:], m.CollapsedUrl)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ServiceAPIEndpointPDFReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceAPIEndpointPDFReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceAPIEndpointPDFReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Method) > 0 {
		i -= len(m.Method)
		copy(dAtA[i:], m.Method)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Method)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CollapsedUrl) > 0 {
		i -= len(m.CollapsedUrl)
		copy(dAtA[i:], m.CollapsedUrl)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointPDFRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointPDFRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointPDFRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PdfInfo != nil {
		{
			size, err := m.PdfInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OverridesReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridesReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OverridesReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OverridesRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridesRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OverridesRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OverrideList) > 0 {
		for iNdEx := len(m.OverrideList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OverrideList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCustomApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *OverridePushReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePushReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OverridePushReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OverrideInfo != nil {
		{
			size, err := m.OverrideInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OverridePushRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePushRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OverridePushRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StatusMsg) > 0 {
		i -= len(m.StatusMsg)
		copy(dAtA[i:], m.StatusMsg)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.StatusMsg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status {
		i--
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OverridePopReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePopReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OverridePopReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OverridePopRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePopRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OverridePopRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StatusMsg) > 0 {
		i -= len(m.StatusMsg)
		copy(dAtA[i:], m.StatusMsg)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.StatusMsg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status {
		i--
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointLearntSchemaReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointLearntSchemaReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointLearntSchemaReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiEndpointInfoRequest) > 0 {
		dAtA8 := make([]byte, len(m.ApiEndpointInfoRequest)*10)
		var j7 int
		for _, num := range m.ApiEndpointInfoRequest {
			for num >= 1<<7 {
				dAtA8[j7] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j7++
			}
			dAtA8[j7] = uint8(num)
			j7++
		}
		i -= j7
		copy(dAtA[i:], dAtA8[:j7])
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(j7))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Method) > 0 {
		i -= len(m.Method)
		copy(dAtA[i:], m.Method)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Method)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollapsedUrl) > 0 {
		i -= len(m.CollapsedUrl)
		copy(dAtA[i:], m.CollapsedUrl)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppTypeName) > 0 {
		i -= len(m.AppTypeName)
		copy(dAtA[i:], m.AppTypeName)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointLearntSchemaRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointLearntSchemaRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointLearntSchemaRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PdfInfo != nil {
		{
			size, err := m.PdfInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.SensitiveData) > 0 {
		for iNdEx := len(m.SensitiveData) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SensitiveData[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCustomApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.DiscoveredSchema != nil {
		{
			size, err := m.DiscoveredSchema.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.InventoryOpenapiSpec) > 0 {
		i -= len(m.InventoryOpenapiSpec)
		copy(dAtA[i:], m.InventoryOpenapiSpec)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.InventoryOpenapiSpec)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ApiSpecs) > 0 {
		for k := range m.ApiSpecs {
			v := m.ApiSpecs[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintPublicCustomApi(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.DiscoveredOpenapiSpec) > 0 {
		i -= len(m.DiscoveredOpenapiSpec)
		copy(dAtA[i:], m.DiscoveredOpenapiSpec)
		i = encodeVarintPublicCustomApi(dAtA, i, uint64(len(m.DiscoveredOpenapiSpec)))
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func encodeVarintPublicCustomApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicCustomApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *APIEndpointsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		l = 0
		for _, e := range m.ApiEndpointInfoRequest {
			l += sovPublicCustomApi(uint64(e))
		}
		n += 1 + sovPublicCustomApi(uint64(l)) + l
	}
	return n
}

func (m *SwaggerSpecReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *SwaggerSpecRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SwaggerSpec)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *ServiceAPIEndpointsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		l = 0
		for _, e := range m.ApiEndpointInfoRequest {
			l += sovPublicCustomApi(uint64(e))
		}
		n += 1 + sovPublicCustomApi(uint64(l)) + l
	}
	return n
}

func (m *APIEndpointsRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ApiepList) > 0 {
		for _, e := range m.ApiepList {
			l = e.Size()
			n += 1 + l + sovPublicCustomApi(uint64(l))
		}
	}
	return n
}

func (m *APIEndpointPDFReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *ServiceAPIEndpointPDFReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *APIEndpointPDFRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PdfInfo != nil {
		l = m.PdfInfo.Size()
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *OverridesReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *OverridesRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OverrideList) > 0 {
		for _, e := range m.OverrideList {
			l = e.Size()
			n += 1 + l + sovPublicCustomApi(uint64(l))
		}
	}
	return n
}

func (m *OverridePushReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	if m.OverrideInfo != nil {
		l = m.OverrideInfo.Size()
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *OverridePushRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	l = len(m.StatusMsg)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *OverridePopReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *OverridePopRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	l = len(m.StatusMsg)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func (m *APIEndpointLearntSchemaReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		l = 0
		for _, e := range m.ApiEndpointInfoRequest {
			l += sovPublicCustomApi(uint64(e))
		}
		n += 1 + sovPublicCustomApi(uint64(l)) + l
	}
	return n
}

func (m *APIEndpointLearntSchemaRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DiscoveredOpenapiSpec)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	if len(m.ApiSpecs) > 0 {
		for k, v := range m.ApiSpecs {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovPublicCustomApi(uint64(len(k))) + 1 + len(v) + sovPublicCustomApi(uint64(len(v)))
			n += mapEntrySize + 1 + sovPublicCustomApi(uint64(mapEntrySize))
		}
	}
	l = len(m.InventoryOpenapiSpec)
	if l > 0 {
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	if m.DiscoveredSchema != nil {
		l = m.DiscoveredSchema.Size()
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	if len(m.SensitiveData) > 0 {
		for _, e := range m.SensitiveData {
			l = e.Size()
			n += 1 + l + sovPublicCustomApi(uint64(l))
		}
	}
	if m.PdfInfo != nil {
		l = m.PdfInfo.Size()
		n += 1 + l + sovPublicCustomApi(uint64(l))
	}
	return n
}

func sovPublicCustomApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicCustomApi(x uint64) (n int) {
	return sovPublicCustomApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *APIEndpointsReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointsReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ApiEndpointInfoRequest:` + fmt.Sprintf("%v", this.ApiEndpointInfoRequest) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SwaggerSpecReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SwaggerSpecRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecRsp{`,
		`SwaggerSpec:` + fmt.Sprintf("%v", this.SwaggerSpec) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceAPIEndpointsReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceAPIEndpointsReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ServiceName:` + fmt.Sprintf("%v", this.ServiceName) + `,`,
		`ApiEndpointInfoRequest:` + fmt.Sprintf("%v", this.ApiEndpointInfoRequest) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointsRsp) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForApiepList := "[]*APIEPInfo{"
	for _, f := range this.ApiepList {
		repeatedStringForApiepList += strings.Replace(fmt.Sprintf("%v", f), "APIEPInfo", "APIEPInfo", 1) + ","
	}
	repeatedStringForApiepList += "}"
	s := strings.Join([]string{`&APIEndpointsRsp{`,
		`ApiepList:` + repeatedStringForApiepList + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointPDFReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointPDFReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceAPIEndpointPDFReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceAPIEndpointPDFReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ServiceName:` + fmt.Sprintf("%v", this.ServiceName) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointPDFRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointPDFRsp{`,
		`PdfInfo:` + strings.Replace(fmt.Sprintf("%v", this.PdfInfo), "APIEPPDFInfo", "APIEPPDFInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridesReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridesReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridesRsp) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForOverrideList := "[]*OverrideInfo{"
	for _, f := range this.OverrideList {
		repeatedStringForOverrideList += strings.Replace(fmt.Sprintf("%v", f), "OverrideInfo", "OverrideInfo", 1) + ","
	}
	repeatedStringForOverrideList += "}"
	s := strings.Join([]string{`&OverridesRsp{`,
		`OverrideList:` + repeatedStringForOverrideList + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePushReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePushReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`OverrideInfo:` + strings.Replace(fmt.Sprintf("%v", this.OverrideInfo), "OverrideInfo", "OverrideInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePushRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePushRsp{`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`StatusMsg:` + fmt.Sprintf("%v", this.StatusMsg) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePopReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePopReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePopRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePopRsp{`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`StatusMsg:` + fmt.Sprintf("%v", this.StatusMsg) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointLearntSchemaReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointLearntSchemaReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`ApiEndpointInfoRequest:` + fmt.Sprintf("%v", this.ApiEndpointInfoRequest) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointLearntSchemaRsp) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForSensitiveData := "[]*SensitiveData{"
	for _, f := range this.SensitiveData {
		repeatedStringForSensitiveData += strings.Replace(fmt.Sprintf("%v", f), "SensitiveData", "SensitiveData", 1) + ","
	}
	repeatedStringForSensitiveData += "}"
	keysForApiSpecs := make([]string, 0, len(this.ApiSpecs))
	for k, _ := range this.ApiSpecs {
		keysForApiSpecs = append(keysForApiSpecs, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForApiSpecs)
	mapStringForApiSpecs := "map[string]string{"
	for _, k := range keysForApiSpecs {
		mapStringForApiSpecs += fmt.Sprintf("%v: %v,", k, this.ApiSpecs[k])
	}
	mapStringForApiSpecs += "}"
	s := strings.Join([]string{`&APIEndpointLearntSchemaRsp{`,
		`DiscoveredOpenapiSpec:` + fmt.Sprintf("%v", this.DiscoveredOpenapiSpec) + `,`,
		`ApiSpecs:` + mapStringForApiSpecs + `,`,
		`InventoryOpenapiSpec:` + fmt.Sprintf("%v", this.InventoryOpenapiSpec) + `,`,
		`DiscoveredSchema:` + strings.Replace(fmt.Sprintf("%v", this.DiscoveredSchema), "DiscoveredSchema", "DiscoveredSchema", 1) + `,`,
		`SensitiveData:` + repeatedStringForSensitiveData + `,`,
		`PdfInfo:` + strings.Replace(fmt.Sprintf("%v", this.PdfInfo), "APIEPPDFInfo", "APIEPPDFInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicCustomApi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *APIEndpointsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v ApiEndpointInfoRequest
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= ApiEndpointInfoRequest(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthPublicCustomApi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthPublicCustomApi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.ApiEndpointInfoRequest) == 0 {
					m.ApiEndpointInfoRequest = make([]ApiEndpointInfoRequest, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v ApiEndpointInfoRequest
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPublicCustomApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= ApiEndpointInfoRequest(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpointInfoRequest", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SwaggerSpecReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SwaggerSpecRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwaggerSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwaggerSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServiceAPIEndpointsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceAPIEndpointsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceAPIEndpointsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v ApiEndpointInfoRequest
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= ApiEndpointInfoRequest(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthPublicCustomApi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthPublicCustomApi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.ApiEndpointInfoRequest) == 0 {
					m.ApiEndpointInfoRequest = make([]ApiEndpointInfoRequest, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v ApiEndpointInfoRequest
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPublicCustomApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= ApiEndpointInfoRequest(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpointInfoRequest", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointsRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointsRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointsRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiepList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiepList = append(m.ApiepList, &APIEPInfo{})
			if err := m.ApiepList[len(m.ApiepList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointPDFReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointPDFReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointPDFReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServiceAPIEndpointPDFReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceAPIEndpointPDFReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceAPIEndpointPDFReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointPDFRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointPDFRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointPDFRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PdfInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PdfInfo == nil {
				m.PdfInfo = &APIEPPDFInfo{}
			}
			if err := m.PdfInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridesReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridesReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridesReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridesRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridesRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridesRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OverrideList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OverrideList = append(m.OverrideList, &OverrideInfo{})
			if err := m.OverrideList[len(m.OverrideList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePushReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePushReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePushReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OverrideInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OverrideInfo == nil {
				m.OverrideInfo = &OverrideInfo{}
			}
			if err := m.OverrideInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePushRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePushRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePushRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePopReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePopReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePopReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePopRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePopRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePopRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointLearntSchemaReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v ApiEndpointInfoRequest
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= ApiEndpointInfoRequest(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthPublicCustomApi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthPublicCustomApi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.ApiEndpointInfoRequest) == 0 {
					m.ApiEndpointInfoRequest = make([]ApiEndpointInfoRequest, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v ApiEndpointInfoRequest
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPublicCustomApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= ApiEndpointInfoRequest(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpointInfoRequest", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointLearntSchemaRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscoveredOpenapiSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DiscoveredOpenapiSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiSpecs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiSpecs == nil {
				m.ApiSpecs = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPublicCustomApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthPublicCustomApi
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthPublicCustomApi
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPublicCustomApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthPublicCustomApi
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthPublicCustomApi
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthPublicCustomApi
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.ApiSpecs[mapkey] = mapvalue
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InventoryOpenapiSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InventoryOpenapiSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscoveredSchema", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DiscoveredSchema == nil {
				m.DiscoveredSchema = &DiscoveredSchema{}
			}
			if err := m.DiscoveredSchema.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SensitiveData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SensitiveData = append(m.SensitiveData, &SensitiveData{})
			if err := m.SensitiveData[len(m.SensitiveData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PdfInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PdfInfo == nil {
				m.PdfInfo = &APIEPPDFInfo{}
			}
			if err := m.PdfInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicCustomApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicCustomApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicCustomApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicCustomApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicCustomApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicCustomApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicCustomApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicCustomApi = fmt.Errorf("proto: unexpected end of group")
)
