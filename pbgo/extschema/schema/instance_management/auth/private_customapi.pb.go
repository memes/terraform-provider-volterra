// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/instance_management/auth/private_customapi.proto

// Auth Private Custom API
//
// x-displayName: "Auth Private Custom API"
// Custom API for authentication enablement.

package auth

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	api_credential "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/api_credential"
	tenant "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/tenant"
	user "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/user"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// LookupAuthConfigRequest
//
// x-displayName: "Lookup Auth Config Request"
// Request for LookupAuthConfig private API
type LookupAuthConfigRequest struct {
	Cname string `protobuf:"bytes,1,opt,name=cname,proto3" json:"cname,omitempty"`
}

func (m *LookupAuthConfigRequest) Reset()      { *m = LookupAuthConfigRequest{} }
func (*LookupAuthConfigRequest) ProtoMessage() {}
func (*LookupAuthConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa75d3c433a63ab4, []int{0}
}
func (m *LookupAuthConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LookupAuthConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LookupAuthConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LookupAuthConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupAuthConfigRequest.Merge(m, src)
}
func (m *LookupAuthConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *LookupAuthConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupAuthConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupAuthConfigRequest proto.InternalMessageInfo

func (m *LookupAuthConfigRequest) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

// LookupAuthConfigResponse
//
// x-displayName: "Lookup Auth Config Response"
// Response for LookupAuthConfig private API
type LookupAuthConfigResponse struct {
	// ResponseStatus
	//
	// x-displayName: "response_status"
	// ResponseStatus to identify the status of the response
	ResponseStatus *schema.ResponseMeta `protobuf:"bytes,1,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	// auth
	//
	// x-displayName: "Auth"
	// Auth holds the secret auths for GetAuthConfigByCname private API response
	Auth *Auth `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	// session
	//
	// x-displayName: "Session"
	// Session holds the Session for GetAuthConfigByCname private API response
	Session *Session `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
}

func (m *LookupAuthConfigResponse) Reset()      { *m = LookupAuthConfigResponse{} }
func (*LookupAuthConfigResponse) ProtoMessage() {}
func (*LookupAuthConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa75d3c433a63ab4, []int{1}
}
func (m *LookupAuthConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LookupAuthConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LookupAuthConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LookupAuthConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupAuthConfigResponse.Merge(m, src)
}
func (m *LookupAuthConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *LookupAuthConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupAuthConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupAuthConfigResponse proto.InternalMessageInfo

func (m *LookupAuthConfigResponse) GetResponseStatus() *schema.ResponseMeta {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

func (m *LookupAuthConfigResponse) GetAuth() *Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *LookupAuthConfigResponse) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

// LookupUserStatusRequest
//
// x-displayName: "Lookup User Status Request"
type LookupUserStatusRequest struct {
	// cname
	//
	// x-displayName: "Cname"
	// x-required
	// x-example: "volterra"
	// Cname will denote the cname of the tenant
	// for which the tenant allocation needs to be fetched.
	Cname string `protobuf:"bytes,1,opt,name=cname,proto3" json:"cname,omitempty"`
	// email
	//
	// x-displayName: "Email"
	// x-required
	// x-example: "user@f5.com"
	// Email of a user which belongs to the tenant.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (m *LookupUserStatusRequest) Reset()      { *m = LookupUserStatusRequest{} }
func (*LookupUserStatusRequest) ProtoMessage() {}
func (*LookupUserStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa75d3c433a63ab4, []int{2}
}
func (m *LookupUserStatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LookupUserStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LookupUserStatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LookupUserStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserStatusRequest.Merge(m, src)
}
func (m *LookupUserStatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *LookupUserStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserStatusRequest proto.InternalMessageInfo

func (m *LookupUserStatusRequest) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

func (m *LookupUserStatusRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// LookupUserStatusResponse
//
// x-displayName: "Lookup User Status Response"
type LookupUserStatusResponse struct {
	// ResponseStatus
	//
	// x-displayName: "response_status"
	// ResponseStatus to identify the status of the response
	ResponseStatus *schema.ResponseMeta `protobuf:"bytes,1,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	// action
	//
	// x-displayName: "Action"
	// x-example: "OperActionFreemiumSsoSignup"
	// The recommended operational action for the tenant
	Action tenant.OperAction `protobuf:"varint,2,opt,name=action,proto3,enum=ves.io.schema.tenant.OperAction" json:"action,omitempty"`
	// tenant_id
	//
	// x-displayName: "TenantId"
	// x-example: "abc-def"
	// TenantId will denote the name of the tenant.
	TenantId string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// instance_name
	//
	// x-displayName: "InstanceName"
	// x-example: "gc-0"
	// Name of the f5xc instance to which the tenant is allocated.
	InstanceName string `protobuf:"bytes,4,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	// tenant_status
	//
	// x-displayName: "TenantStatus"
	// x-example: "OperStatusActive"
	// State of the tenant.
	TenantStatus tenant.OperStatus `protobuf:"varint,5,opt,name=tenant_status,json=tenantStatus,proto3,enum=ves.io.schema.tenant.OperStatus" json:"tenant_status,omitempty"`
	// user_idm_type
	//
	// x-displayName: "UserIdmType"
	// x-example: "VOLTERRA_MANAGED"
	// Idm type of the user.
	UserIdmType user.IdmType `protobuf:"varint,6,opt,name=user_idm_type,json=userIdmType,proto3,enum=ves.io.schema.user.IdmType" json:"user_idm_type,omitempty"`
	// user_status
	//
	// x-displayName: "UserStatus"
	// x-example: "OperStatusActive"
	// State of the user.
	UserStatus user.OperStatus `protobuf:"varint,7,opt,name=user_status,json=userStatus,proto3,enum=ves.io.schema.user.OperStatus" json:"user_status,omitempty"`
}

func (m *LookupUserStatusResponse) Reset()      { *m = LookupUserStatusResponse{} }
func (*LookupUserStatusResponse) ProtoMessage() {}
func (*LookupUserStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa75d3c433a63ab4, []int{3}
}
func (m *LookupUserStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LookupUserStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LookupUserStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LookupUserStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserStatusResponse.Merge(m, src)
}
func (m *LookupUserStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *LookupUserStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserStatusResponse proto.InternalMessageInfo

func (m *LookupUserStatusResponse) GetResponseStatus() *schema.ResponseMeta {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

func (m *LookupUserStatusResponse) GetAction() tenant.OperAction {
	if m != nil {
		return m.Action
	}
	return tenant.OperActionNone
}

func (m *LookupUserStatusResponse) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *LookupUserStatusResponse) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *LookupUserStatusResponse) GetTenantStatus() tenant.OperStatus {
	if m != nil {
		return m.TenantStatus
	}
	return tenant.OperStatusUndefined
}

func (m *LookupUserStatusResponse) GetUserIdmType() user.IdmType {
	if m != nil {
		return m.UserIdmType
	}
	return user.SSO
}

func (m *LookupUserStatusResponse) GetUserStatus() user.OperStatus {
	if m != nil {
		return m.UserStatus
	}
	return user.OperStatusUndefined
}

// ValidateAPICredentialRequest
//
// x-displayName: "Validate API Credential"
// API Credential validate request
type ValidateAPICredentialRequest struct {
	// Token
	//
	// x-displayName: "Token"
	// x-required
	// unique identifier of for the type of credential.
	// in case of API token, its the token itself and in case of
	// API certificate its the serial number.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *ValidateAPICredentialRequest) Reset()      { *m = ValidateAPICredentialRequest{} }
func (*ValidateAPICredentialRequest) ProtoMessage() {}
func (*ValidateAPICredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa75d3c433a63ab4, []int{4}
}
func (m *ValidateAPICredentialRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateAPICredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateAPICredentialRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateAPICredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateAPICredentialRequest.Merge(m, src)
}
func (m *ValidateAPICredentialRequest) XXX_Size() int {
	return m.Size()
}
func (m *ValidateAPICredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateAPICredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateAPICredentialRequest proto.InternalMessageInfo

func (m *ValidateAPICredentialRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// ValidateAPICredentialResponse
//
// x-displayName: "API credential validate response"
// API Credential validate response
type ValidateAPICredentialResponse struct {
	// ResponseStatus
	//
	// x-displayName: "response_status"
	// ResponseStatus to identify the status of the response
	ResponseStatus *schema.ResponseMeta `protobuf:"bytes,1,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	// Valid
	//
	// x-displayName: "valid"
	// Result of validation.
	Valid bool `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	// UserName
	//
	// x-displayName: "user_name"
	// User name is the user associated to this credential.
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// TenantId
	//
	// x-displayName: "tenant_id"
	// Tenant id in which this credential is issued.
	TenantId string `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Credential Type
	//
	// x-displayName: "cred_type"
	// Type of API credential.
	CredType api_credential.APICredentialType `protobuf:"varint,5,opt,name=cred_type,json=credType,proto3,enum=ves.io.schema.api_credential.APICredentialType" json:"cred_type,omitempty"`
	// InstanceName
	//
	// x-displayName: "instance_name"
	// F5XC instance to which the tenant belongs.
	InstanceName string `protobuf:"bytes,6,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
}

func (m *ValidateAPICredentialResponse) Reset()      { *m = ValidateAPICredentialResponse{} }
func (*ValidateAPICredentialResponse) ProtoMessage() {}
func (*ValidateAPICredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa75d3c433a63ab4, []int{5}
}
func (m *ValidateAPICredentialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateAPICredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateAPICredentialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateAPICredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateAPICredentialResponse.Merge(m, src)
}
func (m *ValidateAPICredentialResponse) XXX_Size() int {
	return m.Size()
}
func (m *ValidateAPICredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateAPICredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateAPICredentialResponse proto.InternalMessageInfo

func (m *ValidateAPICredentialResponse) GetResponseStatus() *schema.ResponseMeta {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

func (m *ValidateAPICredentialResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ValidateAPICredentialResponse) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ValidateAPICredentialResponse) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ValidateAPICredentialResponse) GetCredType() api_credential.APICredentialType {
	if m != nil {
		return m.CredType
	}
	return api_credential.API_CERTIFICATE
}

func (m *ValidateAPICredentialResponse) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func init() {
	proto.RegisterType((*LookupAuthConfigRequest)(nil), "ves.io.schema.instance_management.auth.LookupAuthConfigRequest")
	golang_proto.RegisterType((*LookupAuthConfigRequest)(nil), "ves.io.schema.instance_management.auth.LookupAuthConfigRequest")
	proto.RegisterType((*LookupAuthConfigResponse)(nil), "ves.io.schema.instance_management.auth.LookupAuthConfigResponse")
	golang_proto.RegisterType((*LookupAuthConfigResponse)(nil), "ves.io.schema.instance_management.auth.LookupAuthConfigResponse")
	proto.RegisterType((*LookupUserStatusRequest)(nil), "ves.io.schema.instance_management.auth.LookupUserStatusRequest")
	golang_proto.RegisterType((*LookupUserStatusRequest)(nil), "ves.io.schema.instance_management.auth.LookupUserStatusRequest")
	proto.RegisterType((*LookupUserStatusResponse)(nil), "ves.io.schema.instance_management.auth.LookupUserStatusResponse")
	golang_proto.RegisterType((*LookupUserStatusResponse)(nil), "ves.io.schema.instance_management.auth.LookupUserStatusResponse")
	proto.RegisterType((*ValidateAPICredentialRequest)(nil), "ves.io.schema.instance_management.auth.ValidateAPICredentialRequest")
	golang_proto.RegisterType((*ValidateAPICredentialRequest)(nil), "ves.io.schema.instance_management.auth.ValidateAPICredentialRequest")
	proto.RegisterType((*ValidateAPICredentialResponse)(nil), "ves.io.schema.instance_management.auth.ValidateAPICredentialResponse")
	golang_proto.RegisterType((*ValidateAPICredentialResponse)(nil), "ves.io.schema.instance_management.auth.ValidateAPICredentialResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/instance_management/auth/private_customapi.proto", fileDescriptor_aa75d3c433a63ab4)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/instance_management/auth/private_customapi.proto", fileDescriptor_aa75d3c433a63ab4)
}

var fileDescriptor_aa75d3c433a63ab4 = []byte{
	// 948 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcf, 0x6f, 0x23, 0x35,
	0x14, 0x8e, 0xd3, 0x24, 0x6d, 0xdc, 0x1f, 0x54, 0x23, 0x10, 0x21, 0x2d, 0xa3, 0x32, 0x20, 0xb4,
	0x42, 0x74, 0x2c, 0x15, 0x0e, 0x08, 0xad, 0xe8, 0xaf, 0xed, 0x21, 0xda, 0x05, 0xaa, 0x59, 0xe0,
	0x50, 0x21, 0x05, 0x67, 0xe2, 0x4e, 0xad, 0x66, 0xec, 0xc1, 0xf6, 0x44, 0xf4, 0x80, 0xb4, 0x82,
	0x7f, 0x00, 0x69, 0x25, 0x0e, 0x70, 0x46, 0xda, 0xbf, 0x01, 0x2e, 0xe5, 0xc6, 0xb1, 0x12, 0x97,
	0xbd, 0x41, 0x13, 0x0e, 0x70, 0x40, 0xda, 0x3f, 0x01, 0xd9, 0x9e, 0x29, 0x99, 0xa4, 0xbb, 0x4d,
	0x77, 0xf7, 0x36, 0xf6, 0xe7, 0xef, 0xe5, 0xf9, 0xfb, 0xde, 0x7b, 0x0e, 0xfc, 0xa0, 0x4f, 0xa4,
	0x4f, 0x39, 0x92, 0xe1, 0x11, 0x89, 0x31, 0xa2, 0x4c, 0x2a, 0xcc, 0x42, 0xd2, 0x8e, 0x31, 0xc3,
	0x11, 0x89, 0x09, 0x53, 0x08, 0xa7, 0xea, 0x08, 0x25, 0x82, 0xf6, 0xb1, 0x22, 0xed, 0x30, 0x95,
	0x8a, 0xc7, 0x38, 0xa1, 0x7e, 0x22, 0xb8, 0xe2, 0xce, 0x9b, 0x96, 0xef, 0x5b, 0xbe, 0x7f, 0x09,
	0xdf, 0xd7, 0xfc, 0xe6, 0x7a, 0x44, 0xd5, 0x51, 0xda, 0xf1, 0x43, 0x1e, 0xa3, 0x88, 0x47, 0x1c,
	0x19, 0x7a, 0x27, 0x3d, 0x34, 0x2b, 0xb3, 0x30, 0x5f, 0x36, 0x6c, 0x73, 0x35, 0xe2, 0x3c, 0xea,
	0x11, 0x84, 0x13, 0x8a, 0x30, 0x63, 0x5c, 0x61, 0x45, 0x39, 0x93, 0x19, 0x7a, 0xa3, 0x98, 0x34,
	0x4e, 0x68, 0x3b, 0x14, 0xa4, 0x4b, 0x98, 0xa2, 0xb8, 0x87, 0xd4, 0x49, 0x42, 0xf2, 0x93, 0x1b,
	0x53, 0x5e, 0x6f, 0x94, 0xb3, 0x52, 0xe4, 0xf0, 0x64, 0xf4, 0xa7, 0xd7, 0x8a, 0xa0, 0x22, 0x0c,
	0x33, 0x55, 0xa0, 0xbf, 0x32, 0x76, 0x62, 0x04, 0x72, 0x8b, 0x50, 0x2a, 0x89, 0x28, 0xe0, 0xab,
	0x45, 0xbc, 0x8f, 0x7b, 0xb4, 0x8b, 0x15, 0xc9, 0x50, 0x6f, 0x0c, 0x25, 0x92, 0xb0, 0x7e, 0x31,
	0x3d, 0xef, 0x26, 0x7c, 0xf9, 0x0e, 0xe7, 0xc7, 0x69, 0xb2, 0x9d, 0xaa, 0xa3, 0x5d, 0xce, 0x0e,
	0x69, 0x14, 0x90, 0x2f, 0x53, 0x22, 0x95, 0xf3, 0x1a, 0xac, 0x86, 0x0c, 0xc7, 0xa4, 0x01, 0xd6,
	0xc0, 0x8d, 0xfa, 0xce, 0xfc, 0xcf, 0xff, 0x9c, 0xce, 0xd4, 0x44, 0x65, 0x19, 0x34, 0xb6, 0x02,
	0x8b, 0x78, 0xff, 0x02, 0xd8, 0x98, 0xa4, 0xcb, 0x84, 0x33, 0x49, 0x9c, 0x5b, 0xf0, 0x05, 0x91,
	0x7d, 0xb7, 0xa5, 0xc2, 0x2a, 0x95, 0x26, 0xd2, 0xfc, 0xc6, 0x8a, 0x5f, 0xac, 0x81, 0x9c, 0xf1,
	0x21, 0x51, 0x38, 0x58, 0xca, 0x39, 0x77, 0x0d, 0xc5, 0xd9, 0x82, 0x15, 0x2d, 0x78, 0xa3, 0x6c,
	0xa8, 0x6f, 0xfb, 0xd3, 0x95, 0x8f, 0xaf, 0xf3, 0x09, 0x0c, 0xd3, 0x69, 0xc1, 0x59, 0x49, 0xa4,
	0xa4, 0x9c, 0x35, 0x66, 0x4c, 0x10, 0x34, 0x6d, 0x90, 0xbb, 0x96, 0x16, 0xe4, 0x7c, 0xaf, 0x93,
	0xab, 0xf5, 0xa9, 0x24, 0xc2, 0x26, 0x38, 0xbd, 0x5a, 0xce, 0x1b, 0xb0, 0x4a, 0x62, 0x4c, 0x7b,
	0xe6, 0x2e, 0xf5, 0x9d, 0x25, 0x7d, 0xa4, 0x2e, 0x66, 0x97, 0x41, 0xe3, 0x5e, 0xf9, 0x0b, 0x10,
	0x58, 0xd0, 0xfb, 0x69, 0x26, 0xd7, 0x74, 0xf4, 0x47, 0x9e, 0xab, 0xa6, 0xef, 0xc1, 0x1a, 0x0e,
	0x75, 0x15, 0x98, 0x4c, 0x96, 0x36, 0xd6, 0xc6, 0xc8, 0xb6, 0x48, 0xfd, 0x8f, 0x13, 0x22, 0xb6,
	0xcd, 0xb9, 0x20, 0x3b, 0xef, 0xac, 0xc0, 0xba, 0x05, 0xdb, 0xb4, 0x6b, 0xd4, 0xac, 0x07, 0x73,
	0x76, 0xa3, 0xd5, 0x75, 0x5e, 0x87, 0x8b, 0x17, 0x52, 0x1a, 0x29, 0x2a, 0xe6, 0xc0, 0x42, 0xbe,
	0xf9, 0x91, 0x16, 0x61, 0x0f, 0x2e, 0x66, 0x11, 0xb2, 0xfc, 0xab, 0x57, 0xa5, 0x90, 0x49, 0xb0,
	0x60, 0xb7, 0xb2, 0x2b, 0x6c, 0xc2, 0x45, 0xdd, 0x0d, 0x6d, 0xda, 0x8d, 0xdb, 0xba, 0x23, 0x1a,
	0x35, 0x13, 0x66, 0x5c, 0x06, 0x7d, 0xc6, 0x6f, 0x75, 0xe3, 0x4f, 0x4e, 0x12, 0x12, 0xcc, 0xeb,
	0x55, 0xb6, 0x70, 0x36, 0xa1, 0x59, 0xe6, 0x59, 0xcc, 0x1a, 0xba, 0x7b, 0x19, 0x7d, 0x24, 0x07,
	0x98, 0x5e, 0x58, 0xe2, 0xed, 0xc0, 0xd5, 0xcf, 0xb2, 0x7e, 0xdb, 0xde, 0x6f, 0xed, 0x5e, 0x8c,
	0x93, 0xbc, 0x20, 0x3c, 0x58, 0x55, 0xfc, 0x98, 0xb0, 0xac, 0x20, 0x16, 0xb4, 0xdb, 0xb3, 0xa2,
	0x6a, 0xdc, 0x0e, 0x2c, 0xe4, 0x3d, 0x28, 0xc3, 0x57, 0x1f, 0x13, 0xe4, 0xb9, 0x1a, 0xfe, 0x22,
	0xac, 0x9a, 0xd9, 0x60, 0xfc, 0x9e, 0x0b, 0xec, 0x42, 0x9b, 0x69, 0x24, 0x30, 0x5e, 0x65, 0x66,
	0xea, 0x0d, 0xe3, 0x53, 0xc1, 0xe9, 0xca, 0x98, 0xd3, 0x77, 0x60, 0x5d, 0xcf, 0x4f, 0xab, 0xbc,
	0x35, 0x70, 0xbc, 0xa9, 0x8a, 0x33, 0xd6, 0x2f, 0xdc, 0xce, 0xb8, 0x31, 0xa7, 0x51, 0x63, 0xc5,
	0x44, 0xdd, 0xd4, 0x26, 0xeb, 0x66, 0xe3, 0x8f, 0x1a, 0x5c, 0xde, 0x35, 0x6f, 0xc9, 0xbe, 0x7d,
	0x59, 0xb6, 0xf7, 0x5b, 0xce, 0x8f, 0x65, 0xb8, 0x3c, 0x3e, 0x7f, 0x9c, 0xcd, 0x69, 0xdb, 0xfb,
	0x31, 0x83, 0xaf, 0xb9, 0xf5, 0xf4, 0x01, 0xac, 0xea, 0xde, 0xb7, 0xe0, 0x9b, 0xdf, 0xff, 0xba,
	0x5f, 0xfe, 0xda, 0x79, 0x37, 0x7f, 0x07, 0x91, 0x7d, 0x07, 0x91, 0xbe, 0x9f, 0x4c, 0x70, 0x48,
	0x24, 0x92, 0x27, 0x52, 0x91, 0x38, 0x7f, 0x11, 0x74, 0xc0, 0x76, 0x68, 0xc2, 0x1c, 0xec, 0x39,
	0xbb, 0xa8, 0x90, 0x02, 0xa2, 0x4c, 0x09, 0x2e, 0x13, 0x12, 0x2a, 0x24, 0x08, 0xee, 0x4e, 0x15,
	0xc6, 0x19, 0x80, 0x5c, 0x9d, 0xff, 0x27, 0xc9, 0x75, 0xd5, 0x99, 0x18, 0x74, 0xd7, 0x55, 0x67,
	0x72, 0x88, 0x79, 0xb7, 0x8d, 0x38, 0xcf, 0x70, 0xc9, 0x91, 0xc6, 0x75, 0x7e, 0x2d, 0xc3, 0x97,
	0x2e, 0x6d, 0x21, 0xe7, 0xd6, 0xb4, 0x89, 0x3e, 0xa9, 0x8d, 0x9b, 0x7b, 0xcf, 0x18, 0x25, 0xbb,
	0xf3, 0x0f, 0xb6, 0x22, 0xee, 0x03, 0xef, 0xe6, 0xd5, 0x25, 0x51, 0xec, 0x1d, 0x99, 0xbf, 0xeb,
	0x94, 0xb3, 0xf7, 0xc1, 0x5b, 0x07, 0xfb, 0xde, 0xed, 0x6b, 0x0b, 0xf7, 0xc4, 0x88, 0xcd, 0xca,
	0xe9, 0x2f, 0xa0, 0xb2, 0xf3, 0x3d, 0x38, 0x3b, 0x77, 0x4b, 0x0f, 0xcf, 0xdd, 0xd2, 0xa3, 0x73,
	0x17, 0xdc, 0x1b, 0xb8, 0xe0, 0xc1, 0xc0, 0x05, 0xbf, 0x0d, 0x5c, 0x70, 0x36, 0x70, 0xc1, 0x9f,
	0x03, 0x17, 0xfc, 0x3d, 0x70, 0x4b, 0x8f, 0x06, 0x2e, 0xf8, 0x6e, 0xe8, 0x96, 0x4e, 0x87, 0x2e,
	0x38, 0x1b, 0xba, 0xa5, 0x87, 0x43, 0xb7, 0x74, 0xf0, 0x79, 0xc4, 0x93, 0xe3, 0xc8, 0xef, 0xf3,
	0x9e, 0x22, 0x42, 0xe8, 0xb9, 0x89, 0xcc, 0xc7, 0x21, 0x17, 0xf1, 0x7a, 0x22, 0x78, 0x9f, 0x76,
	0x89, 0x58, 0xcf, 0x61, 0x94, 0x74, 0x22, 0x8e, 0xc8, 0x57, 0x2a, 0x4b, 0xff, 0x8a, 0xff, 0x5a,
	0x9d, 0x9a, 0xf9, 0xab, 0xf2, 0xce, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x57, 0x7e, 0xe6,
	0x7b, 0x0a, 0x00, 0x00,
}

func (this *LookupAuthConfigRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LookupAuthConfigRequest)
	if !ok {
		that2, ok := that.(LookupAuthConfigRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Cname != that1.Cname {
		return false
	}
	return true
}
func (this *LookupAuthConfigResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LookupAuthConfigResponse)
	if !ok {
		that2, ok := that.(LookupAuthConfigResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ResponseStatus.Equal(that1.ResponseStatus) {
		return false
	}
	if !this.Auth.Equal(that1.Auth) {
		return false
	}
	if !this.Session.Equal(that1.Session) {
		return false
	}
	return true
}
func (this *LookupUserStatusRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LookupUserStatusRequest)
	if !ok {
		that2, ok := that.(LookupUserStatusRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Cname != that1.Cname {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	return true
}
func (this *LookupUserStatusResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LookupUserStatusResponse)
	if !ok {
		that2, ok := that.(LookupUserStatusResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ResponseStatus.Equal(that1.ResponseStatus) {
		return false
	}
	if this.Action != that1.Action {
		return false
	}
	if this.TenantId != that1.TenantId {
		return false
	}
	if this.InstanceName != that1.InstanceName {
		return false
	}
	if this.TenantStatus != that1.TenantStatus {
		return false
	}
	if this.UserIdmType != that1.UserIdmType {
		return false
	}
	if this.UserStatus != that1.UserStatus {
		return false
	}
	return true
}
func (this *ValidateAPICredentialRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ValidateAPICredentialRequest)
	if !ok {
		that2, ok := that.(ValidateAPICredentialRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Token != that1.Token {
		return false
	}
	return true
}
func (this *ValidateAPICredentialResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ValidateAPICredentialResponse)
	if !ok {
		that2, ok := that.(ValidateAPICredentialResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ResponseStatus.Equal(that1.ResponseStatus) {
		return false
	}
	if this.Valid != that1.Valid {
		return false
	}
	if this.UserName != that1.UserName {
		return false
	}
	if this.TenantId != that1.TenantId {
		return false
	}
	if this.CredType != that1.CredType {
		return false
	}
	if this.InstanceName != that1.InstanceName {
		return false
	}
	return true
}
func (this *LookupAuthConfigRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&auth.LookupAuthConfigRequest{")
	s = append(s, "Cname: "+fmt.Sprintf("%#v", this.Cname)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LookupAuthConfigResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&auth.LookupAuthConfigResponse{")
	if this.ResponseStatus != nil {
		s = append(s, "ResponseStatus: "+fmt.Sprintf("%#v", this.ResponseStatus)+",\n")
	}
	if this.Auth != nil {
		s = append(s, "Auth: "+fmt.Sprintf("%#v", this.Auth)+",\n")
	}
	if this.Session != nil {
		s = append(s, "Session: "+fmt.Sprintf("%#v", this.Session)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LookupUserStatusRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&auth.LookupUserStatusRequest{")
	s = append(s, "Cname: "+fmt.Sprintf("%#v", this.Cname)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LookupUserStatusResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&auth.LookupUserStatusResponse{")
	if this.ResponseStatus != nil {
		s = append(s, "ResponseStatus: "+fmt.Sprintf("%#v", this.ResponseStatus)+",\n")
	}
	s = append(s, "Action: "+fmt.Sprintf("%#v", this.Action)+",\n")
	s = append(s, "TenantId: "+fmt.Sprintf("%#v", this.TenantId)+",\n")
	s = append(s, "InstanceName: "+fmt.Sprintf("%#v", this.InstanceName)+",\n")
	s = append(s, "TenantStatus: "+fmt.Sprintf("%#v", this.TenantStatus)+",\n")
	s = append(s, "UserIdmType: "+fmt.Sprintf("%#v", this.UserIdmType)+",\n")
	s = append(s, "UserStatus: "+fmt.Sprintf("%#v", this.UserStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ValidateAPICredentialRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&auth.ValidateAPICredentialRequest{")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ValidateAPICredentialResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&auth.ValidateAPICredentialResponse{")
	if this.ResponseStatus != nil {
		s = append(s, "ResponseStatus: "+fmt.Sprintf("%#v", this.ResponseStatus)+",\n")
	}
	s = append(s, "Valid: "+fmt.Sprintf("%#v", this.Valid)+",\n")
	s = append(s, "UserName: "+fmt.Sprintf("%#v", this.UserName)+",\n")
	s = append(s, "TenantId: "+fmt.Sprintf("%#v", this.TenantId)+",\n")
	s = append(s, "CredType: "+fmt.Sprintf("%#v", this.CredType)+",\n")
	s = append(s, "InstanceName: "+fmt.Sprintf("%#v", this.InstanceName)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPrivateCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomPrivateAPIClient is the client API for CustomPrivateAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomPrivateAPIClient interface {
	// LookupAuthConfig
	//
	// x-displayName: "Lookup Auth Config"
	// API to Lookup Auth Config
	LookupAuthConfig(ctx context.Context, in *LookupAuthConfigRequest, opts ...grpc.CallOption) (*LookupAuthConfigResponse, error)
	// LookupUserStatus
	//
	// x-displayName: "Lookup User Status"
	// API to Lookup User Status
	LookupUserStatus(ctx context.Context, in *LookupUserStatusRequest, opts ...grpc.CallOption) (*LookupUserStatusResponse, error)
	// Validate API credential
	//
	// x-displayName: "Validate API credential"
	// For API credential validation from API-GW.
	// To determine the validity of the credential, token in the request is the unique identifier to
	// lookup corresponding API credential object in eywaprime.
	ValidateAPICredential(ctx context.Context, in *ValidateAPICredentialRequest, opts ...grpc.CallOption) (*ValidateAPICredentialResponse, error)
}

type customPrivateAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomPrivateAPIClient(cc *grpc.ClientConn) CustomPrivateAPIClient {
	return &customPrivateAPIClient{cc}
}

func (c *customPrivateAPIClient) LookupAuthConfig(ctx context.Context, in *LookupAuthConfigRequest, opts ...grpc.CallOption) (*LookupAuthConfigResponse, error) {
	out := new(LookupAuthConfigResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.instance_management.auth.CustomPrivateAPI/LookupAuthConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customPrivateAPIClient) LookupUserStatus(ctx context.Context, in *LookupUserStatusRequest, opts ...grpc.CallOption) (*LookupUserStatusResponse, error) {
	out := new(LookupUserStatusResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.instance_management.auth.CustomPrivateAPI/LookupUserStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customPrivateAPIClient) ValidateAPICredential(ctx context.Context, in *ValidateAPICredentialRequest, opts ...grpc.CallOption) (*ValidateAPICredentialResponse, error) {
	out := new(ValidateAPICredentialResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.instance_management.auth.CustomPrivateAPI/ValidateAPICredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomPrivateAPIServer is the server API for CustomPrivateAPI service.
type CustomPrivateAPIServer interface {
	// LookupAuthConfig
	//
	// x-displayName: "Lookup Auth Config"
	// API to Lookup Auth Config
	LookupAuthConfig(context.Context, *LookupAuthConfigRequest) (*LookupAuthConfigResponse, error)
	// LookupUserStatus
	//
	// x-displayName: "Lookup User Status"
	// API to Lookup User Status
	LookupUserStatus(context.Context, *LookupUserStatusRequest) (*LookupUserStatusResponse, error)
	// Validate API credential
	//
	// x-displayName: "Validate API credential"
	// For API credential validation from API-GW.
	// To determine the validity of the credential, token in the request is the unique identifier to
	// lookup corresponding API credential object in eywaprime.
	ValidateAPICredential(context.Context, *ValidateAPICredentialRequest) (*ValidateAPICredentialResponse, error)
}

// UnimplementedCustomPrivateAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomPrivateAPIServer struct {
}

func (*UnimplementedCustomPrivateAPIServer) LookupAuthConfig(ctx context.Context, req *LookupAuthConfigRequest) (*LookupAuthConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LookupAuthConfig not implemented")
}
func (*UnimplementedCustomPrivateAPIServer) LookupUserStatus(ctx context.Context, req *LookupUserStatusRequest) (*LookupUserStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LookupUserStatus not implemented")
}
func (*UnimplementedCustomPrivateAPIServer) ValidateAPICredential(ctx context.Context, req *ValidateAPICredentialRequest) (*ValidateAPICredentialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateAPICredential not implemented")
}

func RegisterCustomPrivateAPIServer(s *grpc.Server, srv CustomPrivateAPIServer) {
	s.RegisterService(&_CustomPrivateAPI_serviceDesc, srv)
}

func _CustomPrivateAPI_LookupAuthConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupAuthConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomPrivateAPIServer).LookupAuthConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.instance_management.auth.CustomPrivateAPI/LookupAuthConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomPrivateAPIServer).LookupAuthConfig(ctx, req.(*LookupAuthConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomPrivateAPI_LookupUserStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupUserStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomPrivateAPIServer).LookupUserStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.instance_management.auth.CustomPrivateAPI/LookupUserStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomPrivateAPIServer).LookupUserStatus(ctx, req.(*LookupUserStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomPrivateAPI_ValidateAPICredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateAPICredentialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomPrivateAPIServer).ValidateAPICredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.instance_management.auth.CustomPrivateAPI/ValidateAPICredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomPrivateAPIServer).ValidateAPICredential(ctx, req.(*ValidateAPICredentialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomPrivateAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.instance_management.auth.CustomPrivateAPI",
	HandlerType: (*CustomPrivateAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LookupAuthConfig",
			Handler:    _CustomPrivateAPI_LookupAuthConfig_Handler,
		},
		{
			MethodName: "LookupUserStatus",
			Handler:    _CustomPrivateAPI_LookupUserStatus_Handler,
		},
		{
			MethodName: "ValidateAPICredential",
			Handler:    _CustomPrivateAPI_ValidateAPICredential_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/instance_management/auth/private_customapi.proto",
}

func (m *LookupAuthConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LookupAuthConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LookupAuthConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cname) > 0 {
		i -= len(m.Cname)
		copy(dAtA[i:], m.Cname)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Cname)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LookupAuthConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LookupAuthConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LookupAuthConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Session != nil {
		{
			size, err := m.Session.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Auth != nil {
		{
			size, err := m.Auth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.ResponseStatus != nil {
		{
			size, err := m.ResponseStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LookupUserStatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LookupUserStatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LookupUserStatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Cname) > 0 {
		i -= len(m.Cname)
		copy(dAtA[i:], m.Cname)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Cname)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LookupUserStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LookupUserStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LookupUserStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UserStatus != 0 {
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(m.UserStatus))
		i--
		dAtA[i] = 0x38
	}
	if m.UserIdmType != 0 {
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(m.UserIdmType))
		i--
		dAtA[i] = 0x30
	}
	if m.TenantStatus != 0 {
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(m.TenantStatus))
		i--
		dAtA[i] = 0x28
	}
	if len(m.InstanceName) > 0 {
		i -= len(m.InstanceName)
		copy(dAtA[i:], m.InstanceName)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.InstanceName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TenantId) > 0 {
		i -= len(m.TenantId)
		copy(dAtA[i:], m.TenantId)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.TenantId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Action != 0 {
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x10
	}
	if m.ResponseStatus != nil {
		{
			size, err := m.ResponseStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ValidateAPICredentialRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateAPICredentialRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ValidateAPICredentialRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ValidateAPICredentialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateAPICredentialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ValidateAPICredentialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InstanceName) > 0 {
		i -= len(m.InstanceName)
		copy(dAtA[i:], m.InstanceName)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.InstanceName)))
		i--
		dAtA[i] = 0x32
	}
	if m.CredType != 0 {
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(m.CredType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.TenantId) > 0 {
		i -= len(m.TenantId)
		copy(dAtA[i:], m.TenantId)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.TenantId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Valid {
		i--
		if m.Valid {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.ResponseStatus != nil {
		{
			size, err := m.ResponseStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPrivateCustomapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPrivateCustomapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LookupAuthConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Cname)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *LookupAuthConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResponseStatus != nil {
		l = m.ResponseStatus.Size()
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if m.Auth != nil {
		l = m.Auth.Size()
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if m.Session != nil {
		l = m.Session.Size()
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *LookupUserStatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Cname)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *LookupUserStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResponseStatus != nil {
		l = m.ResponseStatus.Size()
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovPrivateCustomapi(uint64(m.Action))
	}
	l = len(m.TenantId)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	l = len(m.InstanceName)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if m.TenantStatus != 0 {
		n += 1 + sovPrivateCustomapi(uint64(m.TenantStatus))
	}
	if m.UserIdmType != 0 {
		n += 1 + sovPrivateCustomapi(uint64(m.UserIdmType))
	}
	if m.UserStatus != 0 {
		n += 1 + sovPrivateCustomapi(uint64(m.UserStatus))
	}
	return n
}

func (m *ValidateAPICredentialRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *ValidateAPICredentialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResponseStatus != nil {
		l = m.ResponseStatus.Size()
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if m.Valid {
		n += 2
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	l = len(m.TenantId)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if m.CredType != 0 {
		n += 1 + sovPrivateCustomapi(uint64(m.CredType))
	}
	l = len(m.InstanceName)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func sovPrivateCustomapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPrivateCustomapi(x uint64) (n int) {
	return sovPrivateCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *LookupAuthConfigRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LookupAuthConfigRequest{`,
		`Cname:` + fmt.Sprintf("%v", this.Cname) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LookupAuthConfigResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LookupAuthConfigResponse{`,
		`ResponseStatus:` + strings.Replace(fmt.Sprintf("%v", this.ResponseStatus), "ResponseMeta", "schema.ResponseMeta", 1) + `,`,
		`Auth:` + strings.Replace(fmt.Sprintf("%v", this.Auth), "Auth", "Auth", 1) + `,`,
		`Session:` + strings.Replace(fmt.Sprintf("%v", this.Session), "Session", "Session", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LookupUserStatusRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LookupUserStatusRequest{`,
		`Cname:` + fmt.Sprintf("%v", this.Cname) + `,`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LookupUserStatusResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LookupUserStatusResponse{`,
		`ResponseStatus:` + strings.Replace(fmt.Sprintf("%v", this.ResponseStatus), "ResponseMeta", "schema.ResponseMeta", 1) + `,`,
		`Action:` + fmt.Sprintf("%v", this.Action) + `,`,
		`TenantId:` + fmt.Sprintf("%v", this.TenantId) + `,`,
		`InstanceName:` + fmt.Sprintf("%v", this.InstanceName) + `,`,
		`TenantStatus:` + fmt.Sprintf("%v", this.TenantStatus) + `,`,
		`UserIdmType:` + fmt.Sprintf("%v", this.UserIdmType) + `,`,
		`UserStatus:` + fmt.Sprintf("%v", this.UserStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ValidateAPICredentialRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ValidateAPICredentialRequest{`,
		`Token:` + fmt.Sprintf("%v", this.Token) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ValidateAPICredentialResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ValidateAPICredentialResponse{`,
		`ResponseStatus:` + strings.Replace(fmt.Sprintf("%v", this.ResponseStatus), "ResponseMeta", "schema.ResponseMeta", 1) + `,`,
		`Valid:` + fmt.Sprintf("%v", this.Valid) + `,`,
		`UserName:` + fmt.Sprintf("%v", this.UserName) + `,`,
		`TenantId:` + fmt.Sprintf("%v", this.TenantId) + `,`,
		`CredType:` + fmt.Sprintf("%v", this.CredType) + `,`,
		`InstanceName:` + fmt.Sprintf("%v", this.InstanceName) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPrivateCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *LookupAuthConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LookupAuthConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LookupAuthConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LookupAuthConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LookupAuthConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LookupAuthConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResponseStatus == nil {
				m.ResponseStatus = &schema.ResponseMeta{}
			}
			if err := m.ResponseStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Auth == nil {
				m.Auth = &Auth{}
			}
			if err := m.Auth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Session == nil {
				m.Session = &Session{}
			}
			if err := m.Session.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LookupUserStatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LookupUserStatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LookupUserStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LookupUserStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LookupUserStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LookupUserStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResponseStatus == nil {
				m.ResponseStatus = &schema.ResponseMeta{}
			}
			if err := m.ResponseStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= tenant.OperAction(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TenantId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TenantId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TenantStatus", wireType)
			}
			m.TenantStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TenantStatus |= tenant.OperStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIdmType", wireType)
			}
			m.UserIdmType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserIdmType |= user.IdmType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserStatus", wireType)
			}
			m.UserStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserStatus |= user.OperStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateAPICredentialRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateAPICredentialRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateAPICredentialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateAPICredentialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateAPICredentialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateAPICredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResponseStatus == nil {
				m.ResponseStatus = &schema.ResponseMeta{}
			}
			if err := m.ResponseStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Valid", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Valid = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TenantId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TenantId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CredType", wireType)
			}
			m.CredType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CredType |= api_credential.APICredentialType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPrivateCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPrivateCustomapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPrivateCustomapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPrivateCustomapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPrivateCustomapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPrivateCustomapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPrivateCustomapi = fmt.Errorf("proto: unexpected end of group")
)
